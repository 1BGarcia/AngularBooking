{"ast":null,"code":"\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest\n} = require(\"./utils\");\n\nconst schema = require(\"./loader-options.json\");\n\nconst MiniCssExtractPlugin = require(\"./index\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: {[key: string]: string } | undefined }} context\n * @returns {string}\n */\n\n\nfunction hotLoader(content, context) {\n  const accept = context.locals ? \"\" : \"module.hot.accept(undefined, cssReload);\";\n  return `${content}\n    if(module.hot) {\n      // ${Date.now()}\n      var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify({ ...context.options,\n    locals: !!context.locals\n  })});\n      module.hot.dispose(cssReload);\n      ${accept}\n    }\n  `;\n}\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\n\n\nfunction pitch(request) {\n  // @ts-ignore\n  const options = this.getOptions(\n  /** @type {Schema} */\n  schema);\n  const callback = this.async();\n  const optionsFromPlugin =\n  /** @type {TODO} */\n  this[MiniCssExtractPlugin.pluginSymbol];\n\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n\n  const {\n    webpack\n  } =\n  /** @type {Compiler} */\n  this._compiler;\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {{[key: string]: string } | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n\n      const identifierCountMap = new Map();\n      const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n      let lastDep;\n\n      for (const dependency of dependencies) {\n        if (!\n        /** @type {Dependency} */\n        dependency.identifier || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        const count = identifierCountMap.get(\n        /** @type {Dependency} */\n        dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n        /** @type {NormalModule} */\n\n        this._module.addDependency(lastDep = new CssDependency(\n        /** @type {Dependency} */\n        dependency,\n        /** @type {Dependency} */\n        dependency.context, count));\n\n        identifierCountMap.set(\n        /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport = // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n      /** @type {Dependency[] | [null, object][]} */\n\n\n      let dependencies;\n\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap, supports, layer]) => {\n          let identifier = id;\n          let context;\n\n          if (compilation) {\n            const module =\n            /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) : // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n\n      addDependencies(dependencies);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    const result = locals ? namedExport ? Object.keys(locals).map(key => `\\nexport var ${key} = ${JSON.stringify(\n    /** @type {{[key: string]: string }} */\n    locals[key])};`).join(\"\") : `\\n${esModule ? \"export default\" : \"module.exports =\"} ${JSON.stringify(locals)};` : esModule ? `\\nexport {};` : \"\";\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`;\n    resultSource += this.hot ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n\n  let {\n    publicPath\n  } =\n  /** @type {Compilation} */\n  this._compilation.outputOptions;\n\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n\n    let publicPathForExtract;\n\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath:\n      /** @type {string} */\n      publicPathForExtract\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      handleExports(exports);\n    });\n    return;\n  }\n\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n\n  const childCompiler =\n  /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions); // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n\n\n  childCompiler.options.module = { ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = { ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = { ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n  /** @type {string | Buffer} */\n\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source(); // Remove all chunk assets\n\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n\n    if (\n    /** @type {Compilation} */\n    compilation.errors.length > 0) {\n      callback(\n      /** @type {Compilation} */\n      compilation.errors[0]);\n      return;\n    }\n    /** @type {{ [name: string]: Source }} */\n\n\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n\n    const assetsInfo = new Map();\n\n    for (const asset of\n    /** @type {Compilation} */\n    compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n    /** @type {Compilation} */\n\n\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n    /** @type {Compilation} */\n\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n\n    let originalExports;\n\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\nmodule.exports = {\n  default: function loader() {},\n  pitch\n};","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/mini-css-extract-plugin/dist/loader.js"],"names":["path","require","findModuleById","evalModuleCode","AUTO_PUBLIC_PATH","ABSOLUTE_PUBLIC_PATH","SINGLE_DOT_PATH_SEGMENT","stringifyRequest","schema","MiniCssExtractPlugin","hotLoader","content","context","accept","locals","Date","now","loaderContext","join","__dirname","JSON","stringify","options","pitch","request","getOptions","callback","async","optionsFromPlugin","pluginSymbol","Error","webpack","_compiler","handleExports","originalExports","compilation","assets","assetsInfo","namedExport","esModule","addDependencies","dependencies","Array","isArray","identifierCountMap","Map","emit","lastDep","dependency","identifier","count","get","CssDependency","getCssDependency","_module","addDependency","set","exports","__esModule","default","Object","keys","forEach","key","map","id","media","sourceMap","supports","layer","module","rootContext","Buffer","from","undefined","e","result","resultSource","pluginName","hot","publicPath","_compilation","outputOptions","resourcePath","experimentalUseImportModule","importModule","publicPathForExtract","isAbsolutePublicPath","test","replace","error","loaders","slice","loaderIndex","childFilename","filename","childCompiler","createChildCompiler","parser","javascript","url","NodeTemplatePlugin","node","NodeTargetPlugin","apply","EntryOptionPlugin","library","EnableLibraryPlugin","applyEntryOption","child","type","import","LimitChunkCountPlugin","optimize","maxChunks","NormalModule","hooks","thisCompilation","tap","normalModuleHook","getCompilationHooks","loader","ident","source","processAssets","chunks","chunk","files","file","deleteAsset","runAsChild","entries","errors","length","create","asset","getAssets","name","info","fileDependencies","dep","contextDependencies","addContextDependency"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst path = require(\"path\");\n\nconst {\n  findModuleById,\n  evalModuleCode,\n  AUTO_PUBLIC_PATH,\n  ABSOLUTE_PUBLIC_PATH,\n  SINGLE_DOT_PATH_SEGMENT,\n  stringifyRequest\n} = require(\"./utils\");\n\nconst schema = require(\"./loader-options.json\");\n\nconst MiniCssExtractPlugin = require(\"./index\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").Compilation} Compilation */\n\n/** @typedef {import(\"webpack\").Chunk} Chunk */\n\n/** @typedef {import(\"webpack\").Module} Module */\n\n/** @typedef {import(\"webpack\").sources.Source} Source */\n\n/** @typedef {import(\"webpack\").AssetInfo} AssetInfo */\n\n/** @typedef {import(\"webpack\").NormalModule} NormalModule */\n\n/** @typedef {import(\"./index.js\").LoaderOptions} LoaderOptions */\n\n/** @typedef {any} TODO */\n\n/**\n * @typedef {Object} Dependency\n * @property {string} identifier\n * @property {string | null} context\n * @property {Buffer} content\n * @property {string} media\n * @property {string} [supports]\n * @property {string} [layer]\n * @property {Buffer} [sourceMap]\n */\n\n/**\n * @param {string} content\n * @param {{ loaderContext: import(\"webpack\").LoaderContext<LoaderOptions>, options: LoaderOptions, locals: {[key: string]: string } | undefined }} context\n * @returns {string}\n */\n\n\nfunction hotLoader(content, context) {\n  const accept = context.locals ? \"\" : \"module.hot.accept(undefined, cssReload);\";\n  return `${content}\n    if(module.hot) {\n      // ${Date.now()}\n      var cssReload = require(${stringifyRequest(context.loaderContext, path.join(__dirname, \"hmr/hotModuleReplacement.js\"))})(module.id, ${JSON.stringify({ ...context.options,\n    locals: !!context.locals\n  })});\n      module.hot.dispose(cssReload);\n      ${accept}\n    }\n  `;\n}\n/**\n * @this {import(\"webpack\").LoaderContext<LoaderOptions>}\n * @param {string} request\n */\n\n\nfunction pitch(request) {\n  // @ts-ignore\n  const options = this.getOptions(\n  /** @type {Schema} */\n  schema);\n  const callback = this.async();\n  const optionsFromPlugin =\n  /** @type {TODO} */\n  this[MiniCssExtractPlugin.pluginSymbol];\n\n  if (!optionsFromPlugin) {\n    callback(new Error(\"You forgot to add 'mini-css-extract-plugin' plugin (i.e. `{ plugins: [new MiniCssExtractPlugin()] }`), please read https://github.com/webpack-contrib/mini-css-extract-plugin#getting-started\"));\n    return;\n  }\n\n  const {\n    webpack\n  } =\n  /** @type {Compiler} */\n  this._compiler;\n  /**\n   * @param {TODO} originalExports\n   * @param {Compilation} [compilation]\n   * @param {{ [name: string]: Source }} [assets]\n   * @param {Map<string, AssetInfo>} [assetsInfo]\n   * @returns {void}\n   */\n\n  const handleExports = (originalExports, compilation, assets, assetsInfo) => {\n    /** @type {{[key: string]: string } | undefined} */\n    let locals;\n    let namedExport;\n    const esModule = typeof options.esModule !== \"undefined\" ? options.esModule : true;\n    /**\n     * @param {Dependency[] | [null, object][]} dependencies\n     */\n\n    const addDependencies = dependencies => {\n      if (!Array.isArray(dependencies) && dependencies != null) {\n        throw new Error(`Exported value was not extracted as an array: ${JSON.stringify(dependencies)}`);\n      }\n\n      const identifierCountMap = new Map();\n      const emit = typeof options.emit !== \"undefined\" ? options.emit : true;\n      let lastDep;\n\n      for (const dependency of dependencies) {\n        if (!\n        /** @type {Dependency} */\n        dependency.identifier || !emit) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        const count = identifierCountMap.get(\n        /** @type {Dependency} */\n        dependency.identifier) || 0;\n        const CssDependency = MiniCssExtractPlugin.getCssDependency(webpack);\n        /** @type {NormalModule} */\n\n        this._module.addDependency(lastDep = new CssDependency(\n        /** @type {Dependency} */\n        dependency,\n        /** @type {Dependency} */\n        dependency.context, count));\n\n        identifierCountMap.set(\n        /** @type {Dependency} */\n        dependency.identifier, count + 1);\n      }\n\n      if (lastDep && assets) {\n        lastDep.assets = assets;\n        lastDep.assetsInfo = assetsInfo;\n      }\n    };\n\n    try {\n      // eslint-disable-next-line no-underscore-dangle\n      const exports = originalExports.__esModule ? originalExports.default : originalExports;\n      namedExport = // eslint-disable-next-line no-underscore-dangle\n      originalExports.__esModule && (!originalExports.default || !(\"locals\" in originalExports.default));\n\n      if (namedExport) {\n        Object.keys(originalExports).forEach(key => {\n          if (key !== \"default\") {\n            if (!locals) {\n              locals = {};\n            }\n\n            locals[key] = originalExports[key];\n          }\n        });\n      } else {\n        locals = exports && exports.locals;\n      }\n      /** @type {Dependency[] | [null, object][]} */\n\n\n      let dependencies;\n\n      if (!Array.isArray(exports)) {\n        dependencies = [[null, exports]];\n      } else {\n        dependencies = exports.map(([id, content, media, sourceMap, supports, layer]) => {\n          let identifier = id;\n          let context;\n\n          if (compilation) {\n            const module =\n            /** @type {Module} */\n            findModuleById(compilation, id);\n            identifier = module.identifier();\n            ({\n              context\n            } = module);\n          } else {\n            // TODO check if this context is used somewhere\n            context = this.rootContext;\n          }\n\n          return {\n            identifier,\n            context,\n            content: Buffer.from(content),\n            media,\n            supports,\n            layer,\n            sourceMap: sourceMap ? Buffer.from(JSON.stringify(sourceMap)) : // eslint-disable-next-line no-undefined\n            undefined\n          };\n        });\n      }\n\n      addDependencies(dependencies);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    const result = locals ? namedExport ? Object.keys(locals).map(key => `\\nexport var ${key} = ${JSON.stringify(\n    /** @type {{[key: string]: string }} */\n    locals[key])};`).join(\"\") : `\\n${esModule ? \"export default\" : \"module.exports =\"} ${JSON.stringify(locals)};` : esModule ? `\\nexport {};` : \"\";\n    let resultSource = `// extracted by ${MiniCssExtractPlugin.pluginName}`;\n    resultSource += this.hot ? hotLoader(result, {\n      loaderContext: this,\n      options,\n      locals\n    }) : result;\n    callback(null, resultSource);\n  };\n\n  let {\n    publicPath\n  } =\n  /** @type {Compilation} */\n  this._compilation.outputOptions;\n\n  if (typeof options.publicPath === \"string\") {\n    // eslint-disable-next-line prefer-destructuring\n    publicPath = options.publicPath;\n  } else if (typeof options.publicPath === \"function\") {\n    publicPath = options.publicPath(this.resourcePath, this.rootContext);\n  }\n\n  if (publicPath === \"auto\") {\n    publicPath = AUTO_PUBLIC_PATH;\n  }\n\n  if (typeof optionsFromPlugin.experimentalUseImportModule === \"undefined\" && typeof this.importModule === \"function\" || optionsFromPlugin.experimentalUseImportModule) {\n    if (!this.importModule) {\n      callback(new Error(\"You are using 'experimentalUseImportModule' but 'this.importModule' is not available in loader context. You need to have at least webpack 5.33.2.\"));\n      return;\n    }\n\n    let publicPathForExtract;\n\n    if (typeof publicPath === \"string\") {\n      const isAbsolutePublicPath = /^[a-zA-Z][a-zA-Z\\d+\\-.]*?:/.test(publicPath);\n      publicPathForExtract = isAbsolutePublicPath ? publicPath : `${ABSOLUTE_PUBLIC_PATH}${publicPath.replace(/\\./g, SINGLE_DOT_PATH_SEGMENT)}`;\n    } else {\n      publicPathForExtract = publicPath;\n    }\n\n    this.importModule(`${this.resourcePath}.webpack[javascript/auto]!=!!!${request}`, {\n      layer: options.layer,\n      publicPath:\n      /** @type {string} */\n      publicPathForExtract\n    },\n    /**\n     * @param {Error | null | undefined} error\n     * @param {object} exports\n     */\n    (error, exports) => {\n      if (error) {\n        callback(error);\n        return;\n      }\n\n      handleExports(exports);\n    });\n    return;\n  }\n\n  const loaders = this.loaders.slice(this.loaderIndex + 1);\n  this.addDependency(this.resourcePath);\n  const childFilename = \"*\";\n  const outputOptions = {\n    filename: childFilename,\n    publicPath\n  };\n\n  const childCompiler =\n  /** @type {Compilation} */\n  this._compilation.createChildCompiler(`${MiniCssExtractPlugin.pluginName} ${request}`, outputOptions); // The templates are compiled and executed by NodeJS - similar to server side rendering\n  // Unfortunately this causes issues as some loaders require an absolute URL to support ES Modules\n  // The following config enables relative URL support for the child compiler\n\n\n  childCompiler.options.module = { ...childCompiler.options.module\n  };\n  childCompiler.options.module.parser = { ...childCompiler.options.module.parser\n  };\n  childCompiler.options.module.parser.javascript = { ...childCompiler.options.module.parser.javascript,\n    url: \"relative\"\n  };\n  const {\n    NodeTemplatePlugin\n  } = webpack.node;\n  const {\n    NodeTargetPlugin\n  } = webpack.node;\n  new NodeTemplatePlugin(outputOptions).apply(childCompiler);\n  new NodeTargetPlugin().apply(childCompiler);\n  const {\n    EntryOptionPlugin\n  } = webpack;\n  const {\n    library: {\n      EnableLibraryPlugin\n    }\n  } = webpack;\n  new EnableLibraryPlugin(\"commonjs2\").apply(childCompiler);\n  EntryOptionPlugin.applyEntryOption(childCompiler, this.context, {\n    child: {\n      library: {\n        type: \"commonjs2\"\n      },\n      import: [`!!${request}`]\n    }\n  });\n  const {\n    LimitChunkCountPlugin\n  } = webpack.optimize;\n  new LimitChunkCountPlugin({\n    maxChunks: 1\n  }).apply(childCompiler);\n  const {\n    NormalModule\n  } = webpack;\n  childCompiler.hooks.thisCompilation.tap(`${MiniCssExtractPlugin.pluginName} loader`,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    const normalModuleHook = NormalModule.getCompilationHooks(compilation).loader;\n    normalModuleHook.tap(`${MiniCssExtractPlugin.pluginName} loader`, (loaderContext, module) => {\n      if (module.request === request) {\n        // eslint-disable-next-line no-param-reassign\n        module.loaders = loaders.map(loader => {\n          return {\n            type: null,\n            loader: loader.path,\n            options: loader.options,\n            ident: loader.ident\n          };\n        });\n      }\n    });\n  });\n  /** @type {string | Buffer} */\n\n  let source;\n  childCompiler.hooks.compilation.tap(MiniCssExtractPlugin.pluginName,\n  /**\n   * @param {Compilation} compilation\n   */\n  compilation => {\n    compilation.hooks.processAssets.tap(MiniCssExtractPlugin.pluginName, () => {\n      source = compilation.assets[childFilename] && compilation.assets[childFilename].source(); // Remove all chunk assets\n\n      compilation.chunks.forEach(chunk => {\n        chunk.files.forEach(file => {\n          compilation.deleteAsset(file);\n        });\n      });\n    });\n  });\n  childCompiler.runAsChild((error, entries, compilation) => {\n    if (error) {\n      callback(error);\n      return;\n    }\n\n    if (\n    /** @type {Compilation} */\n    compilation.errors.length > 0) {\n      callback(\n      /** @type {Compilation} */\n      compilation.errors[0]);\n      return;\n    }\n    /** @type {{ [name: string]: Source }} */\n\n\n    const assets = Object.create(null);\n    /** @type {Map<string, AssetInfo>} */\n\n    const assetsInfo = new Map();\n\n    for (const asset of\n    /** @type {Compilation} */\n    compilation.getAssets()) {\n      assets[asset.name] = asset.source;\n      assetsInfo.set(asset.name, asset.info);\n    }\n    /** @type {Compilation} */\n\n\n    compilation.fileDependencies.forEach(dep => {\n      this.addDependency(dep);\n    }, this);\n    /** @type {Compilation} */\n\n    compilation.contextDependencies.forEach(dep => {\n      this.addContextDependency(dep);\n    }, this);\n\n    if (!source) {\n      callback(new Error(\"Didn't get a result from child compiler\"));\n      return;\n    }\n\n    let originalExports;\n\n    try {\n      originalExports = evalModuleCode(this, source, request);\n    } catch (e) {\n      callback(\n      /** @type {Error} */\n      e);\n      return;\n    }\n\n    handleExports(originalExports, compilation, assets, assetsInfo);\n  });\n}\n\nmodule.exports = {\n  default: function loader() {},\n  pitch\n};"]},"metadata":{},"sourceType":"script"}