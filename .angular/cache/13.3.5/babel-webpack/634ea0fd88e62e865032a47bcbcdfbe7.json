{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.execute = void 0;\n\nconst architect_1 = require(\"@angular-devkit/architect\");\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst path_1 = require(\"path\");\n\nconst url = __importStar(require(\"url\"));\n\nconst utils_1 = require(\"../../utils\");\n\nfunction runProtractor(root, options) {\n  const additionalProtractorConfig = {\n    baseUrl: options.baseUrl,\n    specs: options.specs && options.specs.length ? options.specs : undefined,\n    suite: options.suite,\n    jasmineNodeOpts: {\n      grep: options.grep,\n      invertGrep: options.invertGrep\n    }\n  }; // TODO: Protractor manages process.exit itself, so this target will allways quit the\n  // process. To work around this we run it in a subprocess.\n  // https://github.com/angular/protractor/issues/4160\n\n  return (0, utils_1.runModuleAsObservableFork)(root, 'protractor/built/launcher', 'init', [(0, path_1.resolve)(root, options.protractorConfig), additionalProtractorConfig]).toPromise();\n}\n\nfunction updateWebdriver() {\n  return _updateWebdriver.apply(this, arguments);\n}\n/**\n * @experimental Direct usage of this function is considered experimental.\n */\n\n\nfunction _updateWebdriver() {\n  _updateWebdriver = _asyncToGenerator(function* () {\n    // The webdriver-manager update command can only be accessed via a deep import.\n    const webdriverDeepImport = 'webdriver-manager/built/lib/cmds/update';\n    let path;\n\n    try {\n      const protractorPath = require.resolve('protractor');\n\n      path = require.resolve(webdriverDeepImport, {\n        paths: [protractorPath]\n      });\n    } catch (error) {\n      if (error.code !== 'MODULE_NOT_FOUND') {\n        throw error;\n      }\n    }\n\n    if (!path) {\n      throw new Error(core_1.tags.stripIndents`\n      Cannot automatically find webdriver-manager to update.\n      Update webdriver-manager manually and run 'ng e2e --no-webdriver-update' instead.\n    `);\n    }\n\n    const webdriverUpdate = yield Promise.resolve().then(() => __importStar(require(path))); // const webdriverUpdate = await import(path) as typeof import ('webdriver-manager/built/lib/cmds/update');\n    // run `webdriver-manager update --standalone false --gecko false --quiet`\n    // if you change this, update the command comment in prev line\n\n    return webdriverUpdate.program.run({\n      standalone: false,\n      gecko: false,\n      quiet: true\n    });\n  });\n  return _updateWebdriver.apply(this, arguments);\n}\n\nfunction execute(_x, _x2) {\n  return _execute.apply(this, arguments);\n}\n\nfunction _execute() {\n  _execute = _asyncToGenerator(function* (options, context) {\n    context.logger.warn('Protractor has been deprecated including its support in the Angular CLI. For additional information and alternatives, please see https://github.com/angular/protractor/issues/5502.'); // ensure that only one of these options is used\n\n    if (options.devServerTarget && options.baseUrl) {\n      throw new Error(core_1.tags.stripIndents`\n    The 'baseUrl' option cannot be used with 'devServerTarget'.\n    When present, 'devServerTarget' will be used to automatically setup 'baseUrl' for Protractor.\n    `);\n    }\n\n    if (options.webdriverUpdate) {\n      yield updateWebdriver();\n    }\n\n    let baseUrl = options.baseUrl;\n    let server;\n\n    if (options.devServerTarget) {\n      const target = (0, architect_1.targetFromTargetString)(options.devServerTarget);\n      const serverOptions = yield context.getTargetOptions(target);\n      const overrides = {\n        watch: false,\n        liveReload: false\n      };\n\n      if (options.host !== undefined) {\n        overrides.host = options.host;\n      } else if (typeof serverOptions.host === 'string') {\n        options.host = serverOptions.host;\n      } else {\n        options.host = overrides.host = 'localhost';\n      }\n\n      if (options.port !== undefined) {\n        overrides.port = options.port;\n      } else if (typeof serverOptions.port === 'number') {\n        options.port = serverOptions.port;\n      }\n\n      server = yield context.scheduleTarget(target, overrides);\n      const result = yield server.result;\n\n      if (!result.success) {\n        return {\n          success: false\n        };\n      }\n\n      if (typeof serverOptions.publicHost === 'string') {\n        let publicHost = serverOptions.publicHost;\n\n        if (!/^\\w+:\\/\\//.test(publicHost)) {\n          publicHost = `${serverOptions.ssl ? 'https' : 'http'}://${publicHost}`;\n        }\n\n        const clientUrl = url.parse(publicHost);\n        baseUrl = url.format(clientUrl);\n      } else if (typeof result.baseUrl === 'string') {\n        baseUrl = result.baseUrl;\n      } else if (typeof result.port === 'number') {\n        baseUrl = url.format({\n          protocol: serverOptions.ssl ? 'https' : 'http',\n          hostname: options.host,\n          port: result.port.toString()\n        });\n      }\n    } // Like the baseUrl in protractor config file when using the API we need to add\n    // a trailing slash when provide to the baseUrl.\n\n\n    if (baseUrl && !baseUrl.endsWith('/')) {\n      baseUrl += '/';\n    }\n\n    try {\n      return yield runProtractor(context.workspaceRoot, { ...options,\n        baseUrl\n      });\n    } catch {\n      return {\n        success: false\n      };\n    } finally {\n      if (server) {\n        yield server.stop();\n      }\n    }\n  });\n  return _execute.apply(this, arguments);\n}\n\nexports.execute = execute;\nexports.default = (0, architect_1.createBuilder)(execute);","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/@angular-devkit/build-angular/src/builders/protractor/index.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","execute","architect_1","require","core_1","path_1","url","utils_1","runProtractor","root","options","additionalProtractorConfig","baseUrl","specs","length","suite","jasmineNodeOpts","grep","invertGrep","runModuleAsObservableFork","resolve","protractorConfig","toPromise","updateWebdriver","webdriverDeepImport","path","protractorPath","paths","error","code","Error","tags","stripIndents","webdriverUpdate","Promise","then","program","run","standalone","gecko","quiet","context","logger","warn","devServerTarget","server","target","targetFromTargetString","serverOptions","getTargetOptions","overrides","watch","liveReload","host","port","scheduleTarget","success","publicHost","test","ssl","clientUrl","parse","format","protocol","hostname","toString","endsWith","workspaceRoot","stop","default","createBuilder"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.execute = void 0;\nconst architect_1 = require(\"@angular-devkit/architect\");\nconst core_1 = require(\"@angular-devkit/core\");\nconst path_1 = require(\"path\");\nconst url = __importStar(require(\"url\"));\nconst utils_1 = require(\"../../utils\");\nfunction runProtractor(root, options) {\n    const additionalProtractorConfig = {\n        baseUrl: options.baseUrl,\n        specs: options.specs && options.specs.length ? options.specs : undefined,\n        suite: options.suite,\n        jasmineNodeOpts: {\n            grep: options.grep,\n            invertGrep: options.invertGrep,\n        },\n    };\n    // TODO: Protractor manages process.exit itself, so this target will allways quit the\n    // process. To work around this we run it in a subprocess.\n    // https://github.com/angular/protractor/issues/4160\n    return (0, utils_1.runModuleAsObservableFork)(root, 'protractor/built/launcher', 'init', [\n        (0, path_1.resolve)(root, options.protractorConfig),\n        additionalProtractorConfig,\n    ]).toPromise();\n}\nasync function updateWebdriver() {\n    // The webdriver-manager update command can only be accessed via a deep import.\n    const webdriverDeepImport = 'webdriver-manager/built/lib/cmds/update';\n    let path;\n    try {\n        const protractorPath = require.resolve('protractor');\n        path = require.resolve(webdriverDeepImport, { paths: [protractorPath] });\n    }\n    catch (error) {\n        if (error.code !== 'MODULE_NOT_FOUND') {\n            throw error;\n        }\n    }\n    if (!path) {\n        throw new Error(core_1.tags.stripIndents `\n      Cannot automatically find webdriver-manager to update.\n      Update webdriver-manager manually and run 'ng e2e --no-webdriver-update' instead.\n    `);\n    }\n    const webdriverUpdate = await Promise.resolve().then(() => __importStar(require(path)));\n    // const webdriverUpdate = await import(path) as typeof import ('webdriver-manager/built/lib/cmds/update');\n    // run `webdriver-manager update --standalone false --gecko false --quiet`\n    // if you change this, update the command comment in prev line\n    return webdriverUpdate.program.run({\n        standalone: false,\n        gecko: false,\n        quiet: true,\n    });\n}\n/**\n * @experimental Direct usage of this function is considered experimental.\n */\nasync function execute(options, context) {\n    context.logger.warn('Protractor has been deprecated including its support in the Angular CLI. For additional information and alternatives, please see https://github.com/angular/protractor/issues/5502.');\n    // ensure that only one of these options is used\n    if (options.devServerTarget && options.baseUrl) {\n        throw new Error(core_1.tags.stripIndents `\n    The 'baseUrl' option cannot be used with 'devServerTarget'.\n    When present, 'devServerTarget' will be used to automatically setup 'baseUrl' for Protractor.\n    `);\n    }\n    if (options.webdriverUpdate) {\n        await updateWebdriver();\n    }\n    let baseUrl = options.baseUrl;\n    let server;\n    if (options.devServerTarget) {\n        const target = (0, architect_1.targetFromTargetString)(options.devServerTarget);\n        const serverOptions = await context.getTargetOptions(target);\n        const overrides = {\n            watch: false,\n            liveReload: false,\n        };\n        if (options.host !== undefined) {\n            overrides.host = options.host;\n        }\n        else if (typeof serverOptions.host === 'string') {\n            options.host = serverOptions.host;\n        }\n        else {\n            options.host = overrides.host = 'localhost';\n        }\n        if (options.port !== undefined) {\n            overrides.port = options.port;\n        }\n        else if (typeof serverOptions.port === 'number') {\n            options.port = serverOptions.port;\n        }\n        server = await context.scheduleTarget(target, overrides);\n        const result = await server.result;\n        if (!result.success) {\n            return { success: false };\n        }\n        if (typeof serverOptions.publicHost === 'string') {\n            let publicHost = serverOptions.publicHost;\n            if (!/^\\w+:\\/\\//.test(publicHost)) {\n                publicHost = `${serverOptions.ssl ? 'https' : 'http'}://${publicHost}`;\n            }\n            const clientUrl = url.parse(publicHost);\n            baseUrl = url.format(clientUrl);\n        }\n        else if (typeof result.baseUrl === 'string') {\n            baseUrl = result.baseUrl;\n        }\n        else if (typeof result.port === 'number') {\n            baseUrl = url.format({\n                protocol: serverOptions.ssl ? 'https' : 'http',\n                hostname: options.host,\n                port: result.port.toString(),\n            });\n        }\n    }\n    // Like the baseUrl in protractor config file when using the API we need to add\n    // a trailing slash when provide to the baseUrl.\n    if (baseUrl && !baseUrl.endsWith('/')) {\n        baseUrl += '/';\n    }\n    try {\n        return await runProtractor(context.workspaceRoot, { ...options, baseUrl });\n    }\n    catch {\n        return { success: false };\n    }\n    finally {\n        if (server) {\n            await server.stop();\n        }\n    }\n}\nexports.execute = execute;\nexports.default = (0, architect_1.createBuilder)(execute);\n"]},"metadata":{},"sourceType":"script"}