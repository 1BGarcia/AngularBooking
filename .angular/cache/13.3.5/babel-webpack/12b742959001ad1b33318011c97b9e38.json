{"ast":null,"code":"var _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\n\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, {\n  enumerable: true,\n  configurable: true,\n  writable: true,\n  value\n}) : obj[key] = value;\n\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {})) if (__hasOwnProp.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n\n  if (__getOwnPropSymbols) for (var prop of __getOwnPropSymbols(b)) {\n    if (__propIsEnum.call(b, prop)) __defNormalProp(a, prop, b[prop]);\n  }\n  return a;\n};\n\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\n\nvar __markAsModule = target => __defProp(target, \"__esModule\", {\n  value: true\n});\n\nvar __export = (target, all) => {\n  for (var name in all) __defProp(target, name, {\n    get: all[name],\n    enumerable: true\n  });\n};\n\nvar __reExport = (target, module2, copyDefault, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2)) if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\")) __defProp(target, key, {\n      get: () => module2[key],\n      enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable\n    });\n  }\n\n  return target;\n};\n\nvar __toESM = (module2, isNodeMode) => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", !isNodeMode && module2 && module2.__esModule ? {\n    get: () => module2.default,\n    enumerable: true\n  } : {\n    value: module2,\n    enumerable: true\n  })), module2);\n};\n\nvar __toCommonJS = /* @__PURE__ */(cache => {\n  return (module2, temp) => {\n    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);\n  };\n})(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */new WeakMap() : 0); // lib/npm/node.ts\n\n\nvar node_exports = {};\n\n__export(node_exports, {\n  analyzeMetafile: () => analyzeMetafile,\n  analyzeMetafileSync: () => analyzeMetafileSync,\n  build: () => build,\n  buildSync: () => buildSync,\n  default: () => node_default,\n  formatMessages: () => formatMessages,\n  formatMessagesSync: () => formatMessagesSync,\n  initialize: () => initialize,\n  serve: () => serve,\n  transform: () => transform,\n  transformSync: () => transformSync,\n  version: () => version\n}); // lib/shared/stdio_protocol.ts\n\n\nfunction encodePacket(packet) {\n  let visit = value => {\n    if (value === null) {\n      bb.write8(0);\n    } else if (typeof value === \"boolean\") {\n      bb.write8(1);\n      bb.write8(+value);\n    } else if (typeof value === \"number\") {\n      bb.write8(2);\n      bb.write32(value | 0);\n    } else if (typeof value === \"string\") {\n      bb.write8(3);\n      bb.write(encodeUTF8(value));\n    } else if (value instanceof Uint8Array) {\n      bb.write8(4);\n      bb.write(value);\n    } else if (value instanceof Array) {\n      bb.write8(5);\n      bb.write32(value.length);\n\n      for (let item of value) {\n        visit(item);\n      }\n    } else {\n      let keys = Object.keys(value);\n      bb.write8(6);\n      bb.write32(keys.length);\n\n      for (let key of keys) {\n        bb.write(encodeUTF8(key));\n        visit(value[key]);\n      }\n    }\n  };\n\n  let bb = new ByteBuffer();\n  bb.write32(0);\n  bb.write32(packet.id << 1 | +!packet.isRequest);\n  visit(packet.value);\n  writeUInt32LE(bb.buf, bb.len - 4, 0);\n  return bb.buf.subarray(0, bb.len);\n}\n\nfunction decodePacket(bytes) {\n  let visit = () => {\n    switch (bb.read8()) {\n      case 0:\n        return null;\n\n      case 1:\n        return !!bb.read8();\n\n      case 2:\n        return bb.read32();\n\n      case 3:\n        return decodeUTF8(bb.read());\n\n      case 4:\n        return bb.read();\n\n      case 5:\n        {\n          let count = bb.read32();\n          let value2 = [];\n\n          for (let i = 0; i < count; i++) {\n            value2.push(visit());\n          }\n\n          return value2;\n        }\n\n      case 6:\n        {\n          let count = bb.read32();\n          let value2 = {};\n\n          for (let i = 0; i < count; i++) {\n            value2[decodeUTF8(bb.read())] = visit();\n          }\n\n          return value2;\n        }\n\n      default:\n        throw new Error(\"Invalid packet\");\n    }\n  };\n\n  let bb = new ByteBuffer(bytes);\n  let id = bb.read32();\n  let isRequest = (id & 1) === 0;\n  id >>>= 1;\n  let value = visit();\n\n  if (bb.ptr !== bytes.length) {\n    throw new Error(\"Invalid packet\");\n  }\n\n  return {\n    id,\n    isRequest,\n    value\n  };\n}\n\nvar ByteBuffer = class {\n  constructor(buf = new Uint8Array(1024)) {\n    this.buf = buf;\n    this.len = 0;\n    this.ptr = 0;\n  }\n\n  _write(delta) {\n    if (this.len + delta > this.buf.length) {\n      let clone = new Uint8Array((this.len + delta) * 2);\n      clone.set(this.buf);\n      this.buf = clone;\n    }\n\n    this.len += delta;\n    return this.len - delta;\n  }\n\n  write8(value) {\n    let offset = this._write(1);\n\n    this.buf[offset] = value;\n  }\n\n  write32(value) {\n    let offset = this._write(4);\n\n    writeUInt32LE(this.buf, value, offset);\n  }\n\n  write(bytes) {\n    let offset = this._write(4 + bytes.length);\n\n    writeUInt32LE(this.buf, bytes.length, offset);\n    this.buf.set(bytes, offset + 4);\n  }\n\n  _read(delta) {\n    if (this.ptr + delta > this.buf.length) {\n      throw new Error(\"Invalid packet\");\n    }\n\n    this.ptr += delta;\n    return this.ptr - delta;\n  }\n\n  read8() {\n    return this.buf[this._read(1)];\n  }\n\n  read32() {\n    return readUInt32LE(this.buf, this._read(4));\n  }\n\n  read() {\n    let length = this.read32();\n    let bytes = new Uint8Array(length);\n\n    let ptr = this._read(bytes.length);\n\n    bytes.set(this.buf.subarray(ptr, ptr + length));\n    return bytes;\n  }\n\n};\nvar encodeUTF8;\nvar decodeUTF8;\n\nif (typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\") {\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n\n  encodeUTF8 = text => encoder.encode(text);\n\n  decodeUTF8 = bytes => decoder.decode(bytes);\n} else if (typeof Buffer !== \"undefined\") {\n  encodeUTF8 = text => {\n    let buffer = Buffer.from(text);\n\n    if (!(buffer instanceof Uint8Array)) {\n      buffer = new Uint8Array(buffer);\n    }\n\n    return buffer;\n  };\n\n  decodeUTF8 = bytes => {\n    let {\n      buffer,\n      byteOffset,\n      byteLength\n    } = bytes;\n    return Buffer.from(buffer, byteOffset, byteLength).toString();\n  };\n} else {\n  throw new Error(\"No UTF-8 codec found\");\n}\n\nfunction readUInt32LE(buffer, offset) {\n  return buffer[offset++] | buffer[offset++] << 8 | buffer[offset++] << 16 | buffer[offset++] << 24;\n}\n\nfunction writeUInt32LE(buffer, value, offset) {\n  buffer[offset++] = value;\n  buffer[offset++] = value >> 8;\n  buffer[offset++] = value >> 16;\n  buffer[offset++] = value >> 24;\n} // lib/shared/common.ts\n\n\nfunction validateTarget(target) {\n  target += \"\";\n  if (target.indexOf(\",\") >= 0) throw new Error(`Invalid target: ${target}`);\n  return target;\n}\n\nvar canBeAnything = () => null;\n\nvar mustBeBoolean = value => typeof value === \"boolean\" ? null : \"a boolean\";\n\nvar mustBeBooleanOrObject = value => typeof value === \"boolean\" || typeof value === \"object\" && !Array.isArray(value) ? null : \"a boolean or an object\";\n\nvar mustBeString = value => typeof value === \"string\" ? null : \"a string\";\n\nvar mustBeRegExp = value => value instanceof RegExp ? null : \"a RegExp object\";\n\nvar mustBeInteger = value => typeof value === \"number\" && value === (value | 0) ? null : \"an integer\";\n\nvar mustBeFunction = value => typeof value === \"function\" ? null : \"a function\";\n\nvar mustBeArray = value => Array.isArray(value) ? null : \"an array\";\n\nvar mustBeObject = value => typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"an object\";\n\nvar mustBeArrayOrRecord = value => typeof value === \"object\" && value !== null ? null : \"an array or an object\";\n\nvar mustBeObjectOrNull = value => typeof value === \"object\" && !Array.isArray(value) ? null : \"an object or null\";\n\nvar mustBeStringOrBoolean = value => typeof value === \"string\" || typeof value === \"boolean\" ? null : \"a string or a boolean\";\n\nvar mustBeStringOrObject = value => typeof value === \"string\" || typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"a string or an object\";\n\nvar mustBeStringOrArray = value => typeof value === \"string\" || Array.isArray(value) ? null : \"a string or an array\";\n\nvar mustBeStringOrUint8Array = value => typeof value === \"string\" || value instanceof Uint8Array ? null : \"a string or a Uint8Array\";\n\nfunction getFlag(object, keys, key, mustBeFn) {\n  let value = object[key];\n  keys[key + \"\"] = true;\n  if (value === void 0) return void 0;\n  let mustBe = mustBeFn(value);\n  if (mustBe !== null) throw new Error(`\"${key}\" must be ${mustBe}`);\n  return value;\n}\n\nfunction checkForInvalidFlags(object, keys, where) {\n  for (let key in object) {\n    if (!(key in keys)) {\n      throw new Error(`Invalid option ${where}: \"${key}\"`);\n    }\n  }\n}\n\nfunction validateInitializeOptions(options) {\n  let keys = /* @__PURE__ */Object.create(null);\n  let wasmURL = getFlag(options, keys, \"wasmURL\", mustBeString);\n  let worker = getFlag(options, keys, \"worker\", mustBeBoolean);\n  checkForInvalidFlags(options, keys, \"in startService() call\");\n  return {\n    wasmURL,\n    worker\n  };\n}\n\nfunction validateMangleCache(mangleCache) {\n  let validated;\n\n  if (mangleCache !== void 0) {\n    validated = /* @__PURE__ */Object.create(null);\n\n    for (let key of Object.keys(mangleCache)) {\n      let value = mangleCache[key];\n\n      if (typeof value === \"string\" || value === false) {\n        validated[key] = value;\n      } else {\n        throw new Error(`Expected ${JSON.stringify(key)} in mangle cache to map to either a string or false`);\n      }\n    }\n  }\n\n  return validated;\n}\n\nfunction pushLogFlags(flags, options, keys, isTTY2, logLevelDefault) {\n  let color = getFlag(options, keys, \"color\", mustBeBoolean);\n  let logLevel = getFlag(options, keys, \"logLevel\", mustBeString);\n  let logLimit = getFlag(options, keys, \"logLimit\", mustBeInteger);\n  if (color !== void 0) flags.push(`--color=${color}`);else if (isTTY2) flags.push(`--color=true`);\n  flags.push(`--log-level=${logLevel || logLevelDefault}`);\n  flags.push(`--log-limit=${logLimit || 0}`);\n}\n\nfunction pushCommonFlags(flags, options, keys) {\n  let legalComments = getFlag(options, keys, \"legalComments\", mustBeString);\n  let sourceRoot = getFlag(options, keys, \"sourceRoot\", mustBeString);\n  let sourcesContent = getFlag(options, keys, \"sourcesContent\", mustBeBoolean);\n  let target = getFlag(options, keys, \"target\", mustBeStringOrArray);\n  let format = getFlag(options, keys, \"format\", mustBeString);\n  let globalName = getFlag(options, keys, \"globalName\", mustBeString);\n  let mangleProps = getFlag(options, keys, \"mangleProps\", mustBeRegExp);\n  let reserveProps = getFlag(options, keys, \"reserveProps\", mustBeRegExp);\n  let minify = getFlag(options, keys, \"minify\", mustBeBoolean);\n  let minifySyntax = getFlag(options, keys, \"minifySyntax\", mustBeBoolean);\n  let minifyWhitespace = getFlag(options, keys, \"minifyWhitespace\", mustBeBoolean);\n  let minifyIdentifiers = getFlag(options, keys, \"minifyIdentifiers\", mustBeBoolean);\n  let drop = getFlag(options, keys, \"drop\", mustBeArray);\n  let charset = getFlag(options, keys, \"charset\", mustBeString);\n  let treeShaking = getFlag(options, keys, \"treeShaking\", mustBeBoolean);\n  let ignoreAnnotations = getFlag(options, keys, \"ignoreAnnotations\", mustBeBoolean);\n  let jsx = getFlag(options, keys, \"jsx\", mustBeString);\n  let jsxFactory = getFlag(options, keys, \"jsxFactory\", mustBeString);\n  let jsxFragment = getFlag(options, keys, \"jsxFragment\", mustBeString);\n  let define = getFlag(options, keys, \"define\", mustBeObject);\n  let pure = getFlag(options, keys, \"pure\", mustBeArray);\n  let keepNames = getFlag(options, keys, \"keepNames\", mustBeBoolean);\n  if (legalComments) flags.push(`--legal-comments=${legalComments}`);\n  if (sourceRoot !== void 0) flags.push(`--source-root=${sourceRoot}`);\n  if (sourcesContent !== void 0) flags.push(`--sources-content=${sourcesContent}`);\n\n  if (target) {\n    if (Array.isArray(target)) flags.push(`--target=${Array.from(target).map(validateTarget).join(\",\")}`);else flags.push(`--target=${validateTarget(target)}`);\n  }\n\n  if (format) flags.push(`--format=${format}`);\n  if (globalName) flags.push(`--global-name=${globalName}`);\n  if (minify) flags.push(\"--minify\");\n  if (minifySyntax) flags.push(\"--minify-syntax\");\n  if (minifyWhitespace) flags.push(\"--minify-whitespace\");\n  if (minifyIdentifiers) flags.push(\"--minify-identifiers\");\n  if (charset) flags.push(`--charset=${charset}`);\n  if (treeShaking !== void 0) flags.push(`--tree-shaking=${treeShaking}`);\n  if (ignoreAnnotations) flags.push(`--ignore-annotations`);\n  if (drop) for (let what of drop) flags.push(`--drop:${what}`);\n  if (mangleProps) flags.push(`--mangle-props=${mangleProps.source}`);\n  if (reserveProps) flags.push(`--reserve-props=${reserveProps.source}`);\n  if (jsx) flags.push(`--jsx=${jsx}`);\n  if (jsxFactory) flags.push(`--jsx-factory=${jsxFactory}`);\n  if (jsxFragment) flags.push(`--jsx-fragment=${jsxFragment}`);\n\n  if (define) {\n    for (let key in define) {\n      if (key.indexOf(\"=\") >= 0) throw new Error(`Invalid define: ${key}`);\n      flags.push(`--define:${key}=${define[key]}`);\n    }\n  }\n\n  if (pure) for (let fn of pure) flags.push(`--pure:${fn}`);\n  if (keepNames) flags.push(`--keep-names`);\n}\n\nfunction flagsForBuildOptions(callName, options, isTTY2, logLevelDefault, writeDefault) {\n  var _a2;\n\n  let flags = [];\n  let entries = [];\n  let keys = /* @__PURE__ */Object.create(null);\n  let stdinContents = null;\n  let stdinResolveDir = null;\n  let watchMode = null;\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let bundle = getFlag(options, keys, \"bundle\", mustBeBoolean);\n  let watch = getFlag(options, keys, \"watch\", mustBeBooleanOrObject);\n  let splitting = getFlag(options, keys, \"splitting\", mustBeBoolean);\n  let preserveSymlinks = getFlag(options, keys, \"preserveSymlinks\", mustBeBoolean);\n  let metafile = getFlag(options, keys, \"metafile\", mustBeBoolean);\n  let outfile = getFlag(options, keys, \"outfile\", mustBeString);\n  let outdir = getFlag(options, keys, \"outdir\", mustBeString);\n  let outbase = getFlag(options, keys, \"outbase\", mustBeString);\n  let platform = getFlag(options, keys, \"platform\", mustBeString);\n  let tsconfig = getFlag(options, keys, \"tsconfig\", mustBeString);\n  let resolveExtensions = getFlag(options, keys, \"resolveExtensions\", mustBeArray);\n  let nodePathsInput = getFlag(options, keys, \"nodePaths\", mustBeArray);\n  let mainFields = getFlag(options, keys, \"mainFields\", mustBeArray);\n  let conditions = getFlag(options, keys, \"conditions\", mustBeArray);\n  let external = getFlag(options, keys, \"external\", mustBeArray);\n  let loader = getFlag(options, keys, \"loader\", mustBeObject);\n  let outExtension = getFlag(options, keys, \"outExtension\", mustBeObject);\n  let publicPath = getFlag(options, keys, \"publicPath\", mustBeString);\n  let entryNames = getFlag(options, keys, \"entryNames\", mustBeString);\n  let chunkNames = getFlag(options, keys, \"chunkNames\", mustBeString);\n  let assetNames = getFlag(options, keys, \"assetNames\", mustBeString);\n  let inject = getFlag(options, keys, \"inject\", mustBeArray);\n  let banner = getFlag(options, keys, \"banner\", mustBeObject);\n  let footer = getFlag(options, keys, \"footer\", mustBeObject);\n  let entryPoints = getFlag(options, keys, \"entryPoints\", mustBeArrayOrRecord);\n  let absWorkingDir = getFlag(options, keys, \"absWorkingDir\", mustBeString);\n  let stdin = getFlag(options, keys, \"stdin\", mustBeObject);\n  let write = (_a2 = getFlag(options, keys, \"write\", mustBeBoolean)) != null ? _a2 : writeDefault;\n  let allowOverwrite = getFlag(options, keys, \"allowOverwrite\", mustBeBoolean);\n  let incremental = getFlag(options, keys, \"incremental\", mustBeBoolean) === true;\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  keys.plugins = true;\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap) flags.push(`--sourcemap${sourcemap === true ? \"\" : `=${sourcemap}`}`);\n  if (bundle) flags.push(\"--bundle\");\n  if (allowOverwrite) flags.push(\"--allow-overwrite\");\n\n  if (watch) {\n    flags.push(\"--watch\");\n\n    if (typeof watch === \"boolean\") {\n      watchMode = {};\n    } else {\n      let watchKeys = /* @__PURE__ */Object.create(null);\n      let onRebuild = getFlag(watch, watchKeys, \"onRebuild\", mustBeFunction);\n      checkForInvalidFlags(watch, watchKeys, `on \"watch\" in ${callName}() call`);\n      watchMode = {\n        onRebuild\n      };\n    }\n  }\n\n  if (splitting) flags.push(\"--splitting\");\n  if (preserveSymlinks) flags.push(\"--preserve-symlinks\");\n  if (metafile) flags.push(`--metafile`);\n  if (outfile) flags.push(`--outfile=${outfile}`);\n  if (outdir) flags.push(`--outdir=${outdir}`);\n  if (outbase) flags.push(`--outbase=${outbase}`);\n  if (platform) flags.push(`--platform=${platform}`);\n  if (tsconfig) flags.push(`--tsconfig=${tsconfig}`);\n\n  if (resolveExtensions) {\n    let values = [];\n\n    for (let value of resolveExtensions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0) throw new Error(`Invalid resolve extension: ${value}`);\n      values.push(value);\n    }\n\n    flags.push(`--resolve-extensions=${values.join(\",\")}`);\n  }\n\n  if (publicPath) flags.push(`--public-path=${publicPath}`);\n  if (entryNames) flags.push(`--entry-names=${entryNames}`);\n  if (chunkNames) flags.push(`--chunk-names=${chunkNames}`);\n  if (assetNames) flags.push(`--asset-names=${assetNames}`);\n\n  if (mainFields) {\n    let values = [];\n\n    for (let value of mainFields) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0) throw new Error(`Invalid main field: ${value}`);\n      values.push(value);\n    }\n\n    flags.push(`--main-fields=${values.join(\",\")}`);\n  }\n\n  if (conditions) {\n    let values = [];\n\n    for (let value of conditions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0) throw new Error(`Invalid condition: ${value}`);\n      values.push(value);\n    }\n\n    flags.push(`--conditions=${values.join(\",\")}`);\n  }\n\n  if (external) for (let name of external) flags.push(`--external:${name}`);\n\n  if (banner) {\n    for (let type in banner) {\n      if (type.indexOf(\"=\") >= 0) throw new Error(`Invalid banner file type: ${type}`);\n      flags.push(`--banner:${type}=${banner[type]}`);\n    }\n  }\n\n  if (footer) {\n    for (let type in footer) {\n      if (type.indexOf(\"=\") >= 0) throw new Error(`Invalid footer file type: ${type}`);\n      flags.push(`--footer:${type}=${footer[type]}`);\n    }\n  }\n\n  if (inject) for (let path3 of inject) flags.push(`--inject:${path3}`);\n\n  if (loader) {\n    for (let ext in loader) {\n      if (ext.indexOf(\"=\") >= 0) throw new Error(`Invalid loader extension: ${ext}`);\n      flags.push(`--loader:${ext}=${loader[ext]}`);\n    }\n  }\n\n  if (outExtension) {\n    for (let ext in outExtension) {\n      if (ext.indexOf(\"=\") >= 0) throw new Error(`Invalid out extension: ${ext}`);\n      flags.push(`--out-extension:${ext}=${outExtension[ext]}`);\n    }\n  }\n\n  if (entryPoints) {\n    if (Array.isArray(entryPoints)) {\n      for (let entryPoint of entryPoints) {\n        entries.push([\"\", entryPoint + \"\"]);\n      }\n    } else {\n      for (let [key, value] of Object.entries(entryPoints)) {\n        entries.push([key + \"\", value + \"\"]);\n      }\n    }\n  }\n\n  if (stdin) {\n    let stdinKeys = /* @__PURE__ */Object.create(null);\n    let contents = getFlag(stdin, stdinKeys, \"contents\", mustBeString);\n    let resolveDir = getFlag(stdin, stdinKeys, \"resolveDir\", mustBeString);\n    let sourcefile = getFlag(stdin, stdinKeys, \"sourcefile\", mustBeString);\n    let loader2 = getFlag(stdin, stdinKeys, \"loader\", mustBeString);\n    checkForInvalidFlags(stdin, stdinKeys, 'in \"stdin\" object');\n    if (sourcefile) flags.push(`--sourcefile=${sourcefile}`);\n    if (loader2) flags.push(`--loader=${loader2}`);\n    if (resolveDir) stdinResolveDir = resolveDir + \"\";\n    stdinContents = contents ? contents + \"\" : \"\";\n  }\n\n  let nodePaths = [];\n\n  if (nodePathsInput) {\n    for (let value of nodePathsInput) {\n      value += \"\";\n      nodePaths.push(value);\n    }\n  }\n\n  return {\n    entries,\n    flags,\n    write,\n    stdinContents,\n    stdinResolveDir,\n    absWorkingDir,\n    incremental,\n    nodePaths,\n    watch: watchMode,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\n\nfunction flagsForTransformOptions(callName, options, isTTY2, logLevelDefault) {\n  let flags = [];\n  let keys = /* @__PURE__ */Object.create(null);\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let tsconfigRaw = getFlag(options, keys, \"tsconfigRaw\", mustBeStringOrObject);\n  let sourcefile = getFlag(options, keys, \"sourcefile\", mustBeString);\n  let loader = getFlag(options, keys, \"loader\", mustBeString);\n  let banner = getFlag(options, keys, \"banner\", mustBeString);\n  let footer = getFlag(options, keys, \"footer\", mustBeString);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap) flags.push(`--sourcemap=${sourcemap === true ? \"external\" : sourcemap}`);\n  if (tsconfigRaw) flags.push(`--tsconfig-raw=${typeof tsconfigRaw === \"string\" ? tsconfigRaw : JSON.stringify(tsconfigRaw)}`);\n  if (sourcefile) flags.push(`--sourcefile=${sourcefile}`);\n  if (loader) flags.push(`--loader=${loader}`);\n  if (banner) flags.push(`--banner=${banner}`);\n  if (footer) flags.push(`--footer=${footer}`);\n  return {\n    flags,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\n\nfunction createChannel(streamIn) {\n  let responseCallbacks = /* @__PURE__ */new Map();\n  let pluginCallbacks = /* @__PURE__ */new Map();\n  let watchCallbacks = /* @__PURE__ */new Map();\n  let serveCallbacks = /* @__PURE__ */new Map();\n  let isClosed = false;\n  let nextRequestID = 0;\n  let nextBuildKey = 0;\n  let stdout = new Uint8Array(16 * 1024);\n  let stdoutUsed = 0;\n\n  let readFromStdout = chunk => {\n    let limit = stdoutUsed + chunk.length;\n\n    if (limit > stdout.length) {\n      let swap = new Uint8Array(limit * 2);\n      swap.set(stdout);\n      stdout = swap;\n    }\n\n    stdout.set(chunk, stdoutUsed);\n    stdoutUsed += chunk.length;\n    let offset = 0;\n\n    while (offset + 4 <= stdoutUsed) {\n      let length = readUInt32LE(stdout, offset);\n\n      if (offset + 4 + length > stdoutUsed) {\n        break;\n      }\n\n      offset += 4;\n      handleIncomingPacket(stdout.subarray(offset, offset + length));\n      offset += length;\n    }\n\n    if (offset > 0) {\n      stdout.copyWithin(0, offset, stdoutUsed);\n      stdoutUsed -= offset;\n    }\n  };\n\n  let afterClose = () => {\n    isClosed = true;\n\n    for (let callback of responseCallbacks.values()) {\n      callback(\"The service was stopped\", null);\n    }\n\n    responseCallbacks.clear();\n\n    for (let callbacks of serveCallbacks.values()) {\n      callbacks.onWait(\"The service was stopped\");\n    }\n\n    serveCallbacks.clear();\n\n    for (let callback of watchCallbacks.values()) {\n      try {\n        callback(new Error(\"The service was stopped\"), null);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n\n    watchCallbacks.clear();\n  };\n\n  let sendRequest = (refs, value, callback) => {\n    if (isClosed) return callback(\"The service is no longer running\", null);\n    let id = nextRequestID++;\n    responseCallbacks.set(id, (error, response) => {\n      try {\n        callback(error, response);\n      } finally {\n        if (refs) refs.unref();\n      }\n    });\n    if (refs) refs.ref();\n    streamIn.writeToStdin(encodePacket({\n      id,\n      isRequest: true,\n      value\n    }));\n  };\n\n  let sendResponse = (id, value) => {\n    if (isClosed) throw new Error(\"The service is no longer running\");\n    streamIn.writeToStdin(encodePacket({\n      id,\n      isRequest: false,\n      value\n    }));\n  };\n\n  let handleRequest = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator(function* (id, request) {\n      try {\n        switch (request.command) {\n          case \"ping\":\n            {\n              sendResponse(id, {});\n              break;\n            }\n\n          case \"on-start\":\n            {\n              let callback = pluginCallbacks.get(request.key);\n              if (!callback) sendResponse(id, {});else sendResponse(id, yield callback(request));\n              break;\n            }\n\n          case \"on-resolve\":\n            {\n              let callback = pluginCallbacks.get(request.key);\n              if (!callback) sendResponse(id, {});else sendResponse(id, yield callback(request));\n              break;\n            }\n\n          case \"on-load\":\n            {\n              let callback = pluginCallbacks.get(request.key);\n              if (!callback) sendResponse(id, {});else sendResponse(id, yield callback(request));\n              break;\n            }\n\n          case \"serve-request\":\n            {\n              let callbacks = serveCallbacks.get(request.key);\n              if (callbacks && callbacks.onRequest) callbacks.onRequest(request.args);\n              sendResponse(id, {});\n              break;\n            }\n\n          case \"serve-wait\":\n            {\n              let callbacks = serveCallbacks.get(request.key);\n              if (callbacks) callbacks.onWait(request.error);\n              sendResponse(id, {});\n              break;\n            }\n\n          case \"watch-rebuild\":\n            {\n              let callback = watchCallbacks.get(request.key);\n\n              try {\n                if (callback) callback(null, request.args);\n              } catch (err) {\n                console.error(err);\n              }\n\n              sendResponse(id, {});\n              break;\n            }\n\n          default:\n            throw new Error(`Invalid command: ` + request.command);\n        }\n      } catch (e) {\n        sendResponse(id, {\n          errors: [extractErrorMessageV8(e, streamIn, null, void 0, \"\")]\n        });\n      }\n    });\n\n    return function handleRequest(_x, _x2) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  let isFirstPacket = true;\n\n  let handleIncomingPacket = bytes => {\n    if (isFirstPacket) {\n      isFirstPacket = false;\n      let binaryVersion = String.fromCharCode(...bytes);\n\n      if (binaryVersion !== \"0.14.22\") {\n        throw new Error(`Cannot start service: Host version \"${\"0.14.22\"}\" does not match binary version ${JSON.stringify(binaryVersion)}`);\n      }\n\n      return;\n    }\n\n    let packet = decodePacket(bytes);\n\n    if (packet.isRequest) {\n      handleRequest(packet.id, packet.value);\n    } else {\n      let callback = responseCallbacks.get(packet.id);\n      responseCallbacks.delete(packet.id);\n      if (packet.value.error) callback(packet.value.error, {});else callback(null, packet.value);\n    }\n  };\n\n  let handlePlugins = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (initialOptions, plugins, buildKey, stash, refs) {\n      let onStartCallbacks = [];\n      let onEndCallbacks = [];\n      let onResolveCallbacks = {};\n      let onLoadCallbacks = {};\n      let nextCallbackID = 0;\n      let i = 0;\n      let requestPlugins = [];\n      let isSetupDone = false;\n      plugins = [...plugins];\n\n      for (let item of plugins) {\n        let keys = {};\n        if (typeof item !== \"object\") throw new Error(`Plugin at index ${i} must be an object`);\n        const name = getFlag(item, keys, \"name\", mustBeString);\n        if (typeof name !== \"string\" || name === \"\") throw new Error(`Plugin at index ${i} is missing a name`);\n\n        try {\n          let setup = getFlag(item, keys, \"setup\", mustBeFunction);\n          if (typeof setup !== \"function\") throw new Error(`Plugin is missing a setup function`);\n          checkForInvalidFlags(item, keys, `on plugin ${JSON.stringify(name)}`);\n          let plugin = {\n            name,\n            onResolve: [],\n            onLoad: []\n          };\n          i++;\n\n          let resolve = (path3, options = {}) => {\n            if (!isSetupDone) throw new Error('Cannot call \"resolve\" before plugin setup has completed');\n            if (typeof path3 !== \"string\") throw new Error(`The path to resolve must be a string`);\n            let keys2 = /* @__PURE__ */Object.create(null);\n            let pluginName = getFlag(options, keys2, \"pluginName\", mustBeString);\n            let importer = getFlag(options, keys2, \"importer\", mustBeString);\n            let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n            let resolveDir = getFlag(options, keys2, \"resolveDir\", mustBeString);\n            let kind = getFlag(options, keys2, \"kind\", mustBeString);\n            let pluginData = getFlag(options, keys2, \"pluginData\", canBeAnything);\n            checkForInvalidFlags(options, keys2, \"in resolve() call\");\n            return new Promise((resolve2, reject) => {\n              const request = {\n                command: \"resolve\",\n                path: path3,\n                key: buildKey,\n                pluginName: name\n              };\n              if (pluginName != null) request.pluginName = pluginName;\n              if (importer != null) request.importer = importer;\n              if (namespace != null) request.namespace = namespace;\n              if (resolveDir != null) request.resolveDir = resolveDir;\n              if (kind != null) request.kind = kind;\n              if (pluginData != null) request.pluginData = stash.store(pluginData);\n              sendRequest(refs, request, (error, response) => {\n                if (error !== null) reject(new Error(error));else resolve2({\n                  errors: replaceDetailsInMessages(response.errors, stash),\n                  warnings: replaceDetailsInMessages(response.warnings, stash),\n                  path: response.path,\n                  external: response.external,\n                  sideEffects: response.sideEffects,\n                  namespace: response.namespace,\n                  suffix: response.suffix,\n                  pluginData: stash.load(response.pluginData)\n                });\n              });\n            });\n          };\n\n          let promise = setup({\n            initialOptions,\n            resolve,\n\n            onStart(callback2) {\n              let registeredText = `This error came from the \"onStart\" callback registered here:`;\n              let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onStart\");\n              onStartCallbacks.push({\n                name,\n                callback: callback2,\n                note: registeredNote\n              });\n            },\n\n            onEnd(callback2) {\n              let registeredText = `This error came from the \"onEnd\" callback registered here:`;\n              let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onEnd\");\n              onEndCallbacks.push({\n                name,\n                callback: callback2,\n                note: registeredNote\n              });\n            },\n\n            onResolve(options, callback2) {\n              let registeredText = `This error came from the \"onResolve\" callback registered here:`;\n              let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onResolve\");\n              let keys2 = {};\n              let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n              let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n              checkForInvalidFlags(options, keys2, `in onResolve() call for plugin ${JSON.stringify(name)}`);\n              if (filter == null) throw new Error(`onResolve() call is missing a filter`);\n              let id = nextCallbackID++;\n              onResolveCallbacks[id] = {\n                name,\n                callback: callback2,\n                note: registeredNote\n              };\n              plugin.onResolve.push({\n                id,\n                filter: filter.source,\n                namespace: namespace || \"\"\n              });\n            },\n\n            onLoad(options, callback2) {\n              let registeredText = `This error came from the \"onLoad\" callback registered here:`;\n              let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onLoad\");\n              let keys2 = {};\n              let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n              let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n              checkForInvalidFlags(options, keys2, `in onLoad() call for plugin ${JSON.stringify(name)}`);\n              if (filter == null) throw new Error(`onLoad() call is missing a filter`);\n              let id = nextCallbackID++;\n              onLoadCallbacks[id] = {\n                name,\n                callback: callback2,\n                note: registeredNote\n              };\n              plugin.onLoad.push({\n                id,\n                filter: filter.source,\n                namespace: namespace || \"\"\n              });\n            },\n\n            esbuild: streamIn.esbuild\n          });\n          if (promise) yield promise;\n          requestPlugins.push(plugin);\n        } catch (e) {\n          return {\n            ok: false,\n            error: e,\n            pluginName: name\n          };\n        }\n      }\n\n      const callback = /*#__PURE__*/function () {\n        var _ref3 = _asyncToGenerator(function* (request) {\n          switch (request.command) {\n            case \"on-start\":\n              {\n                let response = {\n                  errors: [],\n                  warnings: []\n                };\n                yield Promise.all(onStartCallbacks.map( /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator(function* ({\n                    name,\n                    callback: callback2,\n                    note\n                  }) {\n                    try {\n                      let result = yield callback2();\n\n                      if (result != null) {\n                        if (typeof result !== \"object\") throw new Error(`Expected onStart() callback in plugin ${JSON.stringify(name)} to return an object`);\n                        let keys = {};\n                        let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                        let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                        checkForInvalidFlags(result, keys, `from onStart() callback in plugin ${JSON.stringify(name)}`);\n                        if (errors != null) response.errors.push(...sanitizeMessages(errors, \"errors\", stash, name));\n                        if (warnings != null) response.warnings.push(...sanitizeMessages(warnings, \"warnings\", stash, name));\n                      }\n                    } catch (e) {\n                      response.errors.push(extractErrorMessageV8(e, streamIn, stash, note && note(), name));\n                    }\n                  });\n\n                  return function (_x9) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }()));\n                return response;\n              }\n\n            case \"on-resolve\":\n              {\n                let response = {},\n                    name = \"\",\n                    callback2,\n                    note;\n\n                for (let id of request.ids) {\n                  try {\n                    ({\n                      name,\n                      callback: callback2,\n                      note\n                    } = onResolveCallbacks[id]);\n                    let result = yield callback2({\n                      path: request.path,\n                      importer: request.importer,\n                      namespace: request.namespace,\n                      resolveDir: request.resolveDir,\n                      kind: request.kind,\n                      pluginData: stash.load(request.pluginData)\n                    });\n\n                    if (result != null) {\n                      if (typeof result !== \"object\") throw new Error(`Expected onResolve() callback in plugin ${JSON.stringify(name)} to return an object`);\n                      let keys = {};\n                      let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                      let path3 = getFlag(result, keys, \"path\", mustBeString);\n                      let namespace = getFlag(result, keys, \"namespace\", mustBeString);\n                      let suffix = getFlag(result, keys, \"suffix\", mustBeString);\n                      let external = getFlag(result, keys, \"external\", mustBeBoolean);\n                      let sideEffects = getFlag(result, keys, \"sideEffects\", mustBeBoolean);\n                      let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                      let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                      let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                      let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                      let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                      checkForInvalidFlags(result, keys, `from onResolve() callback in plugin ${JSON.stringify(name)}`);\n                      response.id = id;\n                      if (pluginName != null) response.pluginName = pluginName;\n                      if (path3 != null) response.path = path3;\n                      if (namespace != null) response.namespace = namespace;\n                      if (suffix != null) response.suffix = suffix;\n                      if (external != null) response.external = external;\n                      if (sideEffects != null) response.sideEffects = sideEffects;\n                      if (pluginData != null) response.pluginData = stash.store(pluginData);\n                      if (errors != null) response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                      if (warnings != null) response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                      if (watchFiles != null) response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                      if (watchDirs != null) response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                      break;\n                    }\n                  } catch (e) {\n                    return {\n                      id,\n                      errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)]\n                    };\n                  }\n                }\n\n                return response;\n              }\n\n            case \"on-load\":\n              {\n                let response = {},\n                    name = \"\",\n                    callback2,\n                    note;\n\n                for (let id of request.ids) {\n                  try {\n                    ({\n                      name,\n                      callback: callback2,\n                      note\n                    } = onLoadCallbacks[id]);\n                    let result = yield callback2({\n                      path: request.path,\n                      namespace: request.namespace,\n                      suffix: request.suffix,\n                      pluginData: stash.load(request.pluginData)\n                    });\n\n                    if (result != null) {\n                      if (typeof result !== \"object\") throw new Error(`Expected onLoad() callback in plugin ${JSON.stringify(name)} to return an object`);\n                      let keys = {};\n                      let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                      let contents = getFlag(result, keys, \"contents\", mustBeStringOrUint8Array);\n                      let resolveDir = getFlag(result, keys, \"resolveDir\", mustBeString);\n                      let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                      let loader = getFlag(result, keys, \"loader\", mustBeString);\n                      let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                      let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                      let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                      let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                      checkForInvalidFlags(result, keys, `from onLoad() callback in plugin ${JSON.stringify(name)}`);\n                      response.id = id;\n                      if (pluginName != null) response.pluginName = pluginName;\n                      if (contents instanceof Uint8Array) response.contents = contents;else if (contents != null) response.contents = encodeUTF8(contents);\n                      if (resolveDir != null) response.resolveDir = resolveDir;\n                      if (pluginData != null) response.pluginData = stash.store(pluginData);\n                      if (loader != null) response.loader = loader;\n                      if (errors != null) response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                      if (warnings != null) response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                      if (watchFiles != null) response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                      if (watchDirs != null) response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                      break;\n                    }\n                  } catch (e) {\n                    return {\n                      id,\n                      errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)]\n                    };\n                  }\n                }\n\n                return response;\n              }\n\n            default:\n              throw new Error(`Invalid command: ` + request.command);\n          }\n        });\n\n        return function callback(_x8) {\n          return _ref3.apply(this, arguments);\n        };\n      }();\n\n      let runOnEndCallbacks = (result, logPluginError, done) => done();\n\n      if (onEndCallbacks.length > 0) {\n        runOnEndCallbacks = (result, logPluginError, done) => {\n          _asyncToGenerator(function* () {\n            for (const {\n              name,\n              callback: callback2,\n              note\n            } of onEndCallbacks) {\n              try {\n                yield callback2(result);\n              } catch (e) {\n                result.errors.push(yield new Promise(resolve => logPluginError(e, name, note && note(), resolve)));\n              }\n            }\n          })().then(done);\n        };\n      }\n\n      isSetupDone = true;\n      let refCount = 0;\n      return {\n        ok: true,\n        requestPlugins,\n        runOnEndCallbacks,\n        pluginRefs: {\n          ref() {\n            if (++refCount === 1) pluginCallbacks.set(buildKey, callback);\n          },\n\n          unref() {\n            if (--refCount === 0) pluginCallbacks.delete(buildKey);\n          }\n\n        }\n      };\n    });\n\n    return function handlePlugins(_x3, _x4, _x5, _x6, _x7) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  let buildServeData = (refs, options, request, key) => {\n    let keys = {};\n    let port = getFlag(options, keys, \"port\", mustBeInteger);\n    let host = getFlag(options, keys, \"host\", mustBeString);\n    let servedir = getFlag(options, keys, \"servedir\", mustBeString);\n    let onRequest = getFlag(options, keys, \"onRequest\", mustBeFunction);\n    let onWait;\n    let wait = new Promise((resolve, reject) => {\n      onWait = error => {\n        serveCallbacks.delete(key);\n        if (error !== null) reject(new Error(error));else resolve();\n      };\n    });\n    request.serve = {};\n    checkForInvalidFlags(options, keys, `in serve() call`);\n    if (port !== void 0) request.serve.port = port;\n    if (host !== void 0) request.serve.host = host;\n    if (servedir !== void 0) request.serve.servedir = servedir;\n    serveCallbacks.set(key, {\n      onRequest,\n      onWait\n    });\n    return {\n      wait,\n\n      stop() {\n        sendRequest(refs, {\n          command: \"serve-stop\",\n          key\n        }, () => {});\n      }\n\n    };\n  };\n\n  const buildLogLevelDefault = \"warning\";\n  const transformLogLevelDefault = \"silent\";\n\n  let buildOrServe = args => {\n    let key = nextBuildKey++;\n    const details = createObjectStash();\n    let plugins;\n    let {\n      refs,\n      options,\n      isTTY: isTTY2,\n      callback\n    } = args;\n\n    if (typeof options === \"object\") {\n      let value = options.plugins;\n\n      if (value !== void 0) {\n        if (!Array.isArray(value)) throw new Error(`\"plugins\" must be an array`);\n        plugins = value;\n      }\n    }\n\n    let logPluginError = (e, pluginName, note, done) => {\n      let flags = [];\n\n      try {\n        pushLogFlags(flags, options, {}, isTTY2, buildLogLevelDefault);\n      } catch {}\n\n      const message = extractErrorMessageV8(e, streamIn, details, note, pluginName);\n      sendRequest(refs, {\n        command: \"error\",\n        flags,\n        error: message\n      }, () => {\n        message.detail = details.load(message.detail);\n        done(message);\n      });\n    };\n\n    let handleError = (e, pluginName) => {\n      logPluginError(e, pluginName, void 0, error => {\n        callback(failureErrorWithLog(\"Build failed\", [error], []), null);\n      });\n    };\n\n    if (plugins && plugins.length > 0) {\n      if (streamIn.isSync) return handleError(new Error(\"Cannot use plugins in synchronous API calls\"), \"\");\n      handlePlugins(options, plugins, key, details, refs).then(result => {\n        if (!result.ok) {\n          handleError(result.error, result.pluginName);\n        } else {\n          try {\n            buildOrServeContinue(__spreadProps(__spreadValues({}, args), {\n              key,\n              details,\n              logPluginError,\n              requestPlugins: result.requestPlugins,\n              runOnEndCallbacks: result.runOnEndCallbacks,\n              pluginRefs: result.pluginRefs\n            }));\n          } catch (e) {\n            handleError(e, \"\");\n          }\n        }\n      }, e => handleError(e, \"\"));\n    } else {\n      try {\n        buildOrServeContinue(__spreadProps(__spreadValues({}, args), {\n          key,\n          details,\n          logPluginError,\n          requestPlugins: null,\n          runOnEndCallbacks: (result, logPluginError2, done) => done(),\n          pluginRefs: null\n        }));\n      } catch (e) {\n        handleError(e, \"\");\n      }\n    }\n  };\n\n  let buildOrServeContinue = ({\n    callName,\n    refs: callerRefs,\n    serveOptions,\n    options,\n    isTTY: isTTY2,\n    defaultWD: defaultWD2,\n    callback,\n    key,\n    details,\n    logPluginError,\n    requestPlugins,\n    runOnEndCallbacks,\n    pluginRefs\n  }) => {\n    const refs = {\n      ref() {\n        if (pluginRefs) pluginRefs.ref();\n        if (callerRefs) callerRefs.ref();\n      },\n\n      unref() {\n        if (pluginRefs) pluginRefs.unref();\n        if (callerRefs) callerRefs.unref();\n      }\n\n    };\n    let writeDefault = !streamIn.isBrowser;\n    let {\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir,\n      incremental,\n      nodePaths,\n      watch,\n      mangleCache\n    } = flagsForBuildOptions(callName, options, isTTY2, buildLogLevelDefault, writeDefault);\n    let request = {\n      command: \"build\",\n      key,\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir: absWorkingDir || defaultWD2,\n      incremental,\n      nodePaths\n    };\n    if (requestPlugins) request.plugins = requestPlugins;\n    if (mangleCache) request.mangleCache = mangleCache;\n    let serve2 = serveOptions && buildServeData(refs, serveOptions, request, key);\n    let rebuild;\n    let stop;\n\n    let copyResponseToResult = (response, result) => {\n      if (response.outputFiles) result.outputFiles = response.outputFiles.map(convertOutputFiles);\n      if (response.metafile) result.metafile = JSON.parse(response.metafile);\n      if (response.mangleCache) result.mangleCache = response.mangleCache;\n      if (response.writeToStdout !== void 0) console.log(decodeUTF8(response.writeToStdout).replace(/\\n$/, \"\"));\n    };\n\n    let buildResponseToResult = (response, callback2) => {\n      let result = {\n        errors: replaceDetailsInMessages(response.errors, details),\n        warnings: replaceDetailsInMessages(response.warnings, details)\n      };\n      copyResponseToResult(response, result);\n      runOnEndCallbacks(result, logPluginError, () => {\n        if (result.errors.length > 0) {\n          return callback2(failureErrorWithLog(\"Build failed\", result.errors, result.warnings), null);\n        }\n\n        if (response.rebuild) {\n          if (!rebuild) {\n            let isDisposed = false;\n\n            rebuild = () => new Promise((resolve, reject) => {\n              if (isDisposed || isClosed) throw new Error(\"Cannot rebuild\");\n              sendRequest(refs, {\n                command: \"rebuild\",\n                key\n              }, (error2, response2) => {\n                if (error2) {\n                  const message = {\n                    pluginName: \"\",\n                    text: error2,\n                    location: null,\n                    notes: [],\n                    detail: void 0\n                  };\n                  return callback2(failureErrorWithLog(\"Build failed\", [message], []), null);\n                }\n\n                buildResponseToResult(response2, (error3, result3) => {\n                  if (error3) reject(error3);else resolve(result3);\n                });\n              });\n            });\n\n            refs.ref();\n\n            rebuild.dispose = () => {\n              if (isDisposed) return;\n              isDisposed = true;\n              sendRequest(refs, {\n                command: \"rebuild-dispose\",\n                key\n              }, () => {});\n              refs.unref();\n            };\n          }\n\n          result.rebuild = rebuild;\n        }\n\n        if (response.watch) {\n          if (!stop) {\n            let isStopped = false;\n            refs.ref();\n\n            stop = () => {\n              if (isStopped) return;\n              isStopped = true;\n              watchCallbacks.delete(key);\n              sendRequest(refs, {\n                command: \"watch-stop\",\n                key\n              }, () => {});\n              refs.unref();\n            };\n\n            if (watch) {\n              watchCallbacks.set(key, (serviceStopError, watchResponse) => {\n                if (serviceStopError) {\n                  if (watch.onRebuild) watch.onRebuild(serviceStopError, null);\n                  return;\n                }\n\n                let result2 = {\n                  errors: replaceDetailsInMessages(watchResponse.errors, details),\n                  warnings: replaceDetailsInMessages(watchResponse.warnings, details)\n                };\n                copyResponseToResult(watchResponse, result2);\n                runOnEndCallbacks(result2, logPluginError, () => {\n                  if (result2.errors.length > 0) {\n                    if (watch.onRebuild) watch.onRebuild(failureErrorWithLog(\"Build failed\", result2.errors, result2.warnings), null);\n                    return;\n                  }\n\n                  if (watchResponse.rebuildID !== void 0) result2.rebuild = rebuild;\n                  result2.stop = stop;\n                  if (watch.onRebuild) watch.onRebuild(null, result2);\n                });\n              });\n            }\n          }\n\n          result.stop = stop;\n        }\n\n        callback2(null, result);\n      });\n    };\n\n    if (write && streamIn.isBrowser) throw new Error(`Cannot enable \"write\" in the browser`);\n    if (incremental && streamIn.isSync) throw new Error(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch && streamIn.isSync) throw new Error(`Cannot use \"watch\" with a synchronous build`);\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n\n      if (serve2) {\n        let serveResponse = response;\n        let isStopped = false;\n        refs.ref();\n        let result = {\n          port: serveResponse.port,\n          host: serveResponse.host,\n          wait: serve2.wait,\n\n          stop() {\n            if (isStopped) return;\n            isStopped = true;\n            serve2.stop();\n            refs.unref();\n          }\n\n        };\n        refs.ref();\n        serve2.wait.then(refs.unref, refs.unref);\n        return callback(null, result);\n      }\n\n      return buildResponseToResult(response, callback);\n    });\n  };\n\n  let transform2 = ({\n    callName,\n    refs,\n    input,\n    options,\n    isTTY: isTTY2,\n    fs: fs3,\n    callback\n  }) => {\n    const details = createObjectStash();\n\n    let start = inputPath => {\n      try {\n        if (typeof input !== \"string\") throw new Error('The input to \"transform\" must be a string');\n        let {\n          flags,\n          mangleCache\n        } = flagsForTransformOptions(callName, options, isTTY2, transformLogLevelDefault);\n        let request = {\n          command: \"transform\",\n          flags,\n          inputFS: inputPath !== null,\n          input: inputPath !== null ? inputPath : input\n        };\n        if (mangleCache) request.mangleCache = mangleCache;\n        sendRequest(refs, request, (error, response) => {\n          if (error) return callback(new Error(error), null);\n          let errors = replaceDetailsInMessages(response.errors, details);\n          let warnings = replaceDetailsInMessages(response.warnings, details);\n          let outstanding = 1;\n\n          let next = () => {\n            if (--outstanding === 0) {\n              let result = {\n                warnings,\n                code: response.code,\n                map: response.map\n              };\n              if (response.mangleCache) result.mangleCache = response == null ? void 0 : response.mangleCache;\n              callback(null, result);\n            }\n          };\n\n          if (errors.length > 0) return callback(failureErrorWithLog(\"Transform failed\", errors, warnings), null);\n\n          if (response.codeFS) {\n            outstanding++;\n            fs3.readFile(response.code, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.code = contents;\n                next();\n              }\n            });\n          }\n\n          if (response.mapFS) {\n            outstanding++;\n            fs3.readFile(response.map, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.map = contents;\n                next();\n              }\n            });\n          }\n\n          next();\n        });\n      } catch (e) {\n        let flags = [];\n\n        try {\n          pushLogFlags(flags, options, {}, isTTY2, transformLogLevelDefault);\n        } catch {}\n\n        const error = extractErrorMessageV8(e, streamIn, details, void 0, \"\");\n        sendRequest(refs, {\n          command: \"error\",\n          flags,\n          error\n        }, () => {\n          error.detail = details.load(error.detail);\n          callback(failureErrorWithLog(\"Transform failed\", [error], []), null);\n        });\n      }\n    };\n\n    if (typeof input === \"string\" && input.length > 1024 * 1024) {\n      let next = start;\n\n      start = () => fs3.writeFile(input, next);\n    }\n\n    start(null);\n  };\n\n  let formatMessages2 = ({\n    callName,\n    refs,\n    messages,\n    options,\n    callback\n  }) => {\n    let result = sanitizeMessages(messages, \"messages\", null, \"\");\n    if (!options) throw new Error(`Missing second argument in ${callName}() call`);\n    let keys = {};\n    let kind = getFlag(options, keys, \"kind\", mustBeString);\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let terminalWidth = getFlag(options, keys, \"terminalWidth\", mustBeInteger);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    if (kind === void 0) throw new Error(`Missing \"kind\" in ${callName}() call`);\n    if (kind !== \"error\" && kind !== \"warning\") throw new Error(`Expected \"kind\" to be \"error\" or \"warning\" in ${callName}() call`);\n    let request = {\n      command: \"format-msgs\",\n      messages: result,\n      isWarning: kind === \"warning\"\n    };\n    if (color !== void 0) request.color = color;\n    if (terminalWidth !== void 0) request.terminalWidth = terminalWidth;\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n      callback(null, response.messages);\n    });\n  };\n\n  let analyzeMetafile2 = ({\n    callName,\n    refs,\n    metafile,\n    options,\n    callback\n  }) => {\n    if (options === void 0) options = {};\n    let keys = {};\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let verbose = getFlag(options, keys, \"verbose\", mustBeBoolean);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    let request = {\n      command: \"analyze-metafile\",\n      metafile\n    };\n    if (color !== void 0) request.color = color;\n    if (verbose !== void 0) request.verbose = verbose;\n    sendRequest(refs, request, (error, response) => {\n      if (error) return callback(new Error(error), null);\n      callback(null, response.result);\n    });\n  };\n\n  return {\n    readFromStdout,\n    afterClose,\n    service: {\n      buildOrServe,\n      transform: transform2,\n      formatMessages: formatMessages2,\n      analyzeMetafile: analyzeMetafile2\n    }\n  };\n}\n\nfunction createObjectStash() {\n  const map = /* @__PURE__ */new Map();\n  let nextID = 0;\n  return {\n    load(id) {\n      return map.get(id);\n    },\n\n    store(value) {\n      if (value === void 0) return -1;\n      const id = nextID++;\n      map.set(id, value);\n      return id;\n    }\n\n  };\n}\n\nfunction extractCallerV8(e, streamIn, ident) {\n  let note;\n  let tried = false;\n  return () => {\n    if (tried) return note;\n    tried = true;\n\n    try {\n      let lines = (e.stack + \"\").split(\"\\n\");\n      lines.splice(1, 1);\n      let location = parseStackLinesV8(streamIn, lines, ident);\n\n      if (location) {\n        note = {\n          text: e.message,\n          location\n        };\n        return note;\n      }\n    } catch {}\n  };\n}\n\nfunction extractErrorMessageV8(e, streamIn, stash, note, pluginName) {\n  let text = \"Internal error\";\n  let location = null;\n\n  try {\n    text = (e && e.message || e) + \"\";\n  } catch {}\n\n  try {\n    location = parseStackLinesV8(streamIn, (e.stack + \"\").split(\"\\n\"), \"\");\n  } catch {}\n\n  return {\n    pluginName,\n    text,\n    location,\n    notes: note ? [note] : [],\n    detail: stash ? stash.store(e) : -1\n  };\n}\n\nfunction parseStackLinesV8(streamIn, lines, ident) {\n  let at = \"    at \";\n\n  if (streamIn.readFileSync && !lines[0].startsWith(at) && lines[1].startsWith(at)) {\n    for (let i = 1; i < lines.length; i++) {\n      let line = lines[i];\n      if (!line.startsWith(at)) continue;\n      line = line.slice(at.length);\n\n      while (true) {\n        let match = /^(?:new |async )?\\S+ \\((.*)\\)$/.exec(line);\n\n        if (match) {\n          line = match[1];\n          continue;\n        }\n\n        match = /^eval at \\S+ \\((.*)\\)(?:, \\S+:\\d+:\\d+)?$/.exec(line);\n\n        if (match) {\n          line = match[1];\n          continue;\n        }\n\n        match = /^(\\S+):(\\d+):(\\d+)$/.exec(line);\n\n        if (match) {\n          let contents;\n\n          try {\n            contents = streamIn.readFileSync(match[1], \"utf8\");\n          } catch {\n            break;\n          }\n\n          let lineText = contents.split(/\\r\\n|\\r|\\n|\\u2028|\\u2029/)[+match[2] - 1] || \"\";\n          let column = +match[3] - 1;\n          let length = lineText.slice(column, column + ident.length) === ident ? ident.length : 0;\n          return {\n            file: match[1],\n            namespace: \"file\",\n            line: +match[2],\n            column: encodeUTF8(lineText.slice(0, column)).length,\n            length: encodeUTF8(lineText.slice(column, column + length)).length,\n            lineText: lineText + \"\\n\" + lines.slice(1).join(\"\\n\"),\n            suggestion: \"\"\n          };\n        }\n\n        break;\n      }\n    }\n  }\n\n  return null;\n}\n\nfunction failureErrorWithLog(text, errors, warnings) {\n  let limit = 5;\n  let summary = errors.length < 1 ? \"\" : ` with ${errors.length} error${errors.length < 2 ? \"\" : \"s\"}:` + errors.slice(0, limit + 1).map((e, i) => {\n    if (i === limit) return \"\\n...\";\n    if (!e.location) return `\nerror: ${e.text}`;\n    let {\n      file,\n      line,\n      column\n    } = e.location;\n    let pluginText = e.pluginName ? `[plugin: ${e.pluginName}] ` : \"\";\n    return `\n${file}:${line}:${column}: ERROR: ${pluginText}${e.text}`;\n  }).join(\"\");\n  let error = new Error(`${text}${summary}`);\n  error.errors = errors;\n  error.warnings = warnings;\n  return error;\n}\n\nfunction replaceDetailsInMessages(messages, stash) {\n  for (const message of messages) {\n    message.detail = stash.load(message.detail);\n  }\n\n  return messages;\n}\n\nfunction sanitizeLocation(location, where) {\n  if (location == null) return null;\n  let keys = {};\n  let file = getFlag(location, keys, \"file\", mustBeString);\n  let namespace = getFlag(location, keys, \"namespace\", mustBeString);\n  let line = getFlag(location, keys, \"line\", mustBeInteger);\n  let column = getFlag(location, keys, \"column\", mustBeInteger);\n  let length = getFlag(location, keys, \"length\", mustBeInteger);\n  let lineText = getFlag(location, keys, \"lineText\", mustBeString);\n  let suggestion = getFlag(location, keys, \"suggestion\", mustBeString);\n  checkForInvalidFlags(location, keys, where);\n  return {\n    file: file || \"\",\n    namespace: namespace || \"\",\n    line: line || 0,\n    column: column || 0,\n    length: length || 0,\n    lineText: lineText || \"\",\n    suggestion: suggestion || \"\"\n  };\n}\n\nfunction sanitizeMessages(messages, property, stash, fallbackPluginName) {\n  let messagesClone = [];\n  let index = 0;\n\n  for (const message of messages) {\n    let keys = {};\n    let pluginName = getFlag(message, keys, \"pluginName\", mustBeString);\n    let text = getFlag(message, keys, \"text\", mustBeString);\n    let location = getFlag(message, keys, \"location\", mustBeObjectOrNull);\n    let notes = getFlag(message, keys, \"notes\", mustBeArray);\n    let detail = getFlag(message, keys, \"detail\", canBeAnything);\n    let where = `in element ${index} of \"${property}\"`;\n    checkForInvalidFlags(message, keys, where);\n    let notesClone = [];\n\n    if (notes) {\n      for (const note of notes) {\n        let noteKeys = {};\n        let noteText = getFlag(note, noteKeys, \"text\", mustBeString);\n        let noteLocation = getFlag(note, noteKeys, \"location\", mustBeObjectOrNull);\n        checkForInvalidFlags(note, noteKeys, where);\n        notesClone.push({\n          text: noteText || \"\",\n          location: sanitizeLocation(noteLocation, where)\n        });\n      }\n    }\n\n    messagesClone.push({\n      pluginName: pluginName || fallbackPluginName,\n      text: text || \"\",\n      location: sanitizeLocation(location, where),\n      notes: notesClone,\n      detail: stash ? stash.store(detail) : -1\n    });\n    index++;\n  }\n\n  return messagesClone;\n}\n\nfunction sanitizeStringArray(values, property) {\n  const result = [];\n\n  for (const value of values) {\n    if (typeof value !== \"string\") throw new Error(`${JSON.stringify(property)} must be an array of strings`);\n    result.push(value);\n  }\n\n  return result;\n}\n\nfunction convertOutputFiles({\n  path: path3,\n  contents\n}) {\n  let text = null;\n  return {\n    path: path3,\n    contents,\n\n    get text() {\n      if (text === null) text = decodeUTF8(contents);\n      return text;\n    }\n\n  };\n} // lib/npm/node-platform.ts\n\n\nvar fs = require(\"fs\");\n\nvar os = require(\"os\");\n\nvar path = require(\"path\");\n\nvar ESBUILD_BINARY_PATH = process.env.ESBUILD_BINARY_PATH || ESBUILD_BINARY_PATH;\nvar knownWindowsPackages = {\n  \"win32 arm64 LE\": \"esbuild-windows-arm64\",\n  \"win32 ia32 LE\": \"esbuild-windows-32\",\n  \"win32 x64 LE\": \"esbuild-windows-64\"\n};\nvar knownUnixlikePackages = {\n  \"android arm64 LE\": \"esbuild-android-arm64\",\n  \"darwin arm64 LE\": \"esbuild-darwin-arm64\",\n  \"darwin x64 LE\": \"esbuild-darwin-64\",\n  \"freebsd arm64 LE\": \"esbuild-freebsd-arm64\",\n  \"freebsd x64 LE\": \"esbuild-freebsd-64\",\n  \"linux arm LE\": \"esbuild-linux-arm\",\n  \"linux arm64 LE\": \"esbuild-linux-arm64\",\n  \"linux ia32 LE\": \"esbuild-linux-32\",\n  \"linux mips64el LE\": \"esbuild-linux-mips64le\",\n  \"linux ppc64 LE\": \"esbuild-linux-ppc64le\",\n  \"linux riscv64 LE\": \"esbuild-linux-riscv64\",\n  \"linux s390x BE\": \"esbuild-linux-s390x\",\n  \"linux x64 LE\": \"esbuild-linux-64\",\n  \"netbsd x64 LE\": \"esbuild-netbsd-64\",\n  \"openbsd x64 LE\": \"esbuild-openbsd-64\",\n  \"sunos x64 LE\": \"esbuild-sunos-64\"\n};\n\nfunction pkgAndSubpathForCurrentPlatform() {\n  let pkg;\n  let subpath;\n  let platformKey = `${process.platform} ${os.arch()} ${os.endianness()}`;\n\n  if (platformKey in knownWindowsPackages) {\n    pkg = knownWindowsPackages[platformKey];\n    subpath = \"esbuild.exe\";\n  } else if (platformKey in knownUnixlikePackages) {\n    pkg = knownUnixlikePackages[platformKey];\n    subpath = \"bin/esbuild\";\n  } else {\n    throw new Error(`Unsupported platform: ${platformKey}`);\n  }\n\n  return {\n    pkg,\n    subpath\n  };\n}\n\nfunction pkgForSomeOtherPlatform() {\n  const libMainJS = require.resolve(\"esbuild\");\n\n  const nodeModulesDirectory = path.dirname(path.dirname(path.dirname(libMainJS)));\n\n  if (path.basename(nodeModulesDirectory) === \"node_modules\") {\n    for (const unixKey in knownUnixlikePackages) {\n      try {\n        const pkg = knownUnixlikePackages[unixKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg))) return pkg;\n      } catch {}\n    }\n\n    for (const windowsKey in knownWindowsPackages) {\n      try {\n        const pkg = knownWindowsPackages[windowsKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg))) return pkg;\n      } catch {}\n    }\n  }\n\n  return null;\n}\n\nfunction downloadedBinPath(pkg, subpath) {\n  const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n  return path.join(esbuildLibDir, `downloaded-${pkg}-${path.basename(subpath)}`);\n}\n\nfunction generateBinPath() {\n  if (ESBUILD_BINARY_PATH) {\n    return ESBUILD_BINARY_PATH;\n  }\n\n  const {\n    pkg,\n    subpath\n  } = pkgAndSubpathForCurrentPlatform();\n  let binPath;\n\n  try {\n    binPath = require.resolve(`${pkg}/${subpath}`);\n  } catch (e) {\n    binPath = downloadedBinPath(pkg, subpath);\n\n    if (!fs.existsSync(binPath)) {\n      try {\n        require.resolve(pkg);\n      } catch {\n        const otherPkg = pkgForSomeOtherPlatform();\n\n        if (otherPkg) {\n          throw new Error(`\nYou installed esbuild on another platform than the one you're currently using.\nThis won't work because esbuild is written with native code and needs to\ninstall a platform-specific binary executable.\n\nSpecifically the \"${otherPkg}\" package is present but this platform\nneeds the \"${pkg}\" package instead. People often get into this\nsituation by installing esbuild on Windows or macOS and copying \"node_modules\"\ninto a Docker image that runs Linux, or by copying \"node_modules\" between\nWindows and WSL environments.\n\nIf you are installing with npm, you can try not copying the \"node_modules\"\ndirectory when you copy the files over, and running \"npm ci\" or \"npm install\"\non the destination platform after the copy. Or you could consider using yarn\ninstead which has built-in support for installing a package on multiple\nplatforms simultaneously.\n\nIf you are installing with yarn, you can try listing both this platform and the\nother platform in your \".yarnrc.yml\" file using the \"supportedArchitectures\"\nfeature: https://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n\nAnother alternative is to use the \"esbuild-wasm\" package instead, which works\nthe same way on all platforms. But it comes with a heavy performance cost and\ncan sometimes be 10x slower than the \"esbuild\" package, so you may also not\nwant to do that.\n`);\n        }\n\n        throw new Error(`The package \"${pkg}\" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n\"--no-optional\" flag. The \"optionalDependencies\" package.json feature is used\nby esbuild to install the correct binary executable for your current platform.`);\n      }\n\n      throw e;\n    }\n  }\n\n  let isYarnPnP = false;\n\n  try {\n    require(\"pnpapi\");\n\n    isYarnPnP = true;\n  } catch (e) {}\n\n  if (isYarnPnP) {\n    const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n    const binTargetPath = path.join(esbuildLibDir, `pnpapi-${pkg}-${path.basename(subpath)}`);\n\n    if (!fs.existsSync(binTargetPath)) {\n      fs.copyFileSync(binPath, binTargetPath);\n      fs.chmodSync(binTargetPath, 493);\n    }\n\n    return binTargetPath;\n  }\n\n  return binPath;\n} // lib/npm/node.ts\n\n\nvar child_process = require(\"child_process\");\n\nvar crypto = require(\"crypto\");\n\nvar path2 = require(\"path\");\n\nvar fs2 = require(\"fs\");\n\nvar os2 = require(\"os\");\n\nvar tty = require(\"tty\");\n\nvar worker_threads;\n\nif (process.env.ESBUILD_WORKER_THREADS !== \"0\") {\n  try {\n    worker_threads = require(\"worker_threads\");\n  } catch {}\n\n  let [major, minor] = process.versions.node.split(\".\");\n\n  if (+major < 12 || +major === 12 && +minor < 17 || +major === 13 && +minor < 13) {\n    worker_threads = void 0;\n  }\n}\n\nvar _a;\n\nvar isInternalWorkerThread = ((_a = worker_threads == null ? void 0 : worker_threads.workerData) == null ? void 0 : _a.esbuildVersion) === \"0.14.22\";\n\nvar esbuildCommandAndArgs = () => {\n  if ((!ESBUILD_BINARY_PATH || false) && (path2.basename(__filename) !== \"main.js\" || path2.basename(__dirname) !== \"lib\")) {\n    throw new Error(`The esbuild JavaScript API cannot be bundled. Please mark the \"esbuild\" package as external so it's not included in the bundle.\n\nMore information: The file containing the code for esbuild's JavaScript API (${__filename}) does not appear to be inside the esbuild package on the file system, which usually means that the esbuild package was bundled into another file. This is problematic because the API needs to run a binary executable inside the esbuild package which is located using a relative path from the API code to the executable. If the esbuild package is bundled, the relative path will be incorrect and the executable won't be found.`);\n  }\n\n  if (false) {\n    return [\"node\", [path2.join(__dirname, \"..\", \"bin\", \"esbuild\")]];\n  }\n\n  return [generateBinPath(), []];\n};\n\nvar isTTY = () => tty.isatty(2);\n\nvar fsSync = {\n  readFile(tempFile, callback) {\n    try {\n      let contents = fs2.readFileSync(tempFile, \"utf8\");\n\n      try {\n        fs2.unlinkSync(tempFile);\n      } catch {}\n\n      callback(null, contents);\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFileSync(tempFile, contents);\n      callback(tempFile);\n    } catch {\n      callback(null);\n    }\n  }\n\n};\nvar fsAsync = {\n  readFile(tempFile, callback) {\n    try {\n      fs2.readFile(tempFile, \"utf8\", (err, contents) => {\n        try {\n          fs2.unlink(tempFile, () => callback(err, contents));\n        } catch {\n          callback(err, contents);\n        }\n      });\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFile(tempFile, contents, err => err !== null ? callback(null) : callback(tempFile));\n    } catch {\n      callback(null);\n    }\n  }\n\n};\nvar version = \"0.14.22\";\n\nvar build = options => ensureServiceIsRunning().build(options);\n\nvar serve = (serveOptions, buildOptions) => ensureServiceIsRunning().serve(serveOptions, buildOptions);\n\nvar transform = (input, options) => ensureServiceIsRunning().transform(input, options);\n\nvar formatMessages = (messages, options) => ensureServiceIsRunning().formatMessages(messages, options);\n\nvar analyzeMetafile = (messages, options) => ensureServiceIsRunning().analyzeMetafile(messages, options);\n\nvar buildSync = options => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService) workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.buildSync(options);\n  }\n\n  let result;\n  runServiceSync(service => service.buildOrServe({\n    callName: \"buildSync\",\n    refs: null,\n    serveOptions: null,\n    options,\n    isTTY: isTTY(),\n    defaultWD,\n    callback: (err, res) => {\n      if (err) throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\n\nvar transformSync = (input, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService) workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.transformSync(input, options);\n  }\n\n  let result;\n  runServiceSync(service => service.transform({\n    callName: \"transformSync\",\n    refs: null,\n    input,\n    options: options || {},\n    isTTY: isTTY(),\n    fs: fsSync,\n    callback: (err, res) => {\n      if (err) throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\n\nvar formatMessagesSync = (messages, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService) workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.formatMessagesSync(messages, options);\n  }\n\n  let result;\n  runServiceSync(service => service.formatMessages({\n    callName: \"formatMessagesSync\",\n    refs: null,\n    messages,\n    options,\n    callback: (err, res) => {\n      if (err) throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\n\nvar analyzeMetafileSync = (metafile, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService) workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.analyzeMetafileSync(metafile, options);\n  }\n\n  let result;\n  runServiceSync(service => service.analyzeMetafile({\n    callName: \"analyzeMetafileSync\",\n    refs: null,\n    metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n    options,\n    callback: (err, res) => {\n      if (err) throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\n\nvar initializeWasCalled = false;\n\nvar initialize = options => {\n  options = validateInitializeOptions(options || {});\n  if (options.wasmURL) throw new Error(`The \"wasmURL\" option only works in the browser`);\n  if (options.worker) throw new Error(`The \"worker\" option only works in the browser`);\n  if (initializeWasCalled) throw new Error('Cannot call \"initialize\" more than once');\n  ensureServiceIsRunning();\n  initializeWasCalled = true;\n  return Promise.resolve();\n};\n\nvar defaultWD = process.cwd();\nvar longLivedService;\n\nvar ensureServiceIsRunning = () => {\n  if (longLivedService) return longLivedService;\n  let [command, args] = esbuildCommandAndArgs();\n  let child = child_process.spawn(command, args.concat(`--service=${\"0.14.22\"}`, \"--ping\"), {\n    windowsHide: true,\n    stdio: [\"pipe\", \"pipe\", \"inherit\"],\n    cwd: defaultWD\n  });\n  let {\n    readFromStdout,\n    afterClose,\n    service\n  } = createChannel({\n    writeToStdin(bytes) {\n      child.stdin.write(bytes, err => {\n        if (err) afterClose();\n      });\n    },\n\n    readFileSync: fs2.readFileSync,\n    isSync: false,\n    isBrowser: false,\n    esbuild: node_exports\n  });\n  child.stdin.on(\"error\", afterClose);\n  const stdin = child.stdin;\n  const stdout = child.stdout;\n  stdout.on(\"data\", readFromStdout);\n  stdout.on(\"end\", afterClose);\n  let refCount = 0;\n  child.unref();\n\n  if (stdin.unref) {\n    stdin.unref();\n  }\n\n  if (stdout.unref) {\n    stdout.unref();\n  }\n\n  const refs = {\n    ref() {\n      if (++refCount === 1) child.ref();\n    },\n\n    unref() {\n      if (--refCount === 0) child.unref();\n    }\n\n  };\n  longLivedService = {\n    build: options => {\n      return new Promise((resolve, reject) => {\n        service.buildOrServe({\n          callName: \"build\",\n          refs,\n          serveOptions: null,\n          options,\n          isTTY: isTTY(),\n          defaultWD,\n          callback: (err, res) => err ? reject(err) : resolve(res)\n        });\n      });\n    },\n    serve: (serveOptions, buildOptions) => {\n      if (serveOptions === null || typeof serveOptions !== \"object\") throw new Error(\"The first argument must be an object\");\n      return new Promise((resolve, reject) => service.buildOrServe({\n        callName: \"serve\",\n        refs,\n        serveOptions,\n        options: buildOptions,\n        isTTY: isTTY(),\n        defaultWD,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    transform: (input, options) => {\n      return new Promise((resolve, reject) => service.transform({\n        callName: \"transform\",\n        refs,\n        input,\n        options: options || {},\n        isTTY: isTTY(),\n        fs: fsAsync,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    formatMessages: (messages, options) => {\n      return new Promise((resolve, reject) => service.formatMessages({\n        callName: \"formatMessages\",\n        refs,\n        messages,\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    analyzeMetafile: (metafile, options) => {\n      return new Promise((resolve, reject) => service.analyzeMetafile({\n        callName: \"analyzeMetafile\",\n        refs,\n        metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    }\n  };\n  return longLivedService;\n};\n\nvar runServiceSync = callback => {\n  let [command, args] = esbuildCommandAndArgs();\n  let stdin = new Uint8Array();\n  let {\n    readFromStdout,\n    afterClose,\n    service\n  } = createChannel({\n    writeToStdin(bytes) {\n      if (stdin.length !== 0) throw new Error(\"Must run at most one command\");\n      stdin = bytes;\n    },\n\n    isSync: true,\n    isBrowser: false,\n    esbuild: node_exports\n  });\n  callback(service);\n  let stdout = child_process.execFileSync(command, args.concat(`--service=${\"0.14.22\"}`), {\n    cwd: defaultWD,\n    windowsHide: true,\n    input: stdin,\n    maxBuffer: +process.env.ESBUILD_MAX_BUFFER || 16 * 1024 * 1024\n  });\n  readFromStdout(stdout);\n  afterClose();\n};\n\nvar randomFileName = () => {\n  return path2.join(os2.tmpdir(), `esbuild-${crypto.randomBytes(32).toString(\"hex\")}`);\n};\n\nvar workerThreadService = null;\n\nvar startWorkerThreadService = worker_threads2 => {\n  let {\n    port1: mainPort,\n    port2: workerPort\n  } = new worker_threads2.MessageChannel();\n  let worker = new worker_threads2.Worker(__filename, {\n    workerData: {\n      workerPort,\n      defaultWD,\n      esbuildVersion: \"0.14.22\"\n    },\n    transferList: [workerPort],\n    execArgv: []\n  });\n  let nextID = 0;\n  let wasStopped = false;\n\n  let fakeBuildError = text => {\n    let error = new Error(`Build failed with 1 error:\nerror: ${text}`);\n    let errors = [{\n      pluginName: \"\",\n      text,\n      location: null,\n      notes: [],\n      detail: void 0\n    }];\n    error.errors = errors;\n    error.warnings = [];\n    return error;\n  };\n\n  let validateBuildSyncOptions = options => {\n    if (!options) return;\n    let plugins = options.plugins;\n    let incremental = options.incremental;\n    let watch = options.watch;\n    if (plugins && plugins.length > 0) throw fakeBuildError(`Cannot use plugins in synchronous API calls`);\n    if (incremental) throw fakeBuildError(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch) throw fakeBuildError(`Cannot use \"watch\" with a synchronous build`);\n  };\n\n  let applyProperties = (object, properties) => {\n    for (let key in properties) {\n      object[key] = properties[key];\n    }\n  };\n\n  let runCallSync = (command, args) => {\n    if (wasStopped) throw new Error(\"The service was stopped\");\n    let id = nextID++;\n    let sharedBuffer = new SharedArrayBuffer(8);\n    let sharedBufferView = new Int32Array(sharedBuffer);\n    let msg = {\n      sharedBuffer,\n      id,\n      command,\n      args\n    };\n    worker.postMessage(msg);\n    let status = Atomics.wait(sharedBufferView, 0, 0);\n    if (status !== \"ok\" && status !== \"not-equal\") throw new Error(\"Internal error: Atomics.wait() failed: \" + status);\n    let {\n      message: {\n        id: id2,\n        resolve,\n        reject,\n        properties\n      }\n    } = worker_threads2.receiveMessageOnPort(mainPort);\n    if (id !== id2) throw new Error(`Internal error: Expected id ${id} but got id ${id2}`);\n\n    if (reject) {\n      applyProperties(reject, properties);\n      throw reject;\n    }\n\n    return resolve;\n  };\n\n  worker.unref();\n  return {\n    buildSync(options) {\n      validateBuildSyncOptions(options);\n      return runCallSync(\"build\", [options]);\n    },\n\n    transformSync(input, options) {\n      return runCallSync(\"transform\", [input, options]);\n    },\n\n    formatMessagesSync(messages, options) {\n      return runCallSync(\"formatMessages\", [messages, options]);\n    },\n\n    analyzeMetafileSync(metafile, options) {\n      return runCallSync(\"analyzeMetafile\", [metafile, options]);\n    }\n\n  };\n};\n\nvar startSyncServiceWorker = () => {\n  let workerPort = worker_threads.workerData.workerPort;\n  let parentPort = worker_threads.parentPort;\n  let service = ensureServiceIsRunning();\n  defaultWD = worker_threads.workerData.defaultWD;\n\n  let extractProperties = object => {\n    let properties = {};\n\n    if (object && typeof object === \"object\") {\n      for (let key in object) {\n        properties[key] = object[key];\n      }\n    }\n\n    return properties;\n  };\n\n  parentPort.on(\"message\", msg => {\n    _asyncToGenerator(function* () {\n      let {\n        sharedBuffer,\n        id,\n        command,\n        args\n      } = msg;\n      let sharedBufferView = new Int32Array(sharedBuffer);\n\n      try {\n        switch (command) {\n          case \"build\":\n            workerPort.postMessage({\n              id,\n              resolve: yield service.build(args[0])\n            });\n            break;\n\n          case \"transform\":\n            workerPort.postMessage({\n              id,\n              resolve: yield service.transform(args[0], args[1])\n            });\n            break;\n\n          case \"formatMessages\":\n            workerPort.postMessage({\n              id,\n              resolve: yield service.formatMessages(args[0], args[1])\n            });\n            break;\n\n          case \"analyzeMetafile\":\n            workerPort.postMessage({\n              id,\n              resolve: yield service.analyzeMetafile(args[0], args[1])\n            });\n            break;\n\n          default:\n            throw new Error(`Invalid command: ${command}`);\n        }\n      } catch (reject) {\n        workerPort.postMessage({\n          id,\n          reject,\n          properties: extractProperties(reject)\n        });\n      }\n\n      Atomics.add(sharedBufferView, 0, 1);\n      Atomics.notify(sharedBufferView, 0, Infinity);\n    })();\n  });\n};\n\nif (isInternalWorkerThread) {\n  startSyncServiceWorker();\n}\n\nvar node_default = node_exports;\nmodule.exports = __toCommonJS(node_exports); // Annotate the CommonJS export names for ESM import in node:\n\n0 && (module.exports = {\n  analyzeMetafile,\n  analyzeMetafileSync,\n  build,\n  buildSync,\n  formatMessages,\n  formatMessagesSync,\n  initialize,\n  serve,\n  transform,\n  transformSync,\n  version\n});","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/esbuild/lib/main.js"],"names":["__create","Object","create","__defProp","defineProperty","__defProps","defineProperties","__getOwnPropDesc","getOwnPropertyDescriptor","__getOwnPropDescs","getOwnPropertyDescriptors","__getOwnPropNames","getOwnPropertyNames","__getOwnPropSymbols","getOwnPropertySymbols","__getProtoOf","getPrototypeOf","__hasOwnProp","prototype","hasOwnProperty","__propIsEnum","propertyIsEnumerable","__defNormalProp","obj","key","value","enumerable","configurable","writable","__spreadValues","a","b","prop","call","__spreadProps","__markAsModule","target","__export","all","name","get","__reExport","module2","copyDefault","desc","__toESM","isNodeMode","__esModule","default","__toCommonJS","cache","temp","set","WeakMap","node_exports","analyzeMetafile","analyzeMetafileSync","build","buildSync","node_default","formatMessages","formatMessagesSync","initialize","serve","transform","transformSync","version","encodePacket","packet","visit","bb","write8","write32","write","encodeUTF8","Uint8Array","Array","length","item","keys","ByteBuffer","id","isRequest","writeUInt32LE","buf","len","subarray","decodePacket","bytes","read8","read32","decodeUTF8","read","count","value2","i","push","Error","ptr","constructor","_write","delta","clone","offset","_read","readUInt32LE","TextEncoder","TextDecoder","encoder","decoder","text","encode","decode","Buffer","buffer","from","byteOffset","byteLength","toString","validateTarget","indexOf","canBeAnything","mustBeBoolean","mustBeBooleanOrObject","isArray","mustBeString","mustBeRegExp","RegExp","mustBeInteger","mustBeFunction","mustBeArray","mustBeObject","mustBeArrayOrRecord","mustBeObjectOrNull","mustBeStringOrBoolean","mustBeStringOrObject","mustBeStringOrArray","mustBeStringOrUint8Array","getFlag","object","mustBeFn","mustBe","checkForInvalidFlags","where","validateInitializeOptions","options","wasmURL","worker","validateMangleCache","mangleCache","validated","JSON","stringify","pushLogFlags","flags","isTTY2","logLevelDefault","color","logLevel","logLimit","pushCommonFlags","legalComments","sourceRoot","sourcesContent","format","globalName","mangleProps","reserveProps","minify","minifySyntax","minifyWhitespace","minifyIdentifiers","drop","charset","treeShaking","ignoreAnnotations","jsx","jsxFactory","jsxFragment","define","pure","keepNames","map","join","what","source","fn","flagsForBuildOptions","callName","writeDefault","_a2","entries","stdinContents","stdinResolveDir","watchMode","sourcemap","bundle","watch","splitting","preserveSymlinks","metafile","outfile","outdir","outbase","platform","tsconfig","resolveExtensions","nodePathsInput","mainFields","conditions","external","loader","outExtension","publicPath","entryNames","chunkNames","assetNames","inject","banner","footer","entryPoints","absWorkingDir","stdin","allowOverwrite","incremental","plugins","watchKeys","onRebuild","values","type","path3","ext","entryPoint","stdinKeys","contents","resolveDir","sourcefile","loader2","nodePaths","flagsForTransformOptions","tsconfigRaw","createChannel","streamIn","responseCallbacks","Map","pluginCallbacks","watchCallbacks","serveCallbacks","isClosed","nextRequestID","nextBuildKey","stdout","stdoutUsed","readFromStdout","chunk","limit","swap","handleIncomingPacket","copyWithin","afterClose","callback","clear","callbacks","onWait","e","console","error","sendRequest","refs","response","unref","ref","writeToStdin","sendResponse","handleRequest","request","command","onRequest","args","err","errors","extractErrorMessageV8","isFirstPacket","binaryVersion","String","fromCharCode","delete","handlePlugins","initialOptions","buildKey","stash","onStartCallbacks","onEndCallbacks","onResolveCallbacks","onLoadCallbacks","nextCallbackID","requestPlugins","isSetupDone","setup","plugin","onResolve","onLoad","resolve","keys2","pluginName","importer","namespace","kind","pluginData","Promise","resolve2","reject","path","store","replaceDetailsInMessages","warnings","sideEffects","suffix","load","promise","onStart","callback2","registeredText","registeredNote","extractCallerV8","note","onEnd","filter","esbuild","ok","result","sanitizeMessages","ids","watchFiles","watchDirs","sanitizeStringArray","runOnEndCallbacks","logPluginError","done","then","refCount","pluginRefs","buildServeData","port","host","servedir","wait","stop","buildLogLevelDefault","transformLogLevelDefault","buildOrServe","details","createObjectStash","isTTY","message","detail","handleError","failureErrorWithLog","isSync","buildOrServeContinue","logPluginError2","callerRefs","serveOptions","defaultWD","defaultWD2","isBrowser","serve2","rebuild","copyResponseToResult","outputFiles","convertOutputFiles","parse","writeToStdout","log","replace","buildResponseToResult","isDisposed","error2","response2","location","notes","error3","result3","dispose","isStopped","serviceStopError","watchResponse","result2","rebuildID","serveResponse","transform2","input","fs","fs3","start","inputPath","inputFS","outstanding","next","code","codeFS","readFile","mapFS","writeFile","formatMessages2","messages","terminalWidth","isWarning","analyzeMetafile2","verbose","service","nextID","ident","tried","lines","stack","split","splice","parseStackLinesV8","at","readFileSync","startsWith","line","slice","match","exec","lineText","column","file","suggestion","summary","pluginText","sanitizeLocation","property","fallbackPluginName","messagesClone","index","notesClone","noteKeys","noteText","noteLocation","require","os","ESBUILD_BINARY_PATH","process","env","knownWindowsPackages","knownUnixlikePackages","pkgAndSubpathForCurrentPlatform","pkg","subpath","platformKey","arch","endianness","pkgForSomeOtherPlatform","libMainJS","nodeModulesDirectory","dirname","basename","unixKey","existsSync","windowsKey","downloadedBinPath","esbuildLibDir","generateBinPath","binPath","otherPkg","isYarnPnP","binTargetPath","copyFileSync","chmodSync","child_process","crypto","path2","fs2","os2","tty","worker_threads","ESBUILD_WORKER_THREADS","major","minor","versions","node","_a","isInternalWorkerThread","workerData","esbuildVersion","esbuildCommandAndArgs","__filename","__dirname","isatty","fsSync","tempFile","unlinkSync","randomFileName","writeFileSync","fsAsync","unlink","ensureServiceIsRunning","buildOptions","workerThreadService","startWorkerThreadService","runServiceSync","res","initializeWasCalled","cwd","longLivedService","child","spawn","concat","windowsHide","stdio","on","execFileSync","maxBuffer","ESBUILD_MAX_BUFFER","tmpdir","randomBytes","worker_threads2","port1","mainPort","port2","workerPort","MessageChannel","Worker","transferList","execArgv","wasStopped","fakeBuildError","validateBuildSyncOptions","applyProperties","properties","runCallSync","sharedBuffer","SharedArrayBuffer","sharedBufferView","Int32Array","msg","postMessage","status","Atomics","id2","receiveMessageOnPort","startSyncServiceWorker","parentPort","extractProperties","add","notify","Infinity","module","exports"],"mappings":"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","sourcesContent":["var __create = Object.create;\nvar __defProp = Object.defineProperty;\nvar __defProps = Object.defineProperties;\nvar __getOwnPropDesc = Object.getOwnPropertyDescriptor;\nvar __getOwnPropDescs = Object.getOwnPropertyDescriptors;\nvar __getOwnPropNames = Object.getOwnPropertyNames;\nvar __getOwnPropSymbols = Object.getOwnPropertySymbols;\nvar __getProtoOf = Object.getPrototypeOf;\nvar __hasOwnProp = Object.prototype.hasOwnProperty;\nvar __propIsEnum = Object.prototype.propertyIsEnumerable;\nvar __defNormalProp = (obj, key, value) => key in obj ? __defProp(obj, key, { enumerable: true, configurable: true, writable: true, value }) : obj[key] = value;\nvar __spreadValues = (a, b) => {\n  for (var prop in b || (b = {}))\n    if (__hasOwnProp.call(b, prop))\n      __defNormalProp(a, prop, b[prop]);\n  if (__getOwnPropSymbols)\n    for (var prop of __getOwnPropSymbols(b)) {\n      if (__propIsEnum.call(b, prop))\n        __defNormalProp(a, prop, b[prop]);\n    }\n  return a;\n};\nvar __spreadProps = (a, b) => __defProps(a, __getOwnPropDescs(b));\nvar __markAsModule = (target) => __defProp(target, \"__esModule\", { value: true });\nvar __export = (target, all) => {\n  for (var name in all)\n    __defProp(target, name, { get: all[name], enumerable: true });\n};\nvar __reExport = (target, module2, copyDefault, desc) => {\n  if (module2 && typeof module2 === \"object\" || typeof module2 === \"function\") {\n    for (let key of __getOwnPropNames(module2))\n      if (!__hasOwnProp.call(target, key) && (copyDefault || key !== \"default\"))\n        __defProp(target, key, { get: () => module2[key], enumerable: !(desc = __getOwnPropDesc(module2, key)) || desc.enumerable });\n  }\n  return target;\n};\nvar __toESM = (module2, isNodeMode) => {\n  return __reExport(__markAsModule(__defProp(module2 != null ? __create(__getProtoOf(module2)) : {}, \"default\", !isNodeMode && module2 && module2.__esModule ? { get: () => module2.default, enumerable: true } : { value: module2, enumerable: true })), module2);\n};\nvar __toCommonJS = /* @__PURE__ */ ((cache) => {\n  return (module2, temp) => {\n    return cache && cache.get(module2) || (temp = __reExport(__markAsModule({}), module2, 1), cache && cache.set(module2, temp), temp);\n  };\n})(typeof WeakMap !== \"undefined\" ? /* @__PURE__ */ new WeakMap() : 0);\n\n// lib/npm/node.ts\nvar node_exports = {};\n__export(node_exports, {\n  analyzeMetafile: () => analyzeMetafile,\n  analyzeMetafileSync: () => analyzeMetafileSync,\n  build: () => build,\n  buildSync: () => buildSync,\n  default: () => node_default,\n  formatMessages: () => formatMessages,\n  formatMessagesSync: () => formatMessagesSync,\n  initialize: () => initialize,\n  serve: () => serve,\n  transform: () => transform,\n  transformSync: () => transformSync,\n  version: () => version\n});\n\n// lib/shared/stdio_protocol.ts\nfunction encodePacket(packet) {\n  let visit = (value) => {\n    if (value === null) {\n      bb.write8(0);\n    } else if (typeof value === \"boolean\") {\n      bb.write8(1);\n      bb.write8(+value);\n    } else if (typeof value === \"number\") {\n      bb.write8(2);\n      bb.write32(value | 0);\n    } else if (typeof value === \"string\") {\n      bb.write8(3);\n      bb.write(encodeUTF8(value));\n    } else if (value instanceof Uint8Array) {\n      bb.write8(4);\n      bb.write(value);\n    } else if (value instanceof Array) {\n      bb.write8(5);\n      bb.write32(value.length);\n      for (let item of value) {\n        visit(item);\n      }\n    } else {\n      let keys = Object.keys(value);\n      bb.write8(6);\n      bb.write32(keys.length);\n      for (let key of keys) {\n        bb.write(encodeUTF8(key));\n        visit(value[key]);\n      }\n    }\n  };\n  let bb = new ByteBuffer();\n  bb.write32(0);\n  bb.write32(packet.id << 1 | +!packet.isRequest);\n  visit(packet.value);\n  writeUInt32LE(bb.buf, bb.len - 4, 0);\n  return bb.buf.subarray(0, bb.len);\n}\nfunction decodePacket(bytes) {\n  let visit = () => {\n    switch (bb.read8()) {\n      case 0:\n        return null;\n      case 1:\n        return !!bb.read8();\n      case 2:\n        return bb.read32();\n      case 3:\n        return decodeUTF8(bb.read());\n      case 4:\n        return bb.read();\n      case 5: {\n        let count = bb.read32();\n        let value2 = [];\n        for (let i = 0; i < count; i++) {\n          value2.push(visit());\n        }\n        return value2;\n      }\n      case 6: {\n        let count = bb.read32();\n        let value2 = {};\n        for (let i = 0; i < count; i++) {\n          value2[decodeUTF8(bb.read())] = visit();\n        }\n        return value2;\n      }\n      default:\n        throw new Error(\"Invalid packet\");\n    }\n  };\n  let bb = new ByteBuffer(bytes);\n  let id = bb.read32();\n  let isRequest = (id & 1) === 0;\n  id >>>= 1;\n  let value = visit();\n  if (bb.ptr !== bytes.length) {\n    throw new Error(\"Invalid packet\");\n  }\n  return { id, isRequest, value };\n}\nvar ByteBuffer = class {\n  constructor(buf = new Uint8Array(1024)) {\n    this.buf = buf;\n    this.len = 0;\n    this.ptr = 0;\n  }\n  _write(delta) {\n    if (this.len + delta > this.buf.length) {\n      let clone = new Uint8Array((this.len + delta) * 2);\n      clone.set(this.buf);\n      this.buf = clone;\n    }\n    this.len += delta;\n    return this.len - delta;\n  }\n  write8(value) {\n    let offset = this._write(1);\n    this.buf[offset] = value;\n  }\n  write32(value) {\n    let offset = this._write(4);\n    writeUInt32LE(this.buf, value, offset);\n  }\n  write(bytes) {\n    let offset = this._write(4 + bytes.length);\n    writeUInt32LE(this.buf, bytes.length, offset);\n    this.buf.set(bytes, offset + 4);\n  }\n  _read(delta) {\n    if (this.ptr + delta > this.buf.length) {\n      throw new Error(\"Invalid packet\");\n    }\n    this.ptr += delta;\n    return this.ptr - delta;\n  }\n  read8() {\n    return this.buf[this._read(1)];\n  }\n  read32() {\n    return readUInt32LE(this.buf, this._read(4));\n  }\n  read() {\n    let length = this.read32();\n    let bytes = new Uint8Array(length);\n    let ptr = this._read(bytes.length);\n    bytes.set(this.buf.subarray(ptr, ptr + length));\n    return bytes;\n  }\n};\nvar encodeUTF8;\nvar decodeUTF8;\nif (typeof TextEncoder !== \"undefined\" && typeof TextDecoder !== \"undefined\") {\n  let encoder = new TextEncoder();\n  let decoder = new TextDecoder();\n  encodeUTF8 = (text) => encoder.encode(text);\n  decodeUTF8 = (bytes) => decoder.decode(bytes);\n} else if (typeof Buffer !== \"undefined\") {\n  encodeUTF8 = (text) => {\n    let buffer = Buffer.from(text);\n    if (!(buffer instanceof Uint8Array)) {\n      buffer = new Uint8Array(buffer);\n    }\n    return buffer;\n  };\n  decodeUTF8 = (bytes) => {\n    let { buffer, byteOffset, byteLength } = bytes;\n    return Buffer.from(buffer, byteOffset, byteLength).toString();\n  };\n} else {\n  throw new Error(\"No UTF-8 codec found\");\n}\nfunction readUInt32LE(buffer, offset) {\n  return buffer[offset++] | buffer[offset++] << 8 | buffer[offset++] << 16 | buffer[offset++] << 24;\n}\nfunction writeUInt32LE(buffer, value, offset) {\n  buffer[offset++] = value;\n  buffer[offset++] = value >> 8;\n  buffer[offset++] = value >> 16;\n  buffer[offset++] = value >> 24;\n}\n\n// lib/shared/common.ts\nfunction validateTarget(target) {\n  target += \"\";\n  if (target.indexOf(\",\") >= 0)\n    throw new Error(`Invalid target: ${target}`);\n  return target;\n}\nvar canBeAnything = () => null;\nvar mustBeBoolean = (value) => typeof value === \"boolean\" ? null : \"a boolean\";\nvar mustBeBooleanOrObject = (value) => typeof value === \"boolean\" || typeof value === \"object\" && !Array.isArray(value) ? null : \"a boolean or an object\";\nvar mustBeString = (value) => typeof value === \"string\" ? null : \"a string\";\nvar mustBeRegExp = (value) => value instanceof RegExp ? null : \"a RegExp object\";\nvar mustBeInteger = (value) => typeof value === \"number\" && value === (value | 0) ? null : \"an integer\";\nvar mustBeFunction = (value) => typeof value === \"function\" ? null : \"a function\";\nvar mustBeArray = (value) => Array.isArray(value) ? null : \"an array\";\nvar mustBeObject = (value) => typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"an object\";\nvar mustBeArrayOrRecord = (value) => typeof value === \"object\" && value !== null ? null : \"an array or an object\";\nvar mustBeObjectOrNull = (value) => typeof value === \"object\" && !Array.isArray(value) ? null : \"an object or null\";\nvar mustBeStringOrBoolean = (value) => typeof value === \"string\" || typeof value === \"boolean\" ? null : \"a string or a boolean\";\nvar mustBeStringOrObject = (value) => typeof value === \"string\" || typeof value === \"object\" && value !== null && !Array.isArray(value) ? null : \"a string or an object\";\nvar mustBeStringOrArray = (value) => typeof value === \"string\" || Array.isArray(value) ? null : \"a string or an array\";\nvar mustBeStringOrUint8Array = (value) => typeof value === \"string\" || value instanceof Uint8Array ? null : \"a string or a Uint8Array\";\nfunction getFlag(object, keys, key, mustBeFn) {\n  let value = object[key];\n  keys[key + \"\"] = true;\n  if (value === void 0)\n    return void 0;\n  let mustBe = mustBeFn(value);\n  if (mustBe !== null)\n    throw new Error(`\"${key}\" must be ${mustBe}`);\n  return value;\n}\nfunction checkForInvalidFlags(object, keys, where) {\n  for (let key in object) {\n    if (!(key in keys)) {\n      throw new Error(`Invalid option ${where}: \"${key}\"`);\n    }\n  }\n}\nfunction validateInitializeOptions(options) {\n  let keys = /* @__PURE__ */ Object.create(null);\n  let wasmURL = getFlag(options, keys, \"wasmURL\", mustBeString);\n  let worker = getFlag(options, keys, \"worker\", mustBeBoolean);\n  checkForInvalidFlags(options, keys, \"in startService() call\");\n  return {\n    wasmURL,\n    worker\n  };\n}\nfunction validateMangleCache(mangleCache) {\n  let validated;\n  if (mangleCache !== void 0) {\n    validated = /* @__PURE__ */ Object.create(null);\n    for (let key of Object.keys(mangleCache)) {\n      let value = mangleCache[key];\n      if (typeof value === \"string\" || value === false) {\n        validated[key] = value;\n      } else {\n        throw new Error(`Expected ${JSON.stringify(key)} in mangle cache to map to either a string or false`);\n      }\n    }\n  }\n  return validated;\n}\nfunction pushLogFlags(flags, options, keys, isTTY2, logLevelDefault) {\n  let color = getFlag(options, keys, \"color\", mustBeBoolean);\n  let logLevel = getFlag(options, keys, \"logLevel\", mustBeString);\n  let logLimit = getFlag(options, keys, \"logLimit\", mustBeInteger);\n  if (color !== void 0)\n    flags.push(`--color=${color}`);\n  else if (isTTY2)\n    flags.push(`--color=true`);\n  flags.push(`--log-level=${logLevel || logLevelDefault}`);\n  flags.push(`--log-limit=${logLimit || 0}`);\n}\nfunction pushCommonFlags(flags, options, keys) {\n  let legalComments = getFlag(options, keys, \"legalComments\", mustBeString);\n  let sourceRoot = getFlag(options, keys, \"sourceRoot\", mustBeString);\n  let sourcesContent = getFlag(options, keys, \"sourcesContent\", mustBeBoolean);\n  let target = getFlag(options, keys, \"target\", mustBeStringOrArray);\n  let format = getFlag(options, keys, \"format\", mustBeString);\n  let globalName = getFlag(options, keys, \"globalName\", mustBeString);\n  let mangleProps = getFlag(options, keys, \"mangleProps\", mustBeRegExp);\n  let reserveProps = getFlag(options, keys, \"reserveProps\", mustBeRegExp);\n  let minify = getFlag(options, keys, \"minify\", mustBeBoolean);\n  let minifySyntax = getFlag(options, keys, \"minifySyntax\", mustBeBoolean);\n  let minifyWhitespace = getFlag(options, keys, \"minifyWhitespace\", mustBeBoolean);\n  let minifyIdentifiers = getFlag(options, keys, \"minifyIdentifiers\", mustBeBoolean);\n  let drop = getFlag(options, keys, \"drop\", mustBeArray);\n  let charset = getFlag(options, keys, \"charset\", mustBeString);\n  let treeShaking = getFlag(options, keys, \"treeShaking\", mustBeBoolean);\n  let ignoreAnnotations = getFlag(options, keys, \"ignoreAnnotations\", mustBeBoolean);\n  let jsx = getFlag(options, keys, \"jsx\", mustBeString);\n  let jsxFactory = getFlag(options, keys, \"jsxFactory\", mustBeString);\n  let jsxFragment = getFlag(options, keys, \"jsxFragment\", mustBeString);\n  let define = getFlag(options, keys, \"define\", mustBeObject);\n  let pure = getFlag(options, keys, \"pure\", mustBeArray);\n  let keepNames = getFlag(options, keys, \"keepNames\", mustBeBoolean);\n  if (legalComments)\n    flags.push(`--legal-comments=${legalComments}`);\n  if (sourceRoot !== void 0)\n    flags.push(`--source-root=${sourceRoot}`);\n  if (sourcesContent !== void 0)\n    flags.push(`--sources-content=${sourcesContent}`);\n  if (target) {\n    if (Array.isArray(target))\n      flags.push(`--target=${Array.from(target).map(validateTarget).join(\",\")}`);\n    else\n      flags.push(`--target=${validateTarget(target)}`);\n  }\n  if (format)\n    flags.push(`--format=${format}`);\n  if (globalName)\n    flags.push(`--global-name=${globalName}`);\n  if (minify)\n    flags.push(\"--minify\");\n  if (minifySyntax)\n    flags.push(\"--minify-syntax\");\n  if (minifyWhitespace)\n    flags.push(\"--minify-whitespace\");\n  if (minifyIdentifiers)\n    flags.push(\"--minify-identifiers\");\n  if (charset)\n    flags.push(`--charset=${charset}`);\n  if (treeShaking !== void 0)\n    flags.push(`--tree-shaking=${treeShaking}`);\n  if (ignoreAnnotations)\n    flags.push(`--ignore-annotations`);\n  if (drop)\n    for (let what of drop)\n      flags.push(`--drop:${what}`);\n  if (mangleProps)\n    flags.push(`--mangle-props=${mangleProps.source}`);\n  if (reserveProps)\n    flags.push(`--reserve-props=${reserveProps.source}`);\n  if (jsx)\n    flags.push(`--jsx=${jsx}`);\n  if (jsxFactory)\n    flags.push(`--jsx-factory=${jsxFactory}`);\n  if (jsxFragment)\n    flags.push(`--jsx-fragment=${jsxFragment}`);\n  if (define) {\n    for (let key in define) {\n      if (key.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid define: ${key}`);\n      flags.push(`--define:${key}=${define[key]}`);\n    }\n  }\n  if (pure)\n    for (let fn of pure)\n      flags.push(`--pure:${fn}`);\n  if (keepNames)\n    flags.push(`--keep-names`);\n}\nfunction flagsForBuildOptions(callName, options, isTTY2, logLevelDefault, writeDefault) {\n  var _a2;\n  let flags = [];\n  let entries = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  let stdinContents = null;\n  let stdinResolveDir = null;\n  let watchMode = null;\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let bundle = getFlag(options, keys, \"bundle\", mustBeBoolean);\n  let watch = getFlag(options, keys, \"watch\", mustBeBooleanOrObject);\n  let splitting = getFlag(options, keys, \"splitting\", mustBeBoolean);\n  let preserveSymlinks = getFlag(options, keys, \"preserveSymlinks\", mustBeBoolean);\n  let metafile = getFlag(options, keys, \"metafile\", mustBeBoolean);\n  let outfile = getFlag(options, keys, \"outfile\", mustBeString);\n  let outdir = getFlag(options, keys, \"outdir\", mustBeString);\n  let outbase = getFlag(options, keys, \"outbase\", mustBeString);\n  let platform = getFlag(options, keys, \"platform\", mustBeString);\n  let tsconfig = getFlag(options, keys, \"tsconfig\", mustBeString);\n  let resolveExtensions = getFlag(options, keys, \"resolveExtensions\", mustBeArray);\n  let nodePathsInput = getFlag(options, keys, \"nodePaths\", mustBeArray);\n  let mainFields = getFlag(options, keys, \"mainFields\", mustBeArray);\n  let conditions = getFlag(options, keys, \"conditions\", mustBeArray);\n  let external = getFlag(options, keys, \"external\", mustBeArray);\n  let loader = getFlag(options, keys, \"loader\", mustBeObject);\n  let outExtension = getFlag(options, keys, \"outExtension\", mustBeObject);\n  let publicPath = getFlag(options, keys, \"publicPath\", mustBeString);\n  let entryNames = getFlag(options, keys, \"entryNames\", mustBeString);\n  let chunkNames = getFlag(options, keys, \"chunkNames\", mustBeString);\n  let assetNames = getFlag(options, keys, \"assetNames\", mustBeString);\n  let inject = getFlag(options, keys, \"inject\", mustBeArray);\n  let banner = getFlag(options, keys, \"banner\", mustBeObject);\n  let footer = getFlag(options, keys, \"footer\", mustBeObject);\n  let entryPoints = getFlag(options, keys, \"entryPoints\", mustBeArrayOrRecord);\n  let absWorkingDir = getFlag(options, keys, \"absWorkingDir\", mustBeString);\n  let stdin = getFlag(options, keys, \"stdin\", mustBeObject);\n  let write = (_a2 = getFlag(options, keys, \"write\", mustBeBoolean)) != null ? _a2 : writeDefault;\n  let allowOverwrite = getFlag(options, keys, \"allowOverwrite\", mustBeBoolean);\n  let incremental = getFlag(options, keys, \"incremental\", mustBeBoolean) === true;\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  keys.plugins = true;\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap${sourcemap === true ? \"\" : `=${sourcemap}`}`);\n  if (bundle)\n    flags.push(\"--bundle\");\n  if (allowOverwrite)\n    flags.push(\"--allow-overwrite\");\n  if (watch) {\n    flags.push(\"--watch\");\n    if (typeof watch === \"boolean\") {\n      watchMode = {};\n    } else {\n      let watchKeys = /* @__PURE__ */ Object.create(null);\n      let onRebuild = getFlag(watch, watchKeys, \"onRebuild\", mustBeFunction);\n      checkForInvalidFlags(watch, watchKeys, `on \"watch\" in ${callName}() call`);\n      watchMode = { onRebuild };\n    }\n  }\n  if (splitting)\n    flags.push(\"--splitting\");\n  if (preserveSymlinks)\n    flags.push(\"--preserve-symlinks\");\n  if (metafile)\n    flags.push(`--metafile`);\n  if (outfile)\n    flags.push(`--outfile=${outfile}`);\n  if (outdir)\n    flags.push(`--outdir=${outdir}`);\n  if (outbase)\n    flags.push(`--outbase=${outbase}`);\n  if (platform)\n    flags.push(`--platform=${platform}`);\n  if (tsconfig)\n    flags.push(`--tsconfig=${tsconfig}`);\n  if (resolveExtensions) {\n    let values = [];\n    for (let value of resolveExtensions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid resolve extension: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--resolve-extensions=${values.join(\",\")}`);\n  }\n  if (publicPath)\n    flags.push(`--public-path=${publicPath}`);\n  if (entryNames)\n    flags.push(`--entry-names=${entryNames}`);\n  if (chunkNames)\n    flags.push(`--chunk-names=${chunkNames}`);\n  if (assetNames)\n    flags.push(`--asset-names=${assetNames}`);\n  if (mainFields) {\n    let values = [];\n    for (let value of mainFields) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid main field: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--main-fields=${values.join(\",\")}`);\n  }\n  if (conditions) {\n    let values = [];\n    for (let value of conditions) {\n      value += \"\";\n      if (value.indexOf(\",\") >= 0)\n        throw new Error(`Invalid condition: ${value}`);\n      values.push(value);\n    }\n    flags.push(`--conditions=${values.join(\",\")}`);\n  }\n  if (external)\n    for (let name of external)\n      flags.push(`--external:${name}`);\n  if (banner) {\n    for (let type in banner) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid banner file type: ${type}`);\n      flags.push(`--banner:${type}=${banner[type]}`);\n    }\n  }\n  if (footer) {\n    for (let type in footer) {\n      if (type.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid footer file type: ${type}`);\n      flags.push(`--footer:${type}=${footer[type]}`);\n    }\n  }\n  if (inject)\n    for (let path3 of inject)\n      flags.push(`--inject:${path3}`);\n  if (loader) {\n    for (let ext in loader) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid loader extension: ${ext}`);\n      flags.push(`--loader:${ext}=${loader[ext]}`);\n    }\n  }\n  if (outExtension) {\n    for (let ext in outExtension) {\n      if (ext.indexOf(\"=\") >= 0)\n        throw new Error(`Invalid out extension: ${ext}`);\n      flags.push(`--out-extension:${ext}=${outExtension[ext]}`);\n    }\n  }\n  if (entryPoints) {\n    if (Array.isArray(entryPoints)) {\n      for (let entryPoint of entryPoints) {\n        entries.push([\"\", entryPoint + \"\"]);\n      }\n    } else {\n      for (let [key, value] of Object.entries(entryPoints)) {\n        entries.push([key + \"\", value + \"\"]);\n      }\n    }\n  }\n  if (stdin) {\n    let stdinKeys = /* @__PURE__ */ Object.create(null);\n    let contents = getFlag(stdin, stdinKeys, \"contents\", mustBeString);\n    let resolveDir = getFlag(stdin, stdinKeys, \"resolveDir\", mustBeString);\n    let sourcefile = getFlag(stdin, stdinKeys, \"sourcefile\", mustBeString);\n    let loader2 = getFlag(stdin, stdinKeys, \"loader\", mustBeString);\n    checkForInvalidFlags(stdin, stdinKeys, 'in \"stdin\" object');\n    if (sourcefile)\n      flags.push(`--sourcefile=${sourcefile}`);\n    if (loader2)\n      flags.push(`--loader=${loader2}`);\n    if (resolveDir)\n      stdinResolveDir = resolveDir + \"\";\n    stdinContents = contents ? contents + \"\" : \"\";\n  }\n  let nodePaths = [];\n  if (nodePathsInput) {\n    for (let value of nodePathsInput) {\n      value += \"\";\n      nodePaths.push(value);\n    }\n  }\n  return {\n    entries,\n    flags,\n    write,\n    stdinContents,\n    stdinResolveDir,\n    absWorkingDir,\n    incremental,\n    nodePaths,\n    watch: watchMode,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction flagsForTransformOptions(callName, options, isTTY2, logLevelDefault) {\n  let flags = [];\n  let keys = /* @__PURE__ */ Object.create(null);\n  pushLogFlags(flags, options, keys, isTTY2, logLevelDefault);\n  pushCommonFlags(flags, options, keys);\n  let sourcemap = getFlag(options, keys, \"sourcemap\", mustBeStringOrBoolean);\n  let tsconfigRaw = getFlag(options, keys, \"tsconfigRaw\", mustBeStringOrObject);\n  let sourcefile = getFlag(options, keys, \"sourcefile\", mustBeString);\n  let loader = getFlag(options, keys, \"loader\", mustBeString);\n  let banner = getFlag(options, keys, \"banner\", mustBeString);\n  let footer = getFlag(options, keys, \"footer\", mustBeString);\n  let mangleCache = getFlag(options, keys, \"mangleCache\", mustBeObject);\n  checkForInvalidFlags(options, keys, `in ${callName}() call`);\n  if (sourcemap)\n    flags.push(`--sourcemap=${sourcemap === true ? \"external\" : sourcemap}`);\n  if (tsconfigRaw)\n    flags.push(`--tsconfig-raw=${typeof tsconfigRaw === \"string\" ? tsconfigRaw : JSON.stringify(tsconfigRaw)}`);\n  if (sourcefile)\n    flags.push(`--sourcefile=${sourcefile}`);\n  if (loader)\n    flags.push(`--loader=${loader}`);\n  if (banner)\n    flags.push(`--banner=${banner}`);\n  if (footer)\n    flags.push(`--footer=${footer}`);\n  return {\n    flags,\n    mangleCache: validateMangleCache(mangleCache)\n  };\n}\nfunction createChannel(streamIn) {\n  let responseCallbacks = /* @__PURE__ */ new Map();\n  let pluginCallbacks = /* @__PURE__ */ new Map();\n  let watchCallbacks = /* @__PURE__ */ new Map();\n  let serveCallbacks = /* @__PURE__ */ new Map();\n  let isClosed = false;\n  let nextRequestID = 0;\n  let nextBuildKey = 0;\n  let stdout = new Uint8Array(16 * 1024);\n  let stdoutUsed = 0;\n  let readFromStdout = (chunk) => {\n    let limit = stdoutUsed + chunk.length;\n    if (limit > stdout.length) {\n      let swap = new Uint8Array(limit * 2);\n      swap.set(stdout);\n      stdout = swap;\n    }\n    stdout.set(chunk, stdoutUsed);\n    stdoutUsed += chunk.length;\n    let offset = 0;\n    while (offset + 4 <= stdoutUsed) {\n      let length = readUInt32LE(stdout, offset);\n      if (offset + 4 + length > stdoutUsed) {\n        break;\n      }\n      offset += 4;\n      handleIncomingPacket(stdout.subarray(offset, offset + length));\n      offset += length;\n    }\n    if (offset > 0) {\n      stdout.copyWithin(0, offset, stdoutUsed);\n      stdoutUsed -= offset;\n    }\n  };\n  let afterClose = () => {\n    isClosed = true;\n    for (let callback of responseCallbacks.values()) {\n      callback(\"The service was stopped\", null);\n    }\n    responseCallbacks.clear();\n    for (let callbacks of serveCallbacks.values()) {\n      callbacks.onWait(\"The service was stopped\");\n    }\n    serveCallbacks.clear();\n    for (let callback of watchCallbacks.values()) {\n      try {\n        callback(new Error(\"The service was stopped\"), null);\n      } catch (e) {\n        console.error(e);\n      }\n    }\n    watchCallbacks.clear();\n  };\n  let sendRequest = (refs, value, callback) => {\n    if (isClosed)\n      return callback(\"The service is no longer running\", null);\n    let id = nextRequestID++;\n    responseCallbacks.set(id, (error, response) => {\n      try {\n        callback(error, response);\n      } finally {\n        if (refs)\n          refs.unref();\n      }\n    });\n    if (refs)\n      refs.ref();\n    streamIn.writeToStdin(encodePacket({ id, isRequest: true, value }));\n  };\n  let sendResponse = (id, value) => {\n    if (isClosed)\n      throw new Error(\"The service is no longer running\");\n    streamIn.writeToStdin(encodePacket({ id, isRequest: false, value }));\n  };\n  let handleRequest = async (id, request) => {\n    try {\n      switch (request.command) {\n        case \"ping\": {\n          sendResponse(id, {});\n          break;\n        }\n        case \"on-start\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"on-resolve\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"on-load\": {\n          let callback = pluginCallbacks.get(request.key);\n          if (!callback)\n            sendResponse(id, {});\n          else\n            sendResponse(id, await callback(request));\n          break;\n        }\n        case \"serve-request\": {\n          let callbacks = serveCallbacks.get(request.key);\n          if (callbacks && callbacks.onRequest)\n            callbacks.onRequest(request.args);\n          sendResponse(id, {});\n          break;\n        }\n        case \"serve-wait\": {\n          let callbacks = serveCallbacks.get(request.key);\n          if (callbacks)\n            callbacks.onWait(request.error);\n          sendResponse(id, {});\n          break;\n        }\n        case \"watch-rebuild\": {\n          let callback = watchCallbacks.get(request.key);\n          try {\n            if (callback)\n              callback(null, request.args);\n          } catch (err) {\n            console.error(err);\n          }\n          sendResponse(id, {});\n          break;\n        }\n        default:\n          throw new Error(`Invalid command: ` + request.command);\n      }\n    } catch (e) {\n      sendResponse(id, { errors: [extractErrorMessageV8(e, streamIn, null, void 0, \"\")] });\n    }\n  };\n  let isFirstPacket = true;\n  let handleIncomingPacket = (bytes) => {\n    if (isFirstPacket) {\n      isFirstPacket = false;\n      let binaryVersion = String.fromCharCode(...bytes);\n      if (binaryVersion !== \"0.14.22\") {\n        throw new Error(`Cannot start service: Host version \"${\"0.14.22\"}\" does not match binary version ${JSON.stringify(binaryVersion)}`);\n      }\n      return;\n    }\n    let packet = decodePacket(bytes);\n    if (packet.isRequest) {\n      handleRequest(packet.id, packet.value);\n    } else {\n      let callback = responseCallbacks.get(packet.id);\n      responseCallbacks.delete(packet.id);\n      if (packet.value.error)\n        callback(packet.value.error, {});\n      else\n        callback(null, packet.value);\n    }\n  };\n  let handlePlugins = async (initialOptions, plugins, buildKey, stash, refs) => {\n    let onStartCallbacks = [];\n    let onEndCallbacks = [];\n    let onResolveCallbacks = {};\n    let onLoadCallbacks = {};\n    let nextCallbackID = 0;\n    let i = 0;\n    let requestPlugins = [];\n    let isSetupDone = false;\n    plugins = [...plugins];\n    for (let item of plugins) {\n      let keys = {};\n      if (typeof item !== \"object\")\n        throw new Error(`Plugin at index ${i} must be an object`);\n      const name = getFlag(item, keys, \"name\", mustBeString);\n      if (typeof name !== \"string\" || name === \"\")\n        throw new Error(`Plugin at index ${i} is missing a name`);\n      try {\n        let setup = getFlag(item, keys, \"setup\", mustBeFunction);\n        if (typeof setup !== \"function\")\n          throw new Error(`Plugin is missing a setup function`);\n        checkForInvalidFlags(item, keys, `on plugin ${JSON.stringify(name)}`);\n        let plugin = {\n          name,\n          onResolve: [],\n          onLoad: []\n        };\n        i++;\n        let resolve = (path3, options = {}) => {\n          if (!isSetupDone)\n            throw new Error('Cannot call \"resolve\" before plugin setup has completed');\n          if (typeof path3 !== \"string\")\n            throw new Error(`The path to resolve must be a string`);\n          let keys2 = /* @__PURE__ */ Object.create(null);\n          let pluginName = getFlag(options, keys2, \"pluginName\", mustBeString);\n          let importer = getFlag(options, keys2, \"importer\", mustBeString);\n          let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n          let resolveDir = getFlag(options, keys2, \"resolveDir\", mustBeString);\n          let kind = getFlag(options, keys2, \"kind\", mustBeString);\n          let pluginData = getFlag(options, keys2, \"pluginData\", canBeAnything);\n          checkForInvalidFlags(options, keys2, \"in resolve() call\");\n          return new Promise((resolve2, reject) => {\n            const request = {\n              command: \"resolve\",\n              path: path3,\n              key: buildKey,\n              pluginName: name\n            };\n            if (pluginName != null)\n              request.pluginName = pluginName;\n            if (importer != null)\n              request.importer = importer;\n            if (namespace != null)\n              request.namespace = namespace;\n            if (resolveDir != null)\n              request.resolveDir = resolveDir;\n            if (kind != null)\n              request.kind = kind;\n            if (pluginData != null)\n              request.pluginData = stash.store(pluginData);\n            sendRequest(refs, request, (error, response) => {\n              if (error !== null)\n                reject(new Error(error));\n              else\n                resolve2({\n                  errors: replaceDetailsInMessages(response.errors, stash),\n                  warnings: replaceDetailsInMessages(response.warnings, stash),\n                  path: response.path,\n                  external: response.external,\n                  sideEffects: response.sideEffects,\n                  namespace: response.namespace,\n                  suffix: response.suffix,\n                  pluginData: stash.load(response.pluginData)\n                });\n            });\n          });\n        };\n        let promise = setup({\n          initialOptions,\n          resolve,\n          onStart(callback2) {\n            let registeredText = `This error came from the \"onStart\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onStart\");\n            onStartCallbacks.push({ name, callback: callback2, note: registeredNote });\n          },\n          onEnd(callback2) {\n            let registeredText = `This error came from the \"onEnd\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onEnd\");\n            onEndCallbacks.push({ name, callback: callback2, note: registeredNote });\n          },\n          onResolve(options, callback2) {\n            let registeredText = `This error came from the \"onResolve\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onResolve\");\n            let keys2 = {};\n            let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n            let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n            checkForInvalidFlags(options, keys2, `in onResolve() call for plugin ${JSON.stringify(name)}`);\n            if (filter == null)\n              throw new Error(`onResolve() call is missing a filter`);\n            let id = nextCallbackID++;\n            onResolveCallbacks[id] = { name, callback: callback2, note: registeredNote };\n            plugin.onResolve.push({ id, filter: filter.source, namespace: namespace || \"\" });\n          },\n          onLoad(options, callback2) {\n            let registeredText = `This error came from the \"onLoad\" callback registered here:`;\n            let registeredNote = extractCallerV8(new Error(registeredText), streamIn, \"onLoad\");\n            let keys2 = {};\n            let filter = getFlag(options, keys2, \"filter\", mustBeRegExp);\n            let namespace = getFlag(options, keys2, \"namespace\", mustBeString);\n            checkForInvalidFlags(options, keys2, `in onLoad() call for plugin ${JSON.stringify(name)}`);\n            if (filter == null)\n              throw new Error(`onLoad() call is missing a filter`);\n            let id = nextCallbackID++;\n            onLoadCallbacks[id] = { name, callback: callback2, note: registeredNote };\n            plugin.onLoad.push({ id, filter: filter.source, namespace: namespace || \"\" });\n          },\n          esbuild: streamIn.esbuild\n        });\n        if (promise)\n          await promise;\n        requestPlugins.push(plugin);\n      } catch (e) {\n        return { ok: false, error: e, pluginName: name };\n      }\n    }\n    const callback = async (request) => {\n      switch (request.command) {\n        case \"on-start\": {\n          let response = { errors: [], warnings: [] };\n          await Promise.all(onStartCallbacks.map(async ({ name, callback: callback2, note }) => {\n            try {\n              let result = await callback2();\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onStart() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onStart() callback in plugin ${JSON.stringify(name)}`);\n                if (errors != null)\n                  response.errors.push(...sanitizeMessages(errors, \"errors\", stash, name));\n                if (warnings != null)\n                  response.warnings.push(...sanitizeMessages(warnings, \"warnings\", stash, name));\n              }\n            } catch (e) {\n              response.errors.push(extractErrorMessageV8(e, streamIn, stash, note && note(), name));\n            }\n          }));\n          return response;\n        }\n        case \"on-resolve\": {\n          let response = {}, name = \"\", callback2, note;\n          for (let id of request.ids) {\n            try {\n              ({ name, callback: callback2, note } = onResolveCallbacks[id]);\n              let result = await callback2({\n                path: request.path,\n                importer: request.importer,\n                namespace: request.namespace,\n                resolveDir: request.resolveDir,\n                kind: request.kind,\n                pluginData: stash.load(request.pluginData)\n              });\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onResolve() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                let path3 = getFlag(result, keys, \"path\", mustBeString);\n                let namespace = getFlag(result, keys, \"namespace\", mustBeString);\n                let suffix = getFlag(result, keys, \"suffix\", mustBeString);\n                let external = getFlag(result, keys, \"external\", mustBeBoolean);\n                let sideEffects = getFlag(result, keys, \"sideEffects\", mustBeBoolean);\n                let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onResolve() callback in plugin ${JSON.stringify(name)}`);\n                response.id = id;\n                if (pluginName != null)\n                  response.pluginName = pluginName;\n                if (path3 != null)\n                  response.path = path3;\n                if (namespace != null)\n                  response.namespace = namespace;\n                if (suffix != null)\n                  response.suffix = suffix;\n                if (external != null)\n                  response.external = external;\n                if (sideEffects != null)\n                  response.sideEffects = sideEffects;\n                if (pluginData != null)\n                  response.pluginData = stash.store(pluginData);\n                if (errors != null)\n                  response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                if (warnings != null)\n                  response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                if (watchFiles != null)\n                  response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                if (watchDirs != null)\n                  response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                break;\n              }\n            } catch (e) {\n              return { id, errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)] };\n            }\n          }\n          return response;\n        }\n        case \"on-load\": {\n          let response = {}, name = \"\", callback2, note;\n          for (let id of request.ids) {\n            try {\n              ({ name, callback: callback2, note } = onLoadCallbacks[id]);\n              let result = await callback2({\n                path: request.path,\n                namespace: request.namespace,\n                suffix: request.suffix,\n                pluginData: stash.load(request.pluginData)\n              });\n              if (result != null) {\n                if (typeof result !== \"object\")\n                  throw new Error(`Expected onLoad() callback in plugin ${JSON.stringify(name)} to return an object`);\n                let keys = {};\n                let pluginName = getFlag(result, keys, \"pluginName\", mustBeString);\n                let contents = getFlag(result, keys, \"contents\", mustBeStringOrUint8Array);\n                let resolveDir = getFlag(result, keys, \"resolveDir\", mustBeString);\n                let pluginData = getFlag(result, keys, \"pluginData\", canBeAnything);\n                let loader = getFlag(result, keys, \"loader\", mustBeString);\n                let errors = getFlag(result, keys, \"errors\", mustBeArray);\n                let warnings = getFlag(result, keys, \"warnings\", mustBeArray);\n                let watchFiles = getFlag(result, keys, \"watchFiles\", mustBeArray);\n                let watchDirs = getFlag(result, keys, \"watchDirs\", mustBeArray);\n                checkForInvalidFlags(result, keys, `from onLoad() callback in plugin ${JSON.stringify(name)}`);\n                response.id = id;\n                if (pluginName != null)\n                  response.pluginName = pluginName;\n                if (contents instanceof Uint8Array)\n                  response.contents = contents;\n                else if (contents != null)\n                  response.contents = encodeUTF8(contents);\n                if (resolveDir != null)\n                  response.resolveDir = resolveDir;\n                if (pluginData != null)\n                  response.pluginData = stash.store(pluginData);\n                if (loader != null)\n                  response.loader = loader;\n                if (errors != null)\n                  response.errors = sanitizeMessages(errors, \"errors\", stash, name);\n                if (warnings != null)\n                  response.warnings = sanitizeMessages(warnings, \"warnings\", stash, name);\n                if (watchFiles != null)\n                  response.watchFiles = sanitizeStringArray(watchFiles, \"watchFiles\");\n                if (watchDirs != null)\n                  response.watchDirs = sanitizeStringArray(watchDirs, \"watchDirs\");\n                break;\n              }\n            } catch (e) {\n              return { id, errors: [extractErrorMessageV8(e, streamIn, stash, note && note(), name)] };\n            }\n          }\n          return response;\n        }\n        default:\n          throw new Error(`Invalid command: ` + request.command);\n      }\n    };\n    let runOnEndCallbacks = (result, logPluginError, done) => done();\n    if (onEndCallbacks.length > 0) {\n      runOnEndCallbacks = (result, logPluginError, done) => {\n        (async () => {\n          for (const { name, callback: callback2, note } of onEndCallbacks) {\n            try {\n              await callback2(result);\n            } catch (e) {\n              result.errors.push(await new Promise((resolve) => logPluginError(e, name, note && note(), resolve)));\n            }\n          }\n        })().then(done);\n      };\n    }\n    isSetupDone = true;\n    let refCount = 0;\n    return {\n      ok: true,\n      requestPlugins,\n      runOnEndCallbacks,\n      pluginRefs: {\n        ref() {\n          if (++refCount === 1)\n            pluginCallbacks.set(buildKey, callback);\n        },\n        unref() {\n          if (--refCount === 0)\n            pluginCallbacks.delete(buildKey);\n        }\n      }\n    };\n  };\n  let buildServeData = (refs, options, request, key) => {\n    let keys = {};\n    let port = getFlag(options, keys, \"port\", mustBeInteger);\n    let host = getFlag(options, keys, \"host\", mustBeString);\n    let servedir = getFlag(options, keys, \"servedir\", mustBeString);\n    let onRequest = getFlag(options, keys, \"onRequest\", mustBeFunction);\n    let onWait;\n    let wait = new Promise((resolve, reject) => {\n      onWait = (error) => {\n        serveCallbacks.delete(key);\n        if (error !== null)\n          reject(new Error(error));\n        else\n          resolve();\n      };\n    });\n    request.serve = {};\n    checkForInvalidFlags(options, keys, `in serve() call`);\n    if (port !== void 0)\n      request.serve.port = port;\n    if (host !== void 0)\n      request.serve.host = host;\n    if (servedir !== void 0)\n      request.serve.servedir = servedir;\n    serveCallbacks.set(key, {\n      onRequest,\n      onWait\n    });\n    return {\n      wait,\n      stop() {\n        sendRequest(refs, { command: \"serve-stop\", key }, () => {\n        });\n      }\n    };\n  };\n  const buildLogLevelDefault = \"warning\";\n  const transformLogLevelDefault = \"silent\";\n  let buildOrServe = (args) => {\n    let key = nextBuildKey++;\n    const details = createObjectStash();\n    let plugins;\n    let { refs, options, isTTY: isTTY2, callback } = args;\n    if (typeof options === \"object\") {\n      let value = options.plugins;\n      if (value !== void 0) {\n        if (!Array.isArray(value))\n          throw new Error(`\"plugins\" must be an array`);\n        plugins = value;\n      }\n    }\n    let logPluginError = (e, pluginName, note, done) => {\n      let flags = [];\n      try {\n        pushLogFlags(flags, options, {}, isTTY2, buildLogLevelDefault);\n      } catch {\n      }\n      const message = extractErrorMessageV8(e, streamIn, details, note, pluginName);\n      sendRequest(refs, { command: \"error\", flags, error: message }, () => {\n        message.detail = details.load(message.detail);\n        done(message);\n      });\n    };\n    let handleError = (e, pluginName) => {\n      logPluginError(e, pluginName, void 0, (error) => {\n        callback(failureErrorWithLog(\"Build failed\", [error], []), null);\n      });\n    };\n    if (plugins && plugins.length > 0) {\n      if (streamIn.isSync)\n        return handleError(new Error(\"Cannot use plugins in synchronous API calls\"), \"\");\n      handlePlugins(options, plugins, key, details, refs).then((result) => {\n        if (!result.ok) {\n          handleError(result.error, result.pluginName);\n        } else {\n          try {\n            buildOrServeContinue(__spreadProps(__spreadValues({}, args), {\n              key,\n              details,\n              logPluginError,\n              requestPlugins: result.requestPlugins,\n              runOnEndCallbacks: result.runOnEndCallbacks,\n              pluginRefs: result.pluginRefs\n            }));\n          } catch (e) {\n            handleError(e, \"\");\n          }\n        }\n      }, (e) => handleError(e, \"\"));\n    } else {\n      try {\n        buildOrServeContinue(__spreadProps(__spreadValues({}, args), {\n          key,\n          details,\n          logPluginError,\n          requestPlugins: null,\n          runOnEndCallbacks: (result, logPluginError2, done) => done(),\n          pluginRefs: null\n        }));\n      } catch (e) {\n        handleError(e, \"\");\n      }\n    }\n  };\n  let buildOrServeContinue = ({\n    callName,\n    refs: callerRefs,\n    serveOptions,\n    options,\n    isTTY: isTTY2,\n    defaultWD: defaultWD2,\n    callback,\n    key,\n    details,\n    logPluginError,\n    requestPlugins,\n    runOnEndCallbacks,\n    pluginRefs\n  }) => {\n    const refs = {\n      ref() {\n        if (pluginRefs)\n          pluginRefs.ref();\n        if (callerRefs)\n          callerRefs.ref();\n      },\n      unref() {\n        if (pluginRefs)\n          pluginRefs.unref();\n        if (callerRefs)\n          callerRefs.unref();\n      }\n    };\n    let writeDefault = !streamIn.isBrowser;\n    let {\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir,\n      incremental,\n      nodePaths,\n      watch,\n      mangleCache\n    } = flagsForBuildOptions(callName, options, isTTY2, buildLogLevelDefault, writeDefault);\n    let request = {\n      command: \"build\",\n      key,\n      entries,\n      flags,\n      write,\n      stdinContents,\n      stdinResolveDir,\n      absWorkingDir: absWorkingDir || defaultWD2,\n      incremental,\n      nodePaths\n    };\n    if (requestPlugins)\n      request.plugins = requestPlugins;\n    if (mangleCache)\n      request.mangleCache = mangleCache;\n    let serve2 = serveOptions && buildServeData(refs, serveOptions, request, key);\n    let rebuild;\n    let stop;\n    let copyResponseToResult = (response, result) => {\n      if (response.outputFiles)\n        result.outputFiles = response.outputFiles.map(convertOutputFiles);\n      if (response.metafile)\n        result.metafile = JSON.parse(response.metafile);\n      if (response.mangleCache)\n        result.mangleCache = response.mangleCache;\n      if (response.writeToStdout !== void 0)\n        console.log(decodeUTF8(response.writeToStdout).replace(/\\n$/, \"\"));\n    };\n    let buildResponseToResult = (response, callback2) => {\n      let result = {\n        errors: replaceDetailsInMessages(response.errors, details),\n        warnings: replaceDetailsInMessages(response.warnings, details)\n      };\n      copyResponseToResult(response, result);\n      runOnEndCallbacks(result, logPluginError, () => {\n        if (result.errors.length > 0) {\n          return callback2(failureErrorWithLog(\"Build failed\", result.errors, result.warnings), null);\n        }\n        if (response.rebuild) {\n          if (!rebuild) {\n            let isDisposed = false;\n            rebuild = () => new Promise((resolve, reject) => {\n              if (isDisposed || isClosed)\n                throw new Error(\"Cannot rebuild\");\n              sendRequest(refs, { command: \"rebuild\", key }, (error2, response2) => {\n                if (error2) {\n                  const message = { pluginName: \"\", text: error2, location: null, notes: [], detail: void 0 };\n                  return callback2(failureErrorWithLog(\"Build failed\", [message], []), null);\n                }\n                buildResponseToResult(response2, (error3, result3) => {\n                  if (error3)\n                    reject(error3);\n                  else\n                    resolve(result3);\n                });\n              });\n            });\n            refs.ref();\n            rebuild.dispose = () => {\n              if (isDisposed)\n                return;\n              isDisposed = true;\n              sendRequest(refs, { command: \"rebuild-dispose\", key }, () => {\n              });\n              refs.unref();\n            };\n          }\n          result.rebuild = rebuild;\n        }\n        if (response.watch) {\n          if (!stop) {\n            let isStopped = false;\n            refs.ref();\n            stop = () => {\n              if (isStopped)\n                return;\n              isStopped = true;\n              watchCallbacks.delete(key);\n              sendRequest(refs, { command: \"watch-stop\", key }, () => {\n              });\n              refs.unref();\n            };\n            if (watch) {\n              watchCallbacks.set(key, (serviceStopError, watchResponse) => {\n                if (serviceStopError) {\n                  if (watch.onRebuild)\n                    watch.onRebuild(serviceStopError, null);\n                  return;\n                }\n                let result2 = {\n                  errors: replaceDetailsInMessages(watchResponse.errors, details),\n                  warnings: replaceDetailsInMessages(watchResponse.warnings, details)\n                };\n                copyResponseToResult(watchResponse, result2);\n                runOnEndCallbacks(result2, logPluginError, () => {\n                  if (result2.errors.length > 0) {\n                    if (watch.onRebuild)\n                      watch.onRebuild(failureErrorWithLog(\"Build failed\", result2.errors, result2.warnings), null);\n                    return;\n                  }\n                  if (watchResponse.rebuildID !== void 0)\n                    result2.rebuild = rebuild;\n                  result2.stop = stop;\n                  if (watch.onRebuild)\n                    watch.onRebuild(null, result2);\n                });\n              });\n            }\n          }\n          result.stop = stop;\n        }\n        callback2(null, result);\n      });\n    };\n    if (write && streamIn.isBrowser)\n      throw new Error(`Cannot enable \"write\" in the browser`);\n    if (incremental && streamIn.isSync)\n      throw new Error(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch && streamIn.isSync)\n      throw new Error(`Cannot use \"watch\" with a synchronous build`);\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      if (serve2) {\n        let serveResponse = response;\n        let isStopped = false;\n        refs.ref();\n        let result = {\n          port: serveResponse.port,\n          host: serveResponse.host,\n          wait: serve2.wait,\n          stop() {\n            if (isStopped)\n              return;\n            isStopped = true;\n            serve2.stop();\n            refs.unref();\n          }\n        };\n        refs.ref();\n        serve2.wait.then(refs.unref, refs.unref);\n        return callback(null, result);\n      }\n      return buildResponseToResult(response, callback);\n    });\n  };\n  let transform2 = ({ callName, refs, input, options, isTTY: isTTY2, fs: fs3, callback }) => {\n    const details = createObjectStash();\n    let start = (inputPath) => {\n      try {\n        if (typeof input !== \"string\")\n          throw new Error('The input to \"transform\" must be a string');\n        let {\n          flags,\n          mangleCache\n        } = flagsForTransformOptions(callName, options, isTTY2, transformLogLevelDefault);\n        let request = {\n          command: \"transform\",\n          flags,\n          inputFS: inputPath !== null,\n          input: inputPath !== null ? inputPath : input\n        };\n        if (mangleCache)\n          request.mangleCache = mangleCache;\n        sendRequest(refs, request, (error, response) => {\n          if (error)\n            return callback(new Error(error), null);\n          let errors = replaceDetailsInMessages(response.errors, details);\n          let warnings = replaceDetailsInMessages(response.warnings, details);\n          let outstanding = 1;\n          let next = () => {\n            if (--outstanding === 0) {\n              let result = { warnings, code: response.code, map: response.map };\n              if (response.mangleCache)\n                result.mangleCache = response == null ? void 0 : response.mangleCache;\n              callback(null, result);\n            }\n          };\n          if (errors.length > 0)\n            return callback(failureErrorWithLog(\"Transform failed\", errors, warnings), null);\n          if (response.codeFS) {\n            outstanding++;\n            fs3.readFile(response.code, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.code = contents;\n                next();\n              }\n            });\n          }\n          if (response.mapFS) {\n            outstanding++;\n            fs3.readFile(response.map, (err, contents) => {\n              if (err !== null) {\n                callback(err, null);\n              } else {\n                response.map = contents;\n                next();\n              }\n            });\n          }\n          next();\n        });\n      } catch (e) {\n        let flags = [];\n        try {\n          pushLogFlags(flags, options, {}, isTTY2, transformLogLevelDefault);\n        } catch {\n        }\n        const error = extractErrorMessageV8(e, streamIn, details, void 0, \"\");\n        sendRequest(refs, { command: \"error\", flags, error }, () => {\n          error.detail = details.load(error.detail);\n          callback(failureErrorWithLog(\"Transform failed\", [error], []), null);\n        });\n      }\n    };\n    if (typeof input === \"string\" && input.length > 1024 * 1024) {\n      let next = start;\n      start = () => fs3.writeFile(input, next);\n    }\n    start(null);\n  };\n  let formatMessages2 = ({ callName, refs, messages, options, callback }) => {\n    let result = sanitizeMessages(messages, \"messages\", null, \"\");\n    if (!options)\n      throw new Error(`Missing second argument in ${callName}() call`);\n    let keys = {};\n    let kind = getFlag(options, keys, \"kind\", mustBeString);\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let terminalWidth = getFlag(options, keys, \"terminalWidth\", mustBeInteger);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    if (kind === void 0)\n      throw new Error(`Missing \"kind\" in ${callName}() call`);\n    if (kind !== \"error\" && kind !== \"warning\")\n      throw new Error(`Expected \"kind\" to be \"error\" or \"warning\" in ${callName}() call`);\n    let request = {\n      command: \"format-msgs\",\n      messages: result,\n      isWarning: kind === \"warning\"\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (terminalWidth !== void 0)\n      request.terminalWidth = terminalWidth;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.messages);\n    });\n  };\n  let analyzeMetafile2 = ({ callName, refs, metafile, options, callback }) => {\n    if (options === void 0)\n      options = {};\n    let keys = {};\n    let color = getFlag(options, keys, \"color\", mustBeBoolean);\n    let verbose = getFlag(options, keys, \"verbose\", mustBeBoolean);\n    checkForInvalidFlags(options, keys, `in ${callName}() call`);\n    let request = {\n      command: \"analyze-metafile\",\n      metafile\n    };\n    if (color !== void 0)\n      request.color = color;\n    if (verbose !== void 0)\n      request.verbose = verbose;\n    sendRequest(refs, request, (error, response) => {\n      if (error)\n        return callback(new Error(error), null);\n      callback(null, response.result);\n    });\n  };\n  return {\n    readFromStdout,\n    afterClose,\n    service: {\n      buildOrServe,\n      transform: transform2,\n      formatMessages: formatMessages2,\n      analyzeMetafile: analyzeMetafile2\n    }\n  };\n}\nfunction createObjectStash() {\n  const map = /* @__PURE__ */ new Map();\n  let nextID = 0;\n  return {\n    load(id) {\n      return map.get(id);\n    },\n    store(value) {\n      if (value === void 0)\n        return -1;\n      const id = nextID++;\n      map.set(id, value);\n      return id;\n    }\n  };\n}\nfunction extractCallerV8(e, streamIn, ident) {\n  let note;\n  let tried = false;\n  return () => {\n    if (tried)\n      return note;\n    tried = true;\n    try {\n      let lines = (e.stack + \"\").split(\"\\n\");\n      lines.splice(1, 1);\n      let location = parseStackLinesV8(streamIn, lines, ident);\n      if (location) {\n        note = { text: e.message, location };\n        return note;\n      }\n    } catch {\n    }\n  };\n}\nfunction extractErrorMessageV8(e, streamIn, stash, note, pluginName) {\n  let text = \"Internal error\";\n  let location = null;\n  try {\n    text = (e && e.message || e) + \"\";\n  } catch {\n  }\n  try {\n    location = parseStackLinesV8(streamIn, (e.stack + \"\").split(\"\\n\"), \"\");\n  } catch {\n  }\n  return { pluginName, text, location, notes: note ? [note] : [], detail: stash ? stash.store(e) : -1 };\n}\nfunction parseStackLinesV8(streamIn, lines, ident) {\n  let at = \"    at \";\n  if (streamIn.readFileSync && !lines[0].startsWith(at) && lines[1].startsWith(at)) {\n    for (let i = 1; i < lines.length; i++) {\n      let line = lines[i];\n      if (!line.startsWith(at))\n        continue;\n      line = line.slice(at.length);\n      while (true) {\n        let match = /^(?:new |async )?\\S+ \\((.*)\\)$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^eval at \\S+ \\((.*)\\)(?:, \\S+:\\d+:\\d+)?$/.exec(line);\n        if (match) {\n          line = match[1];\n          continue;\n        }\n        match = /^(\\S+):(\\d+):(\\d+)$/.exec(line);\n        if (match) {\n          let contents;\n          try {\n            contents = streamIn.readFileSync(match[1], \"utf8\");\n          } catch {\n            break;\n          }\n          let lineText = contents.split(/\\r\\n|\\r|\\n|\\u2028|\\u2029/)[+match[2] - 1] || \"\";\n          let column = +match[3] - 1;\n          let length = lineText.slice(column, column + ident.length) === ident ? ident.length : 0;\n          return {\n            file: match[1],\n            namespace: \"file\",\n            line: +match[2],\n            column: encodeUTF8(lineText.slice(0, column)).length,\n            length: encodeUTF8(lineText.slice(column, column + length)).length,\n            lineText: lineText + \"\\n\" + lines.slice(1).join(\"\\n\"),\n            suggestion: \"\"\n          };\n        }\n        break;\n      }\n    }\n  }\n  return null;\n}\nfunction failureErrorWithLog(text, errors, warnings) {\n  let limit = 5;\n  let summary = errors.length < 1 ? \"\" : ` with ${errors.length} error${errors.length < 2 ? \"\" : \"s\"}:` + errors.slice(0, limit + 1).map((e, i) => {\n    if (i === limit)\n      return \"\\n...\";\n    if (!e.location)\n      return `\nerror: ${e.text}`;\n    let { file, line, column } = e.location;\n    let pluginText = e.pluginName ? `[plugin: ${e.pluginName}] ` : \"\";\n    return `\n${file}:${line}:${column}: ERROR: ${pluginText}${e.text}`;\n  }).join(\"\");\n  let error = new Error(`${text}${summary}`);\n  error.errors = errors;\n  error.warnings = warnings;\n  return error;\n}\nfunction replaceDetailsInMessages(messages, stash) {\n  for (const message of messages) {\n    message.detail = stash.load(message.detail);\n  }\n  return messages;\n}\nfunction sanitizeLocation(location, where) {\n  if (location == null)\n    return null;\n  let keys = {};\n  let file = getFlag(location, keys, \"file\", mustBeString);\n  let namespace = getFlag(location, keys, \"namespace\", mustBeString);\n  let line = getFlag(location, keys, \"line\", mustBeInteger);\n  let column = getFlag(location, keys, \"column\", mustBeInteger);\n  let length = getFlag(location, keys, \"length\", mustBeInteger);\n  let lineText = getFlag(location, keys, \"lineText\", mustBeString);\n  let suggestion = getFlag(location, keys, \"suggestion\", mustBeString);\n  checkForInvalidFlags(location, keys, where);\n  return {\n    file: file || \"\",\n    namespace: namespace || \"\",\n    line: line || 0,\n    column: column || 0,\n    length: length || 0,\n    lineText: lineText || \"\",\n    suggestion: suggestion || \"\"\n  };\n}\nfunction sanitizeMessages(messages, property, stash, fallbackPluginName) {\n  let messagesClone = [];\n  let index = 0;\n  for (const message of messages) {\n    let keys = {};\n    let pluginName = getFlag(message, keys, \"pluginName\", mustBeString);\n    let text = getFlag(message, keys, \"text\", mustBeString);\n    let location = getFlag(message, keys, \"location\", mustBeObjectOrNull);\n    let notes = getFlag(message, keys, \"notes\", mustBeArray);\n    let detail = getFlag(message, keys, \"detail\", canBeAnything);\n    let where = `in element ${index} of \"${property}\"`;\n    checkForInvalidFlags(message, keys, where);\n    let notesClone = [];\n    if (notes) {\n      for (const note of notes) {\n        let noteKeys = {};\n        let noteText = getFlag(note, noteKeys, \"text\", mustBeString);\n        let noteLocation = getFlag(note, noteKeys, \"location\", mustBeObjectOrNull);\n        checkForInvalidFlags(note, noteKeys, where);\n        notesClone.push({\n          text: noteText || \"\",\n          location: sanitizeLocation(noteLocation, where)\n        });\n      }\n    }\n    messagesClone.push({\n      pluginName: pluginName || fallbackPluginName,\n      text: text || \"\",\n      location: sanitizeLocation(location, where),\n      notes: notesClone,\n      detail: stash ? stash.store(detail) : -1\n    });\n    index++;\n  }\n  return messagesClone;\n}\nfunction sanitizeStringArray(values, property) {\n  const result = [];\n  for (const value of values) {\n    if (typeof value !== \"string\")\n      throw new Error(`${JSON.stringify(property)} must be an array of strings`);\n    result.push(value);\n  }\n  return result;\n}\nfunction convertOutputFiles({ path: path3, contents }) {\n  let text = null;\n  return {\n    path: path3,\n    contents,\n    get text() {\n      if (text === null)\n        text = decodeUTF8(contents);\n      return text;\n    }\n  };\n}\n\n// lib/npm/node-platform.ts\nvar fs = require(\"fs\");\nvar os = require(\"os\");\nvar path = require(\"path\");\nvar ESBUILD_BINARY_PATH = process.env.ESBUILD_BINARY_PATH || ESBUILD_BINARY_PATH;\nvar knownWindowsPackages = {\n  \"win32 arm64 LE\": \"esbuild-windows-arm64\",\n  \"win32 ia32 LE\": \"esbuild-windows-32\",\n  \"win32 x64 LE\": \"esbuild-windows-64\"\n};\nvar knownUnixlikePackages = {\n  \"android arm64 LE\": \"esbuild-android-arm64\",\n  \"darwin arm64 LE\": \"esbuild-darwin-arm64\",\n  \"darwin x64 LE\": \"esbuild-darwin-64\",\n  \"freebsd arm64 LE\": \"esbuild-freebsd-arm64\",\n  \"freebsd x64 LE\": \"esbuild-freebsd-64\",\n  \"linux arm LE\": \"esbuild-linux-arm\",\n  \"linux arm64 LE\": \"esbuild-linux-arm64\",\n  \"linux ia32 LE\": \"esbuild-linux-32\",\n  \"linux mips64el LE\": \"esbuild-linux-mips64le\",\n  \"linux ppc64 LE\": \"esbuild-linux-ppc64le\",\n  \"linux riscv64 LE\": \"esbuild-linux-riscv64\",\n  \"linux s390x BE\": \"esbuild-linux-s390x\",\n  \"linux x64 LE\": \"esbuild-linux-64\",\n  \"netbsd x64 LE\": \"esbuild-netbsd-64\",\n  \"openbsd x64 LE\": \"esbuild-openbsd-64\",\n  \"sunos x64 LE\": \"esbuild-sunos-64\"\n};\nfunction pkgAndSubpathForCurrentPlatform() {\n  let pkg;\n  let subpath;\n  let platformKey = `${process.platform} ${os.arch()} ${os.endianness()}`;\n  if (platformKey in knownWindowsPackages) {\n    pkg = knownWindowsPackages[platformKey];\n    subpath = \"esbuild.exe\";\n  } else if (platformKey in knownUnixlikePackages) {\n    pkg = knownUnixlikePackages[platformKey];\n    subpath = \"bin/esbuild\";\n  } else {\n    throw new Error(`Unsupported platform: ${platformKey}`);\n  }\n  return { pkg, subpath };\n}\nfunction pkgForSomeOtherPlatform() {\n  const libMainJS = require.resolve(\"esbuild\");\n  const nodeModulesDirectory = path.dirname(path.dirname(path.dirname(libMainJS)));\n  if (path.basename(nodeModulesDirectory) === \"node_modules\") {\n    for (const unixKey in knownUnixlikePackages) {\n      try {\n        const pkg = knownUnixlikePackages[unixKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg)))\n          return pkg;\n      } catch {\n      }\n    }\n    for (const windowsKey in knownWindowsPackages) {\n      try {\n        const pkg = knownWindowsPackages[windowsKey];\n        if (fs.existsSync(path.join(nodeModulesDirectory, pkg)))\n          return pkg;\n      } catch {\n      }\n    }\n  }\n  return null;\n}\nfunction downloadedBinPath(pkg, subpath) {\n  const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n  return path.join(esbuildLibDir, `downloaded-${pkg}-${path.basename(subpath)}`);\n}\nfunction generateBinPath() {\n  if (ESBUILD_BINARY_PATH) {\n    return ESBUILD_BINARY_PATH;\n  }\n  const { pkg, subpath } = pkgAndSubpathForCurrentPlatform();\n  let binPath;\n  try {\n    binPath = require.resolve(`${pkg}/${subpath}`);\n  } catch (e) {\n    binPath = downloadedBinPath(pkg, subpath);\n    if (!fs.existsSync(binPath)) {\n      try {\n        require.resolve(pkg);\n      } catch {\n        const otherPkg = pkgForSomeOtherPlatform();\n        if (otherPkg) {\n          throw new Error(`\nYou installed esbuild on another platform than the one you're currently using.\nThis won't work because esbuild is written with native code and needs to\ninstall a platform-specific binary executable.\n\nSpecifically the \"${otherPkg}\" package is present but this platform\nneeds the \"${pkg}\" package instead. People often get into this\nsituation by installing esbuild on Windows or macOS and copying \"node_modules\"\ninto a Docker image that runs Linux, or by copying \"node_modules\" between\nWindows and WSL environments.\n\nIf you are installing with npm, you can try not copying the \"node_modules\"\ndirectory when you copy the files over, and running \"npm ci\" or \"npm install\"\non the destination platform after the copy. Or you could consider using yarn\ninstead which has built-in support for installing a package on multiple\nplatforms simultaneously.\n\nIf you are installing with yarn, you can try listing both this platform and the\nother platform in your \".yarnrc.yml\" file using the \"supportedArchitectures\"\nfeature: https://yarnpkg.com/configuration/yarnrc/#supportedArchitectures\nKeep in mind that this means multiple copies of esbuild will be present.\n\nAnother alternative is to use the \"esbuild-wasm\" package instead, which works\nthe same way on all platforms. But it comes with a heavy performance cost and\ncan sometimes be 10x slower than the \"esbuild\" package, so you may also not\nwant to do that.\n`);\n        }\n        throw new Error(`The package \"${pkg}\" could not be found, and is needed by esbuild.\n\nIf you are installing esbuild with npm, make sure that you don't specify the\n\"--no-optional\" flag. The \"optionalDependencies\" package.json feature is used\nby esbuild to install the correct binary executable for your current platform.`);\n      }\n      throw e;\n    }\n  }\n  let isYarnPnP = false;\n  try {\n    require(\"pnpapi\");\n    isYarnPnP = true;\n  } catch (e) {\n  }\n  if (isYarnPnP) {\n    const esbuildLibDir = path.dirname(require.resolve(\"esbuild\"));\n    const binTargetPath = path.join(esbuildLibDir, `pnpapi-${pkg}-${path.basename(subpath)}`);\n    if (!fs.existsSync(binTargetPath)) {\n      fs.copyFileSync(binPath, binTargetPath);\n      fs.chmodSync(binTargetPath, 493);\n    }\n    return binTargetPath;\n  }\n  return binPath;\n}\n\n// lib/npm/node.ts\nvar child_process = require(\"child_process\");\nvar crypto = require(\"crypto\");\nvar path2 = require(\"path\");\nvar fs2 = require(\"fs\");\nvar os2 = require(\"os\");\nvar tty = require(\"tty\");\nvar worker_threads;\nif (process.env.ESBUILD_WORKER_THREADS !== \"0\") {\n  try {\n    worker_threads = require(\"worker_threads\");\n  } catch {\n  }\n  let [major, minor] = process.versions.node.split(\".\");\n  if (+major < 12 || +major === 12 && +minor < 17 || +major === 13 && +minor < 13) {\n    worker_threads = void 0;\n  }\n}\nvar _a;\nvar isInternalWorkerThread = ((_a = worker_threads == null ? void 0 : worker_threads.workerData) == null ? void 0 : _a.esbuildVersion) === \"0.14.22\";\nvar esbuildCommandAndArgs = () => {\n  if ((!ESBUILD_BINARY_PATH || false) && (path2.basename(__filename) !== \"main.js\" || path2.basename(__dirname) !== \"lib\")) {\n    throw new Error(`The esbuild JavaScript API cannot be bundled. Please mark the \"esbuild\" package as external so it's not included in the bundle.\n\nMore information: The file containing the code for esbuild's JavaScript API (${__filename}) does not appear to be inside the esbuild package on the file system, which usually means that the esbuild package was bundled into another file. This is problematic because the API needs to run a binary executable inside the esbuild package which is located using a relative path from the API code to the executable. If the esbuild package is bundled, the relative path will be incorrect and the executable won't be found.`);\n  }\n  if (false) {\n    return [\"node\", [path2.join(__dirname, \"..\", \"bin\", \"esbuild\")]];\n  }\n  return [generateBinPath(), []];\n};\nvar isTTY = () => tty.isatty(2);\nvar fsSync = {\n  readFile(tempFile, callback) {\n    try {\n      let contents = fs2.readFileSync(tempFile, \"utf8\");\n      try {\n        fs2.unlinkSync(tempFile);\n      } catch {\n      }\n      callback(null, contents);\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFileSync(tempFile, contents);\n      callback(tempFile);\n    } catch {\n      callback(null);\n    }\n  }\n};\nvar fsAsync = {\n  readFile(tempFile, callback) {\n    try {\n      fs2.readFile(tempFile, \"utf8\", (err, contents) => {\n        try {\n          fs2.unlink(tempFile, () => callback(err, contents));\n        } catch {\n          callback(err, contents);\n        }\n      });\n    } catch (err) {\n      callback(err, null);\n    }\n  },\n  writeFile(contents, callback) {\n    try {\n      let tempFile = randomFileName();\n      fs2.writeFile(tempFile, contents, (err) => err !== null ? callback(null) : callback(tempFile));\n    } catch {\n      callback(null);\n    }\n  }\n};\nvar version = \"0.14.22\";\nvar build = (options) => ensureServiceIsRunning().build(options);\nvar serve = (serveOptions, buildOptions) => ensureServiceIsRunning().serve(serveOptions, buildOptions);\nvar transform = (input, options) => ensureServiceIsRunning().transform(input, options);\nvar formatMessages = (messages, options) => ensureServiceIsRunning().formatMessages(messages, options);\nvar analyzeMetafile = (messages, options) => ensureServiceIsRunning().analyzeMetafile(messages, options);\nvar buildSync = (options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.buildSync(options);\n  }\n  let result;\n  runServiceSync((service) => service.buildOrServe({\n    callName: \"buildSync\",\n    refs: null,\n    serveOptions: null,\n    options,\n    isTTY: isTTY(),\n    defaultWD,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar transformSync = (input, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.transformSync(input, options);\n  }\n  let result;\n  runServiceSync((service) => service.transform({\n    callName: \"transformSync\",\n    refs: null,\n    input,\n    options: options || {},\n    isTTY: isTTY(),\n    fs: fsSync,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar formatMessagesSync = (messages, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.formatMessagesSync(messages, options);\n  }\n  let result;\n  runServiceSync((service) => service.formatMessages({\n    callName: \"formatMessagesSync\",\n    refs: null,\n    messages,\n    options,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar analyzeMetafileSync = (metafile, options) => {\n  if (worker_threads && !isInternalWorkerThread) {\n    if (!workerThreadService)\n      workerThreadService = startWorkerThreadService(worker_threads);\n    return workerThreadService.analyzeMetafileSync(metafile, options);\n  }\n  let result;\n  runServiceSync((service) => service.analyzeMetafile({\n    callName: \"analyzeMetafileSync\",\n    refs: null,\n    metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n    options,\n    callback: (err, res) => {\n      if (err)\n        throw err;\n      result = res;\n    }\n  }));\n  return result;\n};\nvar initializeWasCalled = false;\nvar initialize = (options) => {\n  options = validateInitializeOptions(options || {});\n  if (options.wasmURL)\n    throw new Error(`The \"wasmURL\" option only works in the browser`);\n  if (options.worker)\n    throw new Error(`The \"worker\" option only works in the browser`);\n  if (initializeWasCalled)\n    throw new Error('Cannot call \"initialize\" more than once');\n  ensureServiceIsRunning();\n  initializeWasCalled = true;\n  return Promise.resolve();\n};\nvar defaultWD = process.cwd();\nvar longLivedService;\nvar ensureServiceIsRunning = () => {\n  if (longLivedService)\n    return longLivedService;\n  let [command, args] = esbuildCommandAndArgs();\n  let child = child_process.spawn(command, args.concat(`--service=${\"0.14.22\"}`, \"--ping\"), {\n    windowsHide: true,\n    stdio: [\"pipe\", \"pipe\", \"inherit\"],\n    cwd: defaultWD\n  });\n  let { readFromStdout, afterClose, service } = createChannel({\n    writeToStdin(bytes) {\n      child.stdin.write(bytes, (err) => {\n        if (err)\n          afterClose();\n      });\n    },\n    readFileSync: fs2.readFileSync,\n    isSync: false,\n    isBrowser: false,\n    esbuild: node_exports\n  });\n  child.stdin.on(\"error\", afterClose);\n  const stdin = child.stdin;\n  const stdout = child.stdout;\n  stdout.on(\"data\", readFromStdout);\n  stdout.on(\"end\", afterClose);\n  let refCount = 0;\n  child.unref();\n  if (stdin.unref) {\n    stdin.unref();\n  }\n  if (stdout.unref) {\n    stdout.unref();\n  }\n  const refs = {\n    ref() {\n      if (++refCount === 1)\n        child.ref();\n    },\n    unref() {\n      if (--refCount === 0)\n        child.unref();\n    }\n  };\n  longLivedService = {\n    build: (options) => {\n      return new Promise((resolve, reject) => {\n        service.buildOrServe({\n          callName: \"build\",\n          refs,\n          serveOptions: null,\n          options,\n          isTTY: isTTY(),\n          defaultWD,\n          callback: (err, res) => err ? reject(err) : resolve(res)\n        });\n      });\n    },\n    serve: (serveOptions, buildOptions) => {\n      if (serveOptions === null || typeof serveOptions !== \"object\")\n        throw new Error(\"The first argument must be an object\");\n      return new Promise((resolve, reject) => service.buildOrServe({\n        callName: \"serve\",\n        refs,\n        serveOptions,\n        options: buildOptions,\n        isTTY: isTTY(),\n        defaultWD,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    transform: (input, options) => {\n      return new Promise((resolve, reject) => service.transform({\n        callName: \"transform\",\n        refs,\n        input,\n        options: options || {},\n        isTTY: isTTY(),\n        fs: fsAsync,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    formatMessages: (messages, options) => {\n      return new Promise((resolve, reject) => service.formatMessages({\n        callName: \"formatMessages\",\n        refs,\n        messages,\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    },\n    analyzeMetafile: (metafile, options) => {\n      return new Promise((resolve, reject) => service.analyzeMetafile({\n        callName: \"analyzeMetafile\",\n        refs,\n        metafile: typeof metafile === \"string\" ? metafile : JSON.stringify(metafile),\n        options,\n        callback: (err, res) => err ? reject(err) : resolve(res)\n      }));\n    }\n  };\n  return longLivedService;\n};\nvar runServiceSync = (callback) => {\n  let [command, args] = esbuildCommandAndArgs();\n  let stdin = new Uint8Array();\n  let { readFromStdout, afterClose, service } = createChannel({\n    writeToStdin(bytes) {\n      if (stdin.length !== 0)\n        throw new Error(\"Must run at most one command\");\n      stdin = bytes;\n    },\n    isSync: true,\n    isBrowser: false,\n    esbuild: node_exports\n  });\n  callback(service);\n  let stdout = child_process.execFileSync(command, args.concat(`--service=${\"0.14.22\"}`), {\n    cwd: defaultWD,\n    windowsHide: true,\n    input: stdin,\n    maxBuffer: +process.env.ESBUILD_MAX_BUFFER || 16 * 1024 * 1024\n  });\n  readFromStdout(stdout);\n  afterClose();\n};\nvar randomFileName = () => {\n  return path2.join(os2.tmpdir(), `esbuild-${crypto.randomBytes(32).toString(\"hex\")}`);\n};\nvar workerThreadService = null;\nvar startWorkerThreadService = (worker_threads2) => {\n  let { port1: mainPort, port2: workerPort } = new worker_threads2.MessageChannel();\n  let worker = new worker_threads2.Worker(__filename, {\n    workerData: { workerPort, defaultWD, esbuildVersion: \"0.14.22\" },\n    transferList: [workerPort],\n    execArgv: []\n  });\n  let nextID = 0;\n  let wasStopped = false;\n  let fakeBuildError = (text) => {\n    let error = new Error(`Build failed with 1 error:\nerror: ${text}`);\n    let errors = [{ pluginName: \"\", text, location: null, notes: [], detail: void 0 }];\n    error.errors = errors;\n    error.warnings = [];\n    return error;\n  };\n  let validateBuildSyncOptions = (options) => {\n    if (!options)\n      return;\n    let plugins = options.plugins;\n    let incremental = options.incremental;\n    let watch = options.watch;\n    if (plugins && plugins.length > 0)\n      throw fakeBuildError(`Cannot use plugins in synchronous API calls`);\n    if (incremental)\n      throw fakeBuildError(`Cannot use \"incremental\" with a synchronous build`);\n    if (watch)\n      throw fakeBuildError(`Cannot use \"watch\" with a synchronous build`);\n  };\n  let applyProperties = (object, properties) => {\n    for (let key in properties) {\n      object[key] = properties[key];\n    }\n  };\n  let runCallSync = (command, args) => {\n    if (wasStopped)\n      throw new Error(\"The service was stopped\");\n    let id = nextID++;\n    let sharedBuffer = new SharedArrayBuffer(8);\n    let sharedBufferView = new Int32Array(sharedBuffer);\n    let msg = { sharedBuffer, id, command, args };\n    worker.postMessage(msg);\n    let status = Atomics.wait(sharedBufferView, 0, 0);\n    if (status !== \"ok\" && status !== \"not-equal\")\n      throw new Error(\"Internal error: Atomics.wait() failed: \" + status);\n    let { message: { id: id2, resolve, reject, properties } } = worker_threads2.receiveMessageOnPort(mainPort);\n    if (id !== id2)\n      throw new Error(`Internal error: Expected id ${id} but got id ${id2}`);\n    if (reject) {\n      applyProperties(reject, properties);\n      throw reject;\n    }\n    return resolve;\n  };\n  worker.unref();\n  return {\n    buildSync(options) {\n      validateBuildSyncOptions(options);\n      return runCallSync(\"build\", [options]);\n    },\n    transformSync(input, options) {\n      return runCallSync(\"transform\", [input, options]);\n    },\n    formatMessagesSync(messages, options) {\n      return runCallSync(\"formatMessages\", [messages, options]);\n    },\n    analyzeMetafileSync(metafile, options) {\n      return runCallSync(\"analyzeMetafile\", [metafile, options]);\n    }\n  };\n};\nvar startSyncServiceWorker = () => {\n  let workerPort = worker_threads.workerData.workerPort;\n  let parentPort = worker_threads.parentPort;\n  let service = ensureServiceIsRunning();\n  defaultWD = worker_threads.workerData.defaultWD;\n  let extractProperties = (object) => {\n    let properties = {};\n    if (object && typeof object === \"object\") {\n      for (let key in object) {\n        properties[key] = object[key];\n      }\n    }\n    return properties;\n  };\n  parentPort.on(\"message\", (msg) => {\n    (async () => {\n      let { sharedBuffer, id, command, args } = msg;\n      let sharedBufferView = new Int32Array(sharedBuffer);\n      try {\n        switch (command) {\n          case \"build\":\n            workerPort.postMessage({ id, resolve: await service.build(args[0]) });\n            break;\n          case \"transform\":\n            workerPort.postMessage({ id, resolve: await service.transform(args[0], args[1]) });\n            break;\n          case \"formatMessages\":\n            workerPort.postMessage({ id, resolve: await service.formatMessages(args[0], args[1]) });\n            break;\n          case \"analyzeMetafile\":\n            workerPort.postMessage({ id, resolve: await service.analyzeMetafile(args[0], args[1]) });\n            break;\n          default:\n            throw new Error(`Invalid command: ${command}`);\n        }\n      } catch (reject) {\n        workerPort.postMessage({ id, reject, properties: extractProperties(reject) });\n      }\n      Atomics.add(sharedBufferView, 0, 1);\n      Atomics.notify(sharedBufferView, 0, Infinity);\n    })();\n  });\n};\nif (isInternalWorkerThread) {\n  startSyncServiceWorker();\n}\nvar node_default = node_exports;\nmodule.exports = __toCommonJS(node_exports);\n// Annotate the CommonJS export names for ESM import in node:\n0 && (module.exports = {\n  analyzeMetafile,\n  analyzeMetafileSync,\n  build,\n  buildSync,\n  formatMessages,\n  formatMessagesSync,\n  initialize,\n  serve,\n  transform,\n  transformSync,\n  version\n});\n"]},"metadata":{},"sourceType":"script"}