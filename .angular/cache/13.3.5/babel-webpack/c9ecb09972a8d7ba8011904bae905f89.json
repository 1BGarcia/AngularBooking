{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nconst os = require(\"os\");\n\nconst path = require(\"path\");\n\nconst url = require(\"url\");\n\nconst util = require(\"util\");\n\nconst fs = require(\"graceful-fs\");\n\nconst ipaddr = require(\"ipaddr.js\");\n\nconst defaultGateway = require(\"default-gateway\");\n\nconst express = require(\"express\");\n\nconst {\n  validate\n} = require(\"schema-utils\");\n\nconst schema = require(\"./options.json\");\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n\n/** @typedef {import(\"webpack\").Stats} Stats */\n\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n\n/** @typedef {import(\"express\").Request} Request */\n\n/** @typedef {import(\"express\").Response} Response */\n\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n\n/** @typedef {import(\"bonjour\").Bonjour} Bonjour */\n\n/** @typedef {import(\"bonjour\").BonjourOptions} BonjourOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n\n/** @typedef {import(\"net\").Socket} Socket */\n\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: string | RegExp | string[], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: string | RegExp | string[], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @typedef {{ [url: string]: string | HttpProxyMiddlewareOptions }} ProxyConfigMap\n */\n\n/**\n * @typedef {HttpProxyMiddlewareOptions[]} ProxyArray\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArray} proxyConfig\n */\n\n/**\n * @typedef {{ path?: string | string[] | undefined, context?: string | string[] | HttpProxyMiddlewareOptionsFilter | undefined } & HttpProxyMiddlewareOptions & ByPass} ProxyConfigArray\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArray | ProxyArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (\n    /** @type {Compiler | MultiCompiler} */\n    options.hooks) {\n      util.deprecate(() => {}, \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\", \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\")();\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(\n    /** @type {Schema} */\n    schema, options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\"\n    });\n    this.compiler =\n    /** @type {Compiler | MultiCompiler} */\n    compiler;\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options =\n    /** @type {Configuration} */\n    options;\n    /**\n     * @type {FSWatcher[]}\n     */\n\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n\n    this.listeners = []; // Keep track of websocket proxies for external websocket upgrade.\n\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n\n    this.currentHash = undefined;\n  } // TODO compatibility with webpack v4, remove it after drop\n\n\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      }\n\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n\n\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false\n    };\n  }\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n\n\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    } // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n\n\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n\n\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway); // Look for the matching interface in all local interfaces.\n\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const {\n        cidr\n      } of\n      /** @type {NetworkInterfaceInfo[]} */\n      addresses) {\n        const net = ipaddr.parseCIDR(\n        /** @type {string} */\n        cidr);\n\n        if (net[0] && net[0].kind() === gatewayIp.kind() && gatewayIp.match(net)) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n\n\n  static internalIP(family) {\n    return _asyncToGenerator(function* () {\n      try {\n        const {\n          gateway\n        } = yield defaultGateway[family]();\n        return Server.findIp(gateway);\n      } catch {// ignore\n      }\n    })();\n  }\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n\n\n  static internalIPSync(family) {\n    try {\n      const {\n        gateway\n      } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {// ignore\n    }\n  }\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n\n\n  static getHostname(hostname) {\n    return _asyncToGenerator(function* () {\n      if (hostname === \"local-ip\") {\n        return (yield Server.internalIP(\"v4\")) || (yield Server.internalIP(\"v6\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv4\") {\n        return (yield Server.internalIP(\"v4\")) || \"0.0.0.0\";\n      } else if (hostname === \"local-ipv6\") {\n        return (yield Server.internalIP(\"v6\")) || \"::\";\n      }\n\n      return hostname;\n    })();\n  }\n  /**\n   * @param {Port} port\n   * @returns {Promise<number | string>}\n   */\n\n\n  static getFreePort(port) {\n    return _asyncToGenerator(function* () {\n      if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n        return port;\n      }\n\n      const pRetry = require(\"p-retry\");\n\n      const portfinder = require(\"portfinder\");\n\n      portfinder.basePort = typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10) : 8080; // Try to find unused port and listen on it for 3 times,\n      // if port is not specified in options.\n\n      const defaultPortRetry = typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\" ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10) : 3;\n      return pRetry(() => portfinder.getPortPromise(), {\n        retries: defaultPortRetry\n      });\n    })();\n  }\n  /**\n   * @returns {string}\n   */\n\n\n  static findCacheDir() {\n    const cwd = process.cwd();\n    /**\n     * @type {string | undefined}\n     */\n\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break; // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n\n\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n    const isWebTarget = compiler.options.externalsPresets ? compiler.options.externalsPresets.web : [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n    undefined, null].includes(\n    /** @type {string} */\n    compiler.options.target); // TODO maybe empty empty client\n\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n        /** @type {WebSocketURL} */\n\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketURL;\n        const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        this.options.webSocketServer;\n        const searchParams = new URLSearchParams();\n        /** @type {string} */\n\n        let protocol; // We are proxying dev server and need to specify custom `hostname`\n\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n          /** @type {ServerConfiguration} */\n          this.options.server.type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n        /** @type {string} */\n\n\n        let hostname; // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n\n        const isSockJSType = webSocketServer.type === \"sockjs\"; // We are proxying dev server and need to specify custom `hostname`\n\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        } // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (typeof webSocketServer.options.host !== \"undefined\" && !isSockJSType) {\n          hostname = webSocketServer.options.host;\n        } // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        } // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n        /** @type {number | string} */\n\n        let port; // We are proxying dev server and need to specify custom `port`\n\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        } // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (typeof webSocketServer.options.port !== \"undefined\" && !isSockJSType) {\n          port = webSocketServer.options.port;\n        } // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        } // The `port` option is specified using `string`\n        else if (typeof this.options.port === \"string\" && this.options.port !== \"auto\") {\n          port = Number(this.options.port);\n        } // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n        /** @type {string} */\n\n        let pathname = \"\"; // We are proxying dev server and need to specify custom `pathname`\n\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        } // Web socket server works on custom `path`\n        else if (typeof webSocketServer.options.prefix !== \"undefined\" || typeof webSocketServer.options.path !== \"undefined\") {\n          pathname = webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n        const client =\n        /** @type {ClientConfiguration} */\n        this.options.client;\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\"reconnect\", typeof client.reconnect === \"number\" ? String(client.reconnect) : \"10\");\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(`${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`);\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\"); // use a hook to add entries if available\n\n\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined\n        }).apply(compiler);\n      }\n    } // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () => Promise.resolve(originalEntry()).then(entry => prependEntry(entry, newAdditionalEntries));\n        }\n\n        if (typeof originalEntry === \"object\" && !Array.isArray(originalEntry)) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n          Object.keys(originalEntry).forEach(key => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n          return clone;\n        } // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n\n        /** @type {any} */\n\n\n        const entriesClone = additionalEntries.slice(0);\n        [].concat(originalEntry).forEach(newEntry => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(compiler.options.entry || \"./src\", additionalEntries);\n      compiler.hooks.entryOption.call(\n      /** @type {string} */\n      compiler.options.context, compiler.options.entry);\n    }\n  }\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n\n\n  getCompilerOptions() {\n    if (typeof\n    /** @type {MultiCompiler} */\n    this.compiler.compilers !== \"undefined\") {\n      if (\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          this.compiler.compilers[0].options\n        );\n      } // Configuration with the `devServer` options\n\n\n      const compilerWithDevServer =\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      } // Configuration with `web` preset\n\n\n      const compilerWithWebPreset =\n      /** @type {MultiCompiler} */\n      this.compiler.compilers.find(config => config.options.externalsPresets && config.options.externalsPresets.web || [\"web\", \"webworker\", \"electron-preload\", \"electron-renderer\", \"node-webkit\", // eslint-disable-next-line no-undefined\n      undefined, null].includes(\n      /** @type {string} */\n      config.options.target));\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      } // Fallback\n\n\n      return (\n        /** @type {MultiCompiler} */\n        this.compiler.compilers[0].options\n      );\n    }\n\n    return (\n      /** @type {Compiler} */\n      this.compiler.options\n    );\n  }\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n\n\n  normalizeOptions() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        options\n      } = _this;\n\n      const compilerOptions = _this.getCompilerOptions(); // TODO remove `{}` after drop webpack v4 support\n\n\n      const compilerWatchOptions = compilerOptions.watchOptions || {};\n      /**\n       * @param {WatchOptions & WebpackConfiguration[\"watchOptions\"]} watchOptions\n       * @returns {WatchOptions}\n       */\n\n      const getWatchOptions = (watchOptions = {}) => {\n        const getPolling = () => {\n          if (typeof watchOptions.usePolling !== \"undefined\") {\n            return watchOptions.usePolling;\n          }\n\n          if (typeof watchOptions.poll !== \"undefined\") {\n            return Boolean(watchOptions.poll);\n          }\n\n          if (typeof compilerWatchOptions.poll !== \"undefined\") {\n            return Boolean(compilerWatchOptions.poll);\n          }\n\n          return false;\n        };\n\n        const getInterval = () => {\n          if (typeof watchOptions.interval !== \"undefined\") {\n            return watchOptions.interval;\n          }\n\n          if (typeof watchOptions.poll === \"number\") {\n            return watchOptions.poll;\n          }\n\n          if (typeof compilerWatchOptions.poll === \"number\") {\n            return compilerWatchOptions.poll;\n          }\n        };\n\n        const usePolling = getPolling();\n        const interval = getInterval();\n        const {\n          poll,\n          ...rest\n        } = watchOptions;\n        return {\n          ignoreInitial: true,\n          persistent: true,\n          followSymlinks: false,\n          atomic: false,\n          alwaysStat: true,\n          ignorePermissionErrors: true,\n          // Respect options from compiler watchOptions\n          usePolling,\n          interval,\n          ignored: watchOptions.ignored,\n          // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n          ...rest\n        };\n      };\n      /**\n       * @param {string | Static | undefined} [optionsForStatic]\n       * @returns {NormalizedStatic}\n       */\n\n\n      const getStaticItem = optionsForStatic => {\n        const getDefaultStaticOptions = () => {\n          return {\n            directory: path.join(process.cwd(), \"public\"),\n            staticOptions: {},\n            publicPath: [\"/\"],\n            serveIndex: {\n              icons: true\n            },\n            watch: getWatchOptions()\n          };\n        };\n        /** @type {NormalizedStatic} */\n\n\n        let item;\n\n        if (typeof optionsForStatic === \"undefined\") {\n          item = getDefaultStaticOptions();\n        } else if (typeof optionsForStatic === \"string\") {\n          item = { ...getDefaultStaticOptions(),\n            directory: optionsForStatic\n          };\n        } else {\n          const def = getDefaultStaticOptions();\n          item = {\n            directory: typeof optionsForStatic.directory !== \"undefined\" ? optionsForStatic.directory : def.directory,\n            // TODO: do merge in the next major release\n            staticOptions: typeof optionsForStatic.staticOptions !== \"undefined\" ? optionsForStatic.staticOptions : def.staticOptions,\n            publicPath: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\" ? Array.isArray(optionsForStatic.publicPath) ? optionsForStatic.publicPath : [optionsForStatic.publicPath] : def.publicPath,\n            // TODO: do merge in the next major release\n            serveIndex: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\" ? typeof optionsForStatic.serveIndex === \"boolean\" && optionsForStatic.serveIndex ? def.serveIndex : optionsForStatic.serveIndex : def.serveIndex,\n            watch: // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\" ? // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch === \"boolean\" ? optionsForStatic.watch ? def.watch : false : getWatchOptions(optionsForStatic.watch) : def.watch\n          };\n        }\n\n        if (Server.isAbsoluteURL(item.directory)) {\n          throw new Error(\"Using a URL as static.directory is not supported\");\n        }\n\n        return item;\n      };\n\n      if (typeof options.allowedHosts === \"undefined\") {\n        // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n        options.allowedHosts = \"auto\";\n      } // We store allowedHosts as array when supplied as string\n      else if (typeof options.allowedHosts === \"string\" && options.allowedHosts !== \"auto\" && options.allowedHosts !== \"all\") {\n        options.allowedHosts = [options.allowedHosts];\n      } // CLI pass options as array, we should normalize them\n      else if (Array.isArray(options.allowedHosts) && options.allowedHosts.includes(\"all\")) {\n        options.allowedHosts = \"all\";\n      }\n\n      if (typeof options.bonjour === \"undefined\") {\n        options.bonjour = false;\n      } else if (typeof options.bonjour === \"boolean\") {\n        options.bonjour = options.bonjour ? {} : false;\n      }\n\n      if (typeof options.client === \"undefined\" || typeof options.client === \"object\" && options.client !== null) {\n        if (!options.client) {\n          options.client = {};\n        }\n\n        if (typeof options.client.webSocketURL === \"undefined\") {\n          options.client.webSocketURL = {};\n        } else if (typeof options.client.webSocketURL === \"string\") {\n          const parsedURL = new URL(options.client.webSocketURL);\n          options.client.webSocketURL = {\n            protocol: parsedURL.protocol,\n            hostname: parsedURL.hostname,\n            port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n            pathname: parsedURL.pathname,\n            username: parsedURL.username,\n            password: parsedURL.password\n          };\n        } else if (typeof options.client.webSocketURL.port === \"string\") {\n          options.client.webSocketURL.port = Number(options.client.webSocketURL.port);\n        } // Enable client overlay by default\n\n\n        if (typeof options.client.overlay === \"undefined\") {\n          options.client.overlay = true;\n        } else if (typeof options.client.overlay !== \"boolean\") {\n          options.client.overlay = {\n            errors: true,\n            warnings: true,\n            ...options.client.overlay\n          };\n        }\n\n        if (typeof options.client.reconnect === \"undefined\") {\n          options.client.reconnect = 10;\n        } else if (options.client.reconnect === true) {\n          options.client.reconnect = Infinity;\n        } else if (options.client.reconnect === false) {\n          options.client.reconnect = 0;\n        } // Respect infrastructureLogging.level\n\n\n        if (typeof options.client.logging === \"undefined\") {\n          options.client.logging = compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\";\n        }\n      }\n\n      if (typeof options.compress === \"undefined\") {\n        options.compress = true;\n      }\n\n      if (typeof options.devMiddleware === \"undefined\") {\n        options.devMiddleware = {};\n      } // No need to normalize `headers`\n\n\n      if (typeof options.historyApiFallback === \"undefined\") {\n        options.historyApiFallback = false;\n      } else if (typeof options.historyApiFallback === \"boolean\" && options.historyApiFallback) {\n        options.historyApiFallback = {};\n      } // No need to normalize `host`\n\n\n      options.hot = typeof options.hot === \"boolean\" || options.hot === \"only\" ? options.hot : true;\n      const isHTTPs = Boolean(options.https);\n      const isSPDY = Boolean(options.http2);\n\n      if (isHTTPs) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'https' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTPS\")();\n      }\n\n      if (isSPDY) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'http2' option is deprecated. Please use the 'server' option.\", \"DEP_WEBPACK_DEV_SERVER_HTTP2\")();\n      }\n\n      options.server = {\n        type: // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\" ? options.server : // eslint-disable-next-line no-nested-ternary\n        typeof (options.server || {}).type === \"string\" ?\n        /** @type {ServerConfiguration} */\n        options.server.type || \"http\" : // eslint-disable-next-line no-nested-ternary\n        isSPDY ? \"spdy\" : isHTTPs ? \"https\" : \"http\",\n        options: { ...\n          /** @type {ServerOptions} */\n          options.https,\n          ...\n          /** @type {ServerConfiguration} */\n          (options.server || {}).options\n        }\n      };\n\n      if (options.server.type === \"spdy\" && typeof\n      /** @type {ServerOptions} */\n      options.server.options.spdy === \"undefined\") {\n        /** @type {ServerOptions} */\n        options.server.options.spdy = {\n          protocols: [\"h2\", \"http/1.1\"]\n        };\n      }\n\n      if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n        if (typeof\n        /** @type {ServerOptions} */\n        options.server.options.requestCert === \"undefined\") {\n          /** @type {ServerOptions} */\n          options.server.options.requestCert = false;\n        }\n\n        const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        [\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"];\n\n        for (const property of httpsProperties) {\n          if (typeof\n          /** @type {ServerOptions} */\n          options.server.options[property] === \"undefined\") {\n            // eslint-disable-next-line no-continue\n            continue;\n          } // @ts-ignore\n\n\n          if (property === \"cacert\") {\n            // TODO remove the `cacert` option in favor `ca` in the next major release\n            util.deprecate(() => {}, \"The 'cacert' option is deprecated. Please use the 'ca' option.\", \"DEP_WEBPACK_DEV_SERVER_CACERT\")();\n          }\n          /** @type {any} */\n\n\n          const value =\n          /** @type {ServerOptions} */\n          options.server.options[property];\n          /**\n           * @param {string | Buffer | undefined} item\n           * @returns {string | Buffer | undefined}\n           */\n\n          const readFile = item => {\n            if (Buffer.isBuffer(item) || typeof item === \"object\" && item !== null && !Array.isArray(item)) {\n              return item;\n            }\n\n            if (item) {\n              let stats = null;\n\n              try {\n                stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n              } catch (error) {// Ignore error\n              } // It is file\n\n\n              return stats ? fs.readFileSync(item) : item;\n            }\n          };\n          /** @type {any} */\n\n\n          options.server.options[property] = Array.isArray(value) ? value.map(item => readFile(item)) : readFile(value);\n        }\n\n        let fakeCert;\n\n        if (!\n        /** @type {ServerOptions} */\n        options.server.options.key ||\n        /** @type {ServerOptions} */\n        (!options.server.options).cert) {\n          const certificateDir = Server.findCacheDir();\n          const certificatePath = path.join(certificateDir, \"server.pem\");\n          let certificateExists;\n\n          try {\n            const certificate = yield fs.promises.stat(certificatePath);\n            certificateExists = certificate.isFile();\n          } catch {\n            certificateExists = false;\n          }\n\n          if (certificateExists) {\n            const certificateTtl = 1000 * 60 * 60 * 24;\n            const certificateStat = yield fs.promises.stat(certificatePath);\n            const now = Number(new Date()); // cert is more than 30 days old, kill it with fire\n\n            if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n              const del = require(\"del\");\n\n              _this.logger.info(\"SSL certificate is more than 30 days old. Removing...\");\n\n              yield del([certificatePath], {\n                force: true\n              });\n              certificateExists = false;\n            }\n          }\n\n          if (!certificateExists) {\n            _this.logger.info(\"Generating SSL certificate...\"); // @ts-ignore\n\n\n            const selfsigned = require(\"selfsigned\");\n\n            const attributes = [{\n              name: \"commonName\",\n              value: \"localhost\"\n            }];\n            const pems = selfsigned.generate(attributes, {\n              algorithm: \"sha256\",\n              days: 30,\n              keySize: 2048,\n              extensions: [{\n                name: \"basicConstraints\",\n                cA: true\n              }, {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true\n              }, {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true\n              }, {\n                name: \"subjectAltName\",\n                altNames: [{\n                  // type 2 is DNS\n                  type: 2,\n                  value: \"localhost\"\n                }, {\n                  type: 2,\n                  value: \"localhost.localdomain\"\n                }, {\n                  type: 2,\n                  value: \"lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"*.lvh.me\"\n                }, {\n                  type: 2,\n                  value: \"[::1]\"\n                }, {\n                  // type 7 is IP\n                  type: 7,\n                  ip: \"127.0.0.1\"\n                }, {\n                  type: 7,\n                  ip: \"fe80::1\"\n                }]\n              }]\n            });\n            yield fs.promises.mkdir(certificateDir, {\n              recursive: true\n            });\n            yield fs.promises.writeFile(certificatePath, pems.private + pems.cert, {\n              encoding: \"utf8\"\n            });\n          }\n\n          fakeCert = yield fs.promises.readFile(certificatePath);\n\n          _this.logger.info(`SSL certificate: ${certificatePath}`);\n        }\n\n        if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n        options.server.options.cacert) {\n          if (\n          /** @type {ServerOptions} */\n          options.server.options.ca) {\n            _this.logger.warn(\"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\");\n          } else {\n            /** @type {ServerOptions} */\n            options.server.options.ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            options.server.options.cacert;\n          }\n\n          delete\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n          options.server.options.cacert;\n        }\n        /** @type {ServerOptions} */\n\n\n        options.server.options.key =\n        /** @type {ServerOptions} */\n        options.server.options.key || fakeCert;\n        /** @type {ServerOptions} */\n\n        options.server.options.cert =\n        /** @type {ServerOptions} */\n        options.server.options.cert || fakeCert;\n      }\n\n      if (typeof options.ipc === \"boolean\") {\n        const isWindows = process.platform === \"win32\";\n        const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n        const pipeName = \"webpack-dev-server.sock\";\n        options.ipc = path.join(pipePrefix, pipeName);\n      }\n\n      options.liveReload = typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n      options.magicHtml = typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true; // https://github.com/webpack/webpack-dev-server/issues/1990\n\n      const defaultOpenOptions = {\n        wait: false\n      };\n      /**\n       * @param {any} target\n       * @returns {NormalizedOpen[]}\n       */\n      // TODO: remove --open-app in favor of --open-app-name\n\n      const getOpenItemsFromObject = ({\n        target,\n        ...rest\n      }) => {\n        const normalizedOptions = { ...defaultOpenOptions,\n          ...rest\n        };\n\n        if (typeof normalizedOptions.app === \"string\") {\n          normalizedOptions.app = {\n            name: normalizedOptions.app\n          };\n        }\n\n        const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n        if (Array.isArray(normalizedTarget)) {\n          return normalizedTarget.map(singleTarget => {\n            return {\n              target: singleTarget,\n              options: normalizedOptions\n            };\n          });\n        }\n\n        return [{\n          target: normalizedTarget,\n          options: normalizedOptions\n        }];\n      };\n\n      if (typeof options.open === \"undefined\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [];\n      } else if (typeof options.open === \"boolean\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = options.open ? [{\n          target: \"<url>\",\n          options:\n          /** @type {OpenOptions} */\n          defaultOpenOptions\n        }] : [];\n      } else if (typeof options.open === \"string\") {\n        /** @type {NormalizedOpen[]} */\n        options.open = [{\n          target: options.open,\n          options: defaultOpenOptions\n        }];\n      } else if (Array.isArray(options.open)) {\n        /**\n         * @type {NormalizedOpen[]}\n         */\n        const result = [];\n        options.open.forEach(item => {\n          if (typeof item === \"string\") {\n            result.push({\n              target: item,\n              options: defaultOpenOptions\n            });\n            return;\n          }\n\n          result.push(...getOpenItemsFromObject(item));\n        });\n        /** @type {NormalizedOpen[]} */\n\n        options.open = result;\n      } else {\n        /** @type {NormalizedOpen[]} */\n        options.open = [...getOpenItemsFromObject(options.open)];\n      }\n\n      if (options.onAfterSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`)();\n      }\n\n      if (options.onBeforeSetupMiddleware) {\n        // TODO: remove in the next major release\n        util.deprecate(() => {}, \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\", `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`)();\n      }\n\n      if (typeof options.port === \"string\" && options.port !== \"auto\") {\n        options.port = Number(options.port);\n      }\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: {\n       *   'context': { options }\n       * }\n       * OR\n       * proxy: {\n       *   'context': 'target'\n       * }\n       */\n\n\n      if (typeof options.proxy !== \"undefined\") {\n        // TODO remove in the next major release, only accept `Array`\n        if (!Array.isArray(options.proxy)) {\n          if (Object.prototype.hasOwnProperty.call(options.proxy, \"target\") || Object.prototype.hasOwnProperty.call(options.proxy, \"router\")) {\n            /** @type {ProxyArray} */\n            options.proxy = [\n            /** @type {ProxyConfigMap} */\n            options.proxy];\n          } else {\n            /** @type {ProxyArray} */\n            options.proxy = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            context => {\n              let proxyOptions; // For backwards compatibility reasons.\n\n              const correctedContext = context.replace(/^\\*$/, \"**\").replace(/\\/\\*$/, \"\");\n\n              if (typeof\n              /** @type {ProxyConfigMap} */\n              options.proxy[context] === \"string\") {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                  /** @type {ProxyConfigMap} */\n                  options.proxy[context]\n                };\n              } else {\n                proxyOptions = { // @ts-ignore\n                  ...\n                  /** @type {ProxyConfigMap} */\n                  options.proxy[context]\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            });\n          }\n        }\n        /** @type {ProxyArray} */\n\n\n        options.proxy =\n        /** @type {ProxyArray} */\n        options.proxy.map(\n        /**\n         * @param {HttpProxyMiddlewareOptions} item\n         * @returns {HttpProxyMiddlewareOptions}\n         */\n        item => {\n          /**\n           * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n           * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n           */\n          const getLogLevelForProxy = level => {\n            if (level === \"none\") {\n              return \"silent\";\n            }\n\n            if (level === \"log\") {\n              return \"info\";\n            }\n\n            if (level === \"verbose\") {\n              return \"debug\";\n            }\n\n            return level;\n          };\n\n          if (typeof item.logLevel === \"undefined\") {\n            item.logLevel = getLogLevelForProxy(compilerOptions.infrastructureLogging ? compilerOptions.infrastructureLogging.level : \"info\");\n          }\n\n          if (typeof item.logProvider === \"undefined\") {\n            item.logProvider = () => _this.logger;\n          }\n\n          return item;\n        });\n      }\n\n      if (typeof options.setupExitSignals === \"undefined\") {\n        options.setupExitSignals = true;\n      }\n\n      if (typeof options.static === \"undefined\") {\n        options.static = [getStaticItem()];\n      } else if (typeof options.static === \"boolean\") {\n        options.static = options.static ? [getStaticItem()] : false;\n      } else if (typeof options.static === \"string\") {\n        options.static = [getStaticItem(options.static)];\n      } else if (Array.isArray(options.static)) {\n        options.static = options.static.map(item => getStaticItem(item));\n      } else {\n        options.static = [getStaticItem(options.static)];\n      }\n\n      if (typeof options.watchFiles === \"string\") {\n        options.watchFiles = [{\n          paths: options.watchFiles,\n          options: getWatchOptions()\n        }];\n      } else if (typeof options.watchFiles === \"object\" && options.watchFiles !== null && !Array.isArray(options.watchFiles)) {\n        options.watchFiles = [{\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {})\n        }];\n      } else if (Array.isArray(options.watchFiles)) {\n        options.watchFiles = options.watchFiles.map(item => {\n          if (typeof item === \"string\") {\n            return {\n              paths: item,\n              options: getWatchOptions()\n            };\n          }\n\n          return {\n            paths: item.paths,\n            options: getWatchOptions(item.options || {})\n          };\n        });\n      } else {\n        options.watchFiles = [];\n      }\n\n      const defaultWebSocketServerType = \"ws\";\n      const defaultWebSocketServerOptions = {\n        path: \"/ws\"\n      };\n\n      if (typeof options.webSocketServer === \"undefined\") {\n        options.webSocketServer = {\n          type: defaultWebSocketServerType,\n          options: defaultWebSocketServerOptions\n        };\n      } else if (typeof options.webSocketServer === \"boolean\" && !options.webSocketServer) {\n        options.webSocketServer = false;\n      } else if (typeof options.webSocketServer === \"string\" || typeof options.webSocketServer === \"function\") {\n        options.webSocketServer = {\n          type: options.webSocketServer,\n          options: defaultWebSocketServerOptions\n        };\n      } else {\n        options.webSocketServer = {\n          type:\n          /** @type {WebSocketServerConfiguration} */\n          options.webSocketServer.type || defaultWebSocketServerType,\n          options: { ...defaultWebSocketServerOptions,\n            ...\n            /** @type {WebSocketServerConfiguration} */\n            options.webSocketServer.options\n          }\n        };\n        const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        options.webSocketServer;\n\n        if (typeof webSocketServer.options.port === \"string\") {\n          webSocketServer.options.port = Number(webSocketServer.options.port);\n        }\n      }\n    })();\n  }\n  /**\n   * @private\n   * @returns {string}\n   */\n\n\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n    const isKnownWebSocketServerImplementation = this.options.webSocketServer && typeof\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"string\" && ( // @ts-ignore\n    this.options.webSocketServer.type === \"ws\" ||\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type === \"sockjs\");\n    let clientTransport;\n\n    if (this.options.client) {\n      if (typeof\n      /** @type {ClientConfiguration} */\n      this.options.client.webSocketTransport !== \"undefined\") {\n        clientTransport =\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\"../client/clients/SockJSClient\");\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\"../client/clients/WebSocketClient\");\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n\n        break;\n\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(`${!isKnownWebSocketServerImplementation ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \" : \"\"}client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `);\n    }\n\n    return (\n      /** @type {string} */\n      clientImplementation\n    );\n  }\n  /**\n   * @private\n   * @returns {string}\n   */\n\n\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (typeof\n    /** @type {WebSocketServerConfiguration} */\n    this.options.webSocketServer.type) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type === \"sockjs\") {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type === \"ws\") {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(\n            /** @type {WebSocketServerConfiguration} */\n            this.options.webSocketServer.type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n\n        break;\n\n      case \"function\":\n        implementation =\n        /** @type {WebSocketServerConfiguration} */\n        this.options.webSocketServer.type;\n        break;\n\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" + \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" + \"via require.resolve(...), or the class itself which extends BaseServer\");\n    }\n\n    return implementation;\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupProgressPlugin() {\n    const {\n      ProgressPlugin\n    } =\n    /** @type {MultiCompiler}*/\n    this.compiler.compilers ?\n    /** @type {MultiCompiler}*/\n    this.compiler.compilers[0].webpack :\n    /** @type {Compiler}*/\n    this.compiler.webpack || // TODO remove me after drop webpack v4\n    require(\"webpack\");\n    new ProgressPlugin(\n    /**\n     * @param {number} percent\n     * @param {string} msg\n     * @param {string} addInfo\n     * @param {string} pluginName\n     */\n    (percent, msg, addInfo, pluginName) => {\n      percent = Math.floor(percent * 100);\n\n      if (percent === 100) {\n        msg = \"Compilation completed\";\n      }\n\n      if (addInfo) {\n        msg = `${msg} (${addInfo})`;\n      }\n\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n\n      if (this.server) {\n        this.server.emit(\"progress-update\", {\n          percent,\n          msg,\n          pluginName\n        });\n      }\n    }).apply(this.compiler);\n  }\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n\n\n  initialize() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this2.options.webSocketServer) {\n        const compilers =\n        /** @type {MultiCompiler} */\n        _this2.compiler.compilers || [_this2.compiler];\n        compilers.forEach(compiler => {\n          _this2.addAdditionalEntries(compiler);\n\n          const webpack = compiler.webpack || require(\"webpack\");\n\n          new webpack.ProvidePlugin({\n            __webpack_dev_server_client__: _this2.getClientTransport()\n          }).apply(compiler); // TODO remove after drop webpack v4 support\n\n          compiler.options.plugins = compiler.options.plugins || [];\n\n          if (_this2.options.hot) {\n            const HMRPluginExists = compiler.options.plugins.find(p => p.constructor === webpack.HotModuleReplacementPlugin);\n\n            if (HMRPluginExists) {\n              _this2.logger.warn(`\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`);\n            } else {\n              // Apply the HMR plugin\n              const plugin = new webpack.HotModuleReplacementPlugin();\n              plugin.apply(compiler);\n            }\n          }\n        });\n\n        if (_this2.options.client &&\n        /** @type {ClientConfiguration} */\n        _this2.options.client.progress) {\n          _this2.setupProgressPlugin();\n        }\n      }\n\n      _this2.setupHooks();\n\n      _this2.setupApp();\n\n      _this2.setupHostHeaderCheck();\n\n      _this2.setupDevMiddleware(); // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n\n\n      _this2.setupBuiltInRoutes();\n\n      _this2.setupWatchFiles();\n\n      _this2.setupWatchStaticFiles();\n\n      _this2.setupMiddlewares();\n\n      _this2.createServer();\n\n      if (_this2.options.setupExitSignals) {\n        const signals = [\"SIGINT\", \"SIGTERM\"];\n        let needForceShutdown = false;\n        signals.forEach(signal => {\n          const listener = () => {\n            if (needForceShutdown) {\n              process.exit();\n            }\n\n            _this2.logger.info(\"Gracefully shutting down. To force exit, press ^C again. Please wait...\");\n\n            needForceShutdown = true;\n\n            _this2.stopCallback(() => {\n              if (typeof _this2.compiler.close === \"function\") {\n                _this2.compiler.close(() => {\n                  process.exit();\n                });\n              } else {\n                process.exit();\n              }\n            });\n          };\n\n          _this2.listeners.push({\n            name: signal,\n            listener\n          });\n\n          process.on(signal, listener);\n        });\n      } // Proxy WebSocket without the initial http request\n      // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n\n      /** @type {RequestHandler[]} */\n\n\n      _this2.webSocketProxies.forEach(webSocketProxy => {\n        /** @type {import(\"http\").Server} */\n        _this2.server.on(\"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        webSocketProxy.upgrade);\n      }, _this2);\n    })();\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new\n    /** @type {any} */\n    express();\n  }\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n\n\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions(); // @ts-ignore\n\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\"webpack-dev-server\",\n    /**\n     * @param {Stats | MultiStats} stats\n     */\n    stats => {\n      if (this.webSocketServer) {\n        this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n      }\n      /**\n       * @private\n       * @type {Stats | MultiStats}\n       */\n\n\n      this.stats = stats;\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    this.app.all(\"*\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @param {NextFunction} next\n     * @returns {void}\n     */\n    (req, res, next) => {\n      if (this.checkHeader(\n      /** @type {{ [key: string]: string | undefined }} */\n      req.headers, \"host\")) {\n        return next();\n      }\n\n      res.send(\"Invalid Host header\");\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\"); // middleware for serving webpack bundle\n\n\n    this.middleware = webpackDevMiddleware(this.compiler, this.options.devMiddleware);\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupBuiltInRoutes() {\n    const {\n      app,\n      middleware\n    } = this;\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/__webpack_dev_server__/sockjs.bundle.js\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      res.setHeader(\"Content-Type\", \"application/javascript\");\n      const {\n        createReadStream\n      } = fs;\n      const clientPath = path.join(__dirname, \"..\", \"client\");\n      createReadStream(path.join(clientPath, \"modules/sockjs-client/index.js\")).pipe(res);\n    });\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/webpack-dev-server/invalidate\",\n    /**\n     * @param {Request} _req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (_req, res) => {\n      this.invalidate();\n      res.end();\n    });\n    /** @type {import(\"express\").Application} */\n\n    app.get(\"/webpack-dev-server\",\n    /**\n     * @param {Request} req\n     * @param {Response} res\n     * @returns {void}\n     */\n    (req, res) => {\n      /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n      middleware.waitUntilValid(stats => {\n        res.setHeader(\"Content-Type\", \"text/html\");\n        res.write('<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>');\n        const statsForPrint = typeof\n        /** @type {MultiStats} */\n        stats.stats !== \"undefined\" ?\n        /** @type {MultiStats} */\n        stats.toJson().children : [\n        /** @type {Stats} */\n        stats.toJson()];\n        res.write(`<h1>Assets Report:</h1>`);\n        /**\n         * @type {StatsCompilation[]}\n         */\n\n        statsForPrint.forEach((item, index) => {\n          res.write(\"<div>\");\n          const name = // eslint-disable-next-line no-nested-ternary\n          typeof item.name !== \"undefined\" ? item.name :\n          /** @type {MultiStats} */\n          stats.stats ? `unnamed[${index}]` : \"unnamed\";\n          res.write(`<h2>Compilation: ${name}</h2>`);\n          res.write(\"<ul>\");\n          const publicPath = item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n          for (const asset of\n          /** @type {NonNullable<StatsCompilation[\"assets\"]>} */\n          item.assets) {\n            const assetName = asset.name;\n            const assetURL = `${publicPath}${assetName}`;\n            res.write(`<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`);\n          }\n\n          res.write(\"</ul>\");\n          res.write(\"</div>\");\n        });\n        res.end(\"</body></html>\");\n      });\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupWatchStaticFiles() {\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupWatchFiles() {\n    const {\n      watchFiles\n    } = this.options;\n\n    if (\n    /** @type {WatchFiles[]} */\n    watchFiles.length > 0) {\n      /** @type {WatchFiles[]} */\n      watchFiles.forEach(item => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = []; // compress is placed last and uses unshift so that it will be the first middleware used\n\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({\n        name: \"compression\",\n        middleware: compression()\n      });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this)\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n      /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n      this.middleware\n    });\n\n    if (this.options.proxy) {\n      const {\n        createProxyMiddleware\n      } = require(\"http-proxy-middleware\");\n      /**\n       * @param {ProxyConfigArray} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n\n\n      const getProxyMiddleware = proxyConfig => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n          return createProxyMiddleware(\n          /** @type {string} */\n          context, proxyConfig);\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n\n      /** @type {ProxyArray} */\n\n\n      this.options.proxy.forEach(\n      /**\n       * @param {any} proxyConfigOrCallback\n       */\n      proxyConfigOrCallback => {\n        /**\n         * @type {RequestHandler}\n         */\n        let proxyMiddleware;\n        let proxyConfig = typeof proxyConfigOrCallback === \"function\" ? proxyConfigOrCallback() : proxyConfigOrCallback;\n        proxyMiddleware =\n        /** @type {RequestHandler} */\n        getProxyMiddleware(proxyConfig);\n\n        if (proxyConfig.ws) {\n          this.webSocketProxies.push(proxyMiddleware);\n        }\n        /**\n         * @param {Request} req\n         * @param {Response} res\n         * @param {NextFunction} next\n         * @returns {Promise<void>}\n         */\n\n\n        const handler = /*#__PURE__*/function () {\n          var _ref = _asyncToGenerator(function* (req, res, next) {\n            if (typeof proxyConfigOrCallback === \"function\") {\n              const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n              if (newProxyConfig !== proxyConfig) {\n                proxyConfig = newProxyConfig;\n                proxyMiddleware =\n                /** @type {RequestHandler} */\n                getProxyMiddleware(proxyConfig);\n              }\n            } // - Check if we have a bypass function defined\n            // - In case the bypass function is defined we'll retrieve the\n            // bypassUrl from it otherwise bypassUrl would be null\n            // TODO remove in the next major in favor `context` and `router` options\n\n\n            const isByPassFuncDefined = typeof proxyConfig.bypass === \"function\";\n            const bypassUrl = isByPassFuncDefined ? yield proxyConfig.bypass(req, res, proxyConfig) : null;\n\n            if (typeof bypassUrl === \"boolean\") {\n              // skip the proxy\n              // @ts-ignore\n              req.url = null;\n              next();\n            } else if (typeof bypassUrl === \"string\") {\n              // byPass to that url\n              req.url = bypassUrl;\n              next();\n            } else if (proxyMiddleware) {\n              return proxyMiddleware(req, res, next);\n            } else {\n              next();\n            }\n          });\n\n          return function handler(_x, _x2, _x3) {\n            return _ref.apply(this, arguments);\n          };\n        }();\n\n        middlewares.push({\n          name: \"http-proxy-middleware\",\n          middleware: handler\n        }); // Also forward error requests to the proxy so it can handle them.\n\n        middlewares.push({\n          name: \"http-proxy-middleware-error-handler\",\n          middleware:\n          /**\n           * @param {Error} error\n           * @param {Request} req\n           * @param {Response} res\n           * @param {NextFunction} next\n           * @returns {any}\n           */\n          (error, req, res, next) => handler(req, res, next)\n        });\n      });\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      /** @type {NormalizedStatic[]} */\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(staticOption.directory, staticOption.staticOptions)\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n\n      const {\n        historyApiFallback\n      } = this.options;\n\n      if (typeof\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.logger === \"undefined\" && !\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      historyApiFallback.verbose) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(this.logger, \"[connect-history-api-fallback]\");\n      } // Fall back to /index.html if nothing else matches.\n\n\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n        /** @type {ConnectHistoryApiFallbackOptions} */\n        historyApiFallback)\n      }); // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        this.middleware\n      });\n\n      if (\n      /** @type {NormalizedStatic[]} */\n      this.options.static.length > 0) {\n        /** @type {NormalizedStatic[]} */\n        this.options.static.forEach(staticOption => {\n          staticOption.publicPath.forEach(publicPath => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(staticOption.directory, staticOption.staticOptions)\n            });\n          });\n        });\n      }\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      const serveIndex = require(\"serve-index\");\n      /** @type {NormalizedStatic[]} */\n\n\n      this.options.static.forEach(staticOption => {\n        staticOption.publicPath.forEach(publicPath => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(staticOption.directory,\n                /** @type {ServeIndexOptions} */\n                staticOption.serveIndex)(req, res, next);\n              }\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this)\n      });\n    }\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach(middleware => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        this.app.use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  createServer() {\n    const {\n      type,\n      options\n    } =\n    /** @type {ServerConfiguration} */\n    this.options.server;\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n\n    this.server = require(\n    /** @type {string} */\n    type).createServer(options, this.app);\n    /** @type {import(\"http\").Server} */\n\n    this.server.on(\"connection\",\n    /**\n     * @param {Socket} socket\n     */\n    socket => {\n      // Add socket to list\n      this.sockets.push(socket);\n      socket.once(\"close\", () => {\n        // Remove socket from list\n        this.sockets.splice(this.sockets.indexOf(socket), 1);\n      });\n    });\n    /** @type {import(\"http\").Server} */\n\n    this.server.on(\"error\",\n    /**\n     * @param {Error} error\n     */\n    error => {\n      throw error;\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n\n\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new (\n    /** @type {any} */\n    this.getServerTransport())(this);\n    /** @type {WebSocketServerImplementation} */\n\n    this.webSocketServer.implementation.on(\"connection\",\n    /**\n     * @param {ClientConnection} client\n     * @param {IncomingMessage} request\n     */\n    (client, request) => {\n      /** @type {{ [key: string]: string | undefined } | undefined} */\n      const headers = // eslint-disable-next-line no-nested-ternary\n      typeof request !== \"undefined\" ?\n      /** @type {{ [key: string]: string | undefined }} */\n      request.headers : typeof\n      /** @type {import(\"sockjs\").Connection} */\n      client.headers !== \"undefined\" ?\n      /** @type {import(\"sockjs\").Connection} */\n      client.headers : // eslint-disable-next-line no-undefined\n      undefined;\n\n      if (!headers) {\n        this.logger.warn('webSocketServer implementation must pass headers for the \"connection\" event');\n      }\n\n      if (!headers || !this.checkHeader(headers, \"host\") || !this.checkHeader(headers, \"origin\")) {\n        this.sendMessage([client], \"error\", \"Invalid Host/Origin header\"); // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n        // Terminate would prevent it sending, so use close to allow it to be sent\n\n        client.close();\n        return;\n      }\n\n      if (this.options.hot === true || this.options.hot === \"only\") {\n        this.sendMessage([client], \"hot\");\n      }\n\n      if (this.options.liveReload) {\n        this.sendMessage([client], \"liveReload\");\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.progress) {\n        this.sendMessage([client], \"progress\",\n        /** @type {ClientConfiguration} */\n        this.options.client.progress);\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.reconnect) {\n        this.sendMessage([client], \"reconnect\",\n        /** @type {ClientConfiguration} */\n        this.options.client.reconnect);\n      }\n\n      if (this.options.client &&\n      /** @type {ClientConfiguration} */\n      this.options.client.overlay) {\n        this.sendMessage([client], \"overlay\",\n        /** @type {ClientConfiguration} */\n        this.options.client.overlay);\n      }\n\n      if (!this.stats) {\n        return;\n      }\n\n      this.sendStats([client], this.getStats(this.stats), true);\n    });\n  }\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n\n\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n    /** @type {NormalizedOpen[]} */\n    this.options.open.map(item => {\n      /**\n       * @type {string}\n       */\n      let openTarget;\n\n      if (item.target === \"<url>\") {\n        openTarget = defaultOpenTarget;\n      } else {\n        openTarget = Server.isAbsoluteURL(item.target) ? item.target : new URL(item.target, defaultOpenTarget).toString();\n      }\n\n      return open(openTarget, item.options).catch(() => {\n        this.logger.warn(`Unable to open \"${openTarget}\" page${item.options.app ? ` in \"${\n        /** @type {import(\"open\").App} */\n        item.options.app.name}\" app${\n        /** @type {import(\"open\").App} */\n        item.options.app.arguments ? ` with \"${\n        /** @type {import(\"open\").App} */\n        item.options.app.arguments.join(\" \")}\" arguments` : \"\"}` : \"\"}. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`);\n      });\n    }));\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  runBonjour() {\n    /**\n     * @private\n     * @type {import(\"bonjour\").Bonjour | undefined}\n     */\n    this.bonjour = require(\"bonjour\")();\n    this.bonjour.publish({\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      port:\n      /** @type {number} */\n      this.options.port,\n      type:\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      ...\n      /** @type {BonjourOptions} */\n      this.options.bonjour\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    this.bonjour.unpublishAll(() => {\n      /** @type {Bonjour} */\n      this.bonjour.destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n  /**\n   * @private\n   * @returns {void}\n   */\n\n\n  logStatus() {\n    const {\n      isColorSupported,\n      cyan,\n      red\n    } = require(\"colorette\");\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n\n\n    const getColorsOption = compilerOptions => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (compilerOptions.stats && typeof\n      /** @type {StatsOptions} */\n      compilerOptions.stats.colors !== \"undefined\") {\n        colorsEnabled =\n        /** @type {boolean} */\n\n        /** @type {StatsOptions} */\n        compilerOptions.stats.colors;\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      }\n\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(`Project is running at: \"${\n      /** @type {import(\"http\").Server} */\n      this.server.address()}\"`);\n    } else {\n      const protocol =\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      const {\n        address,\n        port\n      } =\n      /** @type {import(\"net\").AddressInfo} */\n\n      /** @type {import(\"http\").Server} */\n      this.server.address();\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n\n      const prettyPrintURL = newHostname => url.format({\n        protocol,\n        hostname: newHostname,\n        port,\n        pathname: \"/\"\n      });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {// Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 = parsedIP.kind() === \"ipv6\" &&\n        /** @type {IPv6} */\n        parsedIP.isIPv4MappedAddress() ? prettyPrintURL(\n        /** @type {IPv6} */\n        parsedIP.toIPv4Address().toString()) : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(`On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`);\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(`On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`);\n      }\n\n      if (\n      /** @type {NormalizedOpen[]} */\n      this.options.open.length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (\n    /** @type {NormalizedStatic[]} */\n    this.options.static.length > 0) {\n      this.logger.info(`Content not from webpack is served from '${colors.info(useColor,\n      /** @type {NormalizedStatic[]} */\n      this.options.static.map(staticOption => staticOption.directory).join(\", \"))}' directory`);\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(`404s will fallback to '${colors.info(useColor,\n      /** @type {ConnectHistoryApiFallbackOptions} */\n      this.options.historyApiFallback.index || \"/index.html\")}'`);\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n      /** @type {BonjourOptions} */\n      this.options.bonjour.type ||\n      /** @type {ServerConfiguration} */\n      this.options.server.type === \"http\" ? \"http\" : \"https\";\n      this.logger.info(`Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`);\n    }\n  }\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n\n\n  setHeaders(req, res, next) {\n    let {\n      headers\n    } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(req, res,\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context);\n      }\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n\n\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({\n            key: name,\n            value: headers[name]\n          });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n      /**\n       * @param {{key: string, value: any}} header\n       */\n      header => {\n        res.setHeader(header.key, header.value);\n      });\n    }\n\n    next();\n  }\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n\n\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    } // get the Host header and extract hostname\n    // we don't care about port not matching\n\n\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    } // use the node url-parser to retrieve the hostname from the host-header.\n\n\n    const hostname = url.parse( // if hostHeader doesn't have scheme, add // for parsing.\n    /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`, false, true).hostname; // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.options.host)\n\n    const isValidHostname = hostname !== null && ipaddr.IPv4.isValid(hostname) || hostname !== null && ipaddr.IPv6.isValid(hostname) || hostname === \"localhost\" || hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const {\n      allowedHosts\n    } = this.options; // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        } // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n\n\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (hostname === allowedHost.substring(1) ||\n          /** @type {string} */\n          hostname.endsWith(allowedHost)) {\n            return true;\n          }\n        }\n      }\n    } // Also allow if `client.webSocketURL.hostname` provided\n\n\n    if (this.options.client && typeof\n    /** @type {ClientConfiguration} */\n    this.options.client.webSocketURL !== \"undefined\") {\n      return (\n        /** @type {WebSocketURL} */\n\n        /** @type {ClientConfiguration} */\n        this.options.client.webSocketURL.hostname === hostname\n      );\n    } // disallow\n\n\n    return false;\n  }\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n\n\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({\n          type,\n          data,\n          params\n        }));\n      }\n    }\n  }\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n\n\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n\n\n    this.middleware.waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n        /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        this.middleware.context.outputFileSystem.statSync(\n        /** @type {import(\"fs\").PathLike} */\n        filename).isFile();\n\n        if (!isFile) {\n          return next();\n        } // Serve a page that executes the javascript\n        // @ts-ignore\n\n\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  } // Send stats to a socket or multiple sockets\n\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n\n\n  sendStats(clients, stats, force) {\n    const shouldEmit = !force && stats && (!stats.errors || stats.errors.length === 0) && (!stats.warnings || stats.warnings.length === 0) && this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n    /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n    stats.errors.length > 0 ||\n    /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n    stats.warnings.length > 0) {\n      const hasErrors =\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0;\n\n      if (\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      stats.warnings.length > 0) {\n        let params;\n\n        if (hasErrors) {\n          params = {\n            preventReloading: true\n          };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      stats.errors.length > 0) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n\n\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n\n    const watcher = chokidar.watch(watchPath, watchOptions); // disabling refreshing on changing the content\n\n    if (this.options.liveReload) {\n      watcher.on(\"change\", item => {\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"static-changed\", item);\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n\n\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n  /**\n   * @returns {Promise<void>}\n   */\n\n\n  start() {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.normalizeOptions();\n\n      if (_this3.options.ipc) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise((resolve, reject) => {\n            const net = require(\"net\");\n\n            const socket = new net.Socket();\n            socket.on(\"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            error => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(\n                /** @type {string} */\n                _this3.options.ipc);\n                resolve();\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n                return;\n              }\n\n              reject(error);\n            });\n            socket.connect({\n              path:\n              /** @type {string} */\n              _this3.options.ipc\n            }, () => {\n              throw new Error(`IPC \"${_this3.options.ipc}\" is already used`);\n            });\n          })\n        );\n      } else {\n        _this3.options.host = yield Server.getHostname(\n        /** @type {Host} */\n        _this3.options.host);\n        _this3.options.port = yield Server.getFreePort(\n        /** @type {Port} */\n        _this3.options.port);\n      }\n\n      yield _this3.initialize();\n      const listenOptions = _this3.options.ipc ? {\n        path: _this3.options.ipc\n      } : {\n        host: _this3.options.host,\n        port: _this3.options.port\n      };\n      yield (\n        /** @type {Promise<void>} */\n        new Promise(resolve => {\n          /** @type {import(\"http\").Server} */\n          _this3.server.listen(listenOptions, () => {\n            resolve();\n          });\n        })\n      );\n\n      if (_this3.options.ipc) {\n        // chmod 666 (rw rw rw)\n        const READ_WRITE = 438;\n        yield fs.promises.chmod(\n        /** @type {string} */\n        _this3.options.ipc, READ_WRITE);\n      }\n\n      if (_this3.options.webSocketServer) {\n        _this3.createWebSocketServer();\n      }\n\n      if (_this3.options.bonjour) {\n        _this3.runBonjour();\n      }\n\n      _this3.logStatus();\n\n      if (typeof _this3.options.onListening === \"function\") {\n        _this3.options.onListening(_this3);\n      }\n    })();\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n\n\n  startCallback(callback = () => {}) {\n    this.start().then(() => callback(), callback).catch(callback);\n  }\n  /**\n   * @returns {Promise<void>}\n   */\n\n\n  stop() {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this4.bonjour) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            _this4.stopBonjour(() => {\n              resolve();\n            });\n          })\n        );\n      }\n\n      _this4.webSocketProxies = [];\n      yield Promise.all(_this4.staticWatchers.map(watcher => watcher.close()));\n      _this4.staticWatchers = [];\n\n      if (_this4.webSocketServer) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.implementation.close(() => {\n              _this4.webSocketServer = null;\n              resolve();\n            });\n\n            for (const client of\n            /** @type {WebSocketServerImplementation} */\n            _this4.webSocketServer.clients) {\n              client.terminate();\n            }\n            /** @type {WebSocketServerImplementation} */\n\n\n            _this4.webSocketServer.clients = [];\n          })\n        );\n      }\n\n      if (_this4.server) {\n        yield (\n          /** @type {Promise<void>} */\n          new Promise(resolve => {\n            /** @type {import(\"http\").Server} */\n            _this4.server.close(() => {\n              _this4.server = null;\n              resolve();\n            });\n\n            for (const socket of _this4.sockets) {\n              socket.destroy();\n            }\n\n            _this4.sockets = [];\n          })\n        );\n\n        if (_this4.middleware) {\n          yield (\n            /** @type {Promise<void>} */\n            new Promise((resolve, reject) => {\n              /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n              _this4.middleware.close(error => {\n                if (error) {\n                  reject(error);\n                  return;\n                }\n\n                resolve();\n              });\n            })\n          );\n          _this4.middleware = null;\n        }\n      } // We add listeners to signals when creating a new Server instance\n      // So ensure they are removed to prevent EventEmitter memory leak warnings\n\n\n      for (const item of _this4.listeners) {\n        process.removeListener(item.name, item.listener);\n      }\n    })();\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n\n\n  stopCallback(callback = () => {}) {\n    this.stop().then(() => callback(), callback).catch(callback);\n  } // TODO remove in the next major release\n\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n\n\n  listen(port, hostname, fn) {\n    util.deprecate(() => {}, \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_LISTEN\")();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (typeof port !== \"undefined\" && typeof this.options.port !== \"undefined\" && port !== this.options.port) {\n      this.options.port = port;\n      this.logger.warn('The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.');\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (typeof hostname !== \"undefined\" && typeof this.options.host !== \"undefined\" && hostname !== this.options.host) {\n      this.options.host = hostname;\n      this.logger.warn('The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.');\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start().then(() => {\n      if (fn) {\n        fn.call(this.server);\n      }\n    }).catch(error => {\n      // Nothing\n      if (fn) {\n        fn.call(this.server, error);\n      }\n    });\n  }\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n\n\n  close(callback) {\n    util.deprecate(() => {}, \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\", \"DEP_WEBPACK_DEV_SERVER_CLOSE\")();\n    this.stop().then(() => {\n      if (callback) {\n        callback();\n      }\n    }).catch(error => {\n      if (callback) {\n        callback(error);\n      }\n    });\n  }\n\n}\n\nmodule.exports = Server;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/webpack-dev-server/lib/Server.js"],"names":["os","require","path","url","util","fs","ipaddr","defaultGateway","express","validate","schema","process","env","WEBPACK_SERVE","Server","constructor","options","compiler","hooks","deprecate","name","baseDataPath","logger","getInfrastructureLogger","staticWatchers","listeners","webSocketProxies","sockets","currentHash","undefined","cli","getArguments","processArguments","DEFAULT_STATS","all","hash","warnings","errors","errorDetails","isAbsoluteURL","URL","test","findIp","gateway","gatewayIp","parse","addresses","Object","values","networkInterfaces","cidr","net","parseCIDR","kind","match","toString","internalIP","family","internalIPSync","sync","getHostname","hostname","getFreePort","port","pRetry","portfinder","basePort","WEBPACK_DEV_SERVER_BASE_PORT","parseInt","defaultPortRetry","WEBPACK_DEV_SERVER_PORT_RETRY","getPortPromise","retries","findCacheDir","cwd","dir","statSync","join","isFile","e","parent","dirname","resolve","versions","pnp","addAdditionalEntries","additionalEntries","isWebTarget","externalsPresets","web","includes","target","client","webSocketURLStr","webSocketServer","webSocketURL","searchParams","URLSearchParams","protocol","server","type","set","username","password","isSockJSType","host","Number","String","pathname","prefix","logging","reconnect","push","hot","webpack","EntryPlugin","additionalEntry","context","apply","prependEntry","originalEntry","newAdditionalEntries","Promise","then","entry","Array","isArray","clone","keys","forEach","key","entryDescription","entriesClone","slice","concat","newEntry","entryOption","call","getCompilerOptions","compilers","length","compilerWithDevServer","find","config","devServer","compilerWithWebPreset","normalizeOptions","compilerOptions","compilerWatchOptions","watchOptions","getWatchOptions","getPolling","usePolling","poll","Boolean","getInterval","interval","rest","ignoreInitial","persistent","followSymlinks","atomic","alwaysStat","ignorePermissionErrors","ignored","getStaticItem","optionsForStatic","getDefaultStaticOptions","directory","staticOptions","publicPath","serveIndex","icons","watch","item","def","Error","allowedHosts","bonjour","parsedURL","overlay","Infinity","infrastructureLogging","level","compress","devMiddleware","historyApiFallback","isHTTPs","https","isSPDY","http2","spdy","protocols","requestCert","httpsProperties","property","value","readFile","Buffer","isBuffer","stats","lstatSync","realpathSync","error","readFileSync","map","fakeCert","cert","certificateDir","certificatePath","certificateExists","certificate","promises","stat","certificateTtl","certificateStat","now","Date","ctime","del","info","force","selfsigned","attributes","pems","generate","algorithm","days","keySize","extensions","cA","keyCertSign","digitalSignature","nonRepudiation","keyEncipherment","dataEncipherment","serverAuth","clientAuth","codeSigning","timeStamping","altNames","ip","mkdir","recursive","writeFile","private","encoding","cacert","ca","warn","ipc","isWindows","platform","pipePrefix","tmpdir","pipeName","liveReload","magicHtml","defaultOpenOptions","wait","getOpenItemsFromObject","normalizedOptions","app","normalizedTarget","singleTarget","open","result","onAfterSetupMiddleware","onBeforeSetupMiddleware","proxy","prototype","hasOwnProperty","proxyOptions","correctedContext","replace","getLogLevelForProxy","logLevel","logProvider","setupExitSignals","static","watchFiles","paths","defaultWebSocketServerType","defaultWebSocketServerOptions","getClientTransport","clientImplementation","clientImplementationFound","isKnownWebSocketServerImplementation","clientTransport","webSocketTransport","getServerTransport","implementation","implementationFound","setupProgressPlugin","ProgressPlugin","percent","msg","addInfo","pluginName","Math","floor","sendMessage","clients","emit","initialize","ProvidePlugin","__webpack_dev_server_client__","plugins","HMRPluginExists","p","HotModuleReplacementPlugin","plugin","progress","setupHooks","setupApp","setupHostHeaderCheck","setupDevMiddleware","setupBuiltInRoutes","setupWatchFiles","setupWatchStaticFiles","setupMiddlewares","createServer","signals","needForceShutdown","signal","listener","exit","stopCallback","close","on","webSocketProxy","upgrade","getStats","statsObj","warningsFilter","toJson","invalid","tap","done","sendStats","req","res","next","checkHeader","headers","send","webpackDevMiddleware","middleware","get","setHeader","createReadStream","clientPath","__dirname","pipe","_req","invalidate","end","waitUntilValid","write","statsForPrint","children","index","asset","assets","assetName","assetURL","staticOption","middlewares","compression","setHeaders","bind","createProxyMiddleware","getProxyMiddleware","proxyConfig","router","proxyConfigOrCallback","proxyMiddleware","ws","handler","newProxyConfig","isByPassFuncDefined","bypass","bypassUrl","connectHistoryApiFallback","verbose","log","method","serveMagicHtml","use","socket","once","splice","indexOf","createWebSocketServer","request","openBrowser","defaultOpenTarget","openTarget","catch","arguments","runBonjour","publish","subtypes","stopBonjour","callback","unpublishAll","destroy","logStatus","isColorSupported","cyan","red","getColorsOption","colorsEnabled","colors","useColor","address","prettyPrintURL","newHostname","format","localhost","loopbackIPv4","loopbackIPv6","networkUrlIPv4","networkUrlIPv6","isIP","parsedIP","range","networkIPv4","networkIPv6","isIPv4MappedAddress","toIPv4Address","loopbacks","bonjourProtocol","allHeaders","header","headerToCheck","hostHeader","isValidHostname","IPv4","isValid","IPv6","hostIdx","allowedHost","substring","endsWith","data","params","readyState","JSON","stringify","_path","filename","getFilenameFromUrl","outputFileSystem","queries","_parsedUrl","search","responsePage","shouldEmit","hasErrors","preventReloading","watchPath","chokidar","watcher","start","reject","Socket","code","unlinkSync","connect","listenOptions","listen","READ_WRITE","chmod","onListening","startCallback","stop","terminate","removeListener","fn","module","exports"],"mappings":"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","sourcesContent":["\"use strict\";\n\nconst os = require(\"os\");\nconst path = require(\"path\");\nconst url = require(\"url\");\nconst util = require(\"util\");\nconst fs = require(\"graceful-fs\");\nconst ipaddr = require(\"ipaddr.js\");\nconst defaultGateway = require(\"default-gateway\");\nconst express = require(\"express\");\nconst { validate } = require(\"schema-utils\");\nconst schema = require(\"./options.json\");\n\n/** @typedef {import(\"schema-utils/declarations/validate\").Schema} Schema */\n/** @typedef {import(\"webpack\").Compiler} Compiler */\n/** @typedef {import(\"webpack\").MultiCompiler} MultiCompiler */\n/** @typedef {import(\"webpack\").Configuration} WebpackConfiguration */\n/** @typedef {import(\"webpack\").StatsOptions} StatsOptions */\n/** @typedef {import(\"webpack\").StatsCompilation} StatsCompilation */\n/** @typedef {import(\"webpack\").Stats} Stats */\n/** @typedef {import(\"webpack\").MultiStats} MultiStats */\n/** @typedef {import(\"os\").NetworkInterfaceInfo} NetworkInterfaceInfo */\n/** @typedef {import(\"express\").Request} Request */\n/** @typedef {import(\"express\").Response} Response */\n/** @typedef {import(\"express\").NextFunction} NextFunction */\n/** @typedef {import(\"express\").RequestHandler} ExpressRequestHandler */\n/** @typedef {import(\"express\").ErrorRequestHandler} ExpressErrorRequestHandler */\n/** @typedef {import(\"chokidar\").WatchOptions} WatchOptions */\n/** @typedef {import(\"chokidar\").FSWatcher} FSWatcher */\n/** @typedef {import(\"connect-history-api-fallback\").Options} ConnectHistoryApiFallbackOptions */\n/** @typedef {import(\"bonjour\").Bonjour} Bonjour */\n/** @typedef {import(\"bonjour\").BonjourOptions} BonjourOptions */\n/** @typedef {import(\"http-proxy-middleware\").RequestHandler} RequestHandler */\n/** @typedef {import(\"http-proxy-middleware\").Options} HttpProxyMiddlewareOptions */\n/** @typedef {import(\"http-proxy-middleware\").Filter} HttpProxyMiddlewareOptionsFilter */\n/** @typedef {import(\"serve-index\").Options} ServeIndexOptions */\n/** @typedef {import(\"serve-static\").ServeStaticOptions} ServeStaticOptions */\n/** @typedef {import(\"ipaddr.js\").IPv4} IPv4 */\n/** @typedef {import(\"ipaddr.js\").IPv6} IPv6 */\n/** @typedef {import(\"net\").Socket} Socket */\n/** @typedef {import(\"http\").IncomingMessage} IncomingMessage */\n/** @typedef {import(\"open\").Options} OpenOptions */\n\n/** @typedef {import(\"https\").ServerOptions & { spdy?: { plain?: boolean | undefined, ssl?: boolean | undefined, 'x-forwarded-for'?: string | undefined, protocol?: string | undefined, protocols?: string[] | undefined }}} ServerOptions */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Options<Request, Response>} DevMiddlewareOptions\n */\n\n/**\n * @template Request, Response\n * @typedef {import(\"webpack-dev-middleware\").Context<Request, Response>} DevMiddlewareContext\n */\n\n/**\n * @typedef {\"local-ip\" | \"local-ipv4\" | \"local-ipv6\" | string} Host\n */\n\n/**\n * @typedef {number | string | \"auto\"} Port\n */\n\n/**\n * @typedef {Object} WatchFiles\n * @property {string | string[]} paths\n * @property {WatchOptions & { aggregateTimeout?: number, ignored?: string | RegExp | string[], poll?: number | boolean }} [options]\n */\n\n/**\n * @typedef {Object} Static\n * @property {string} [directory]\n * @property {string | string[]} [publicPath]\n * @property {boolean | ServeIndexOptions} [serveIndex]\n * @property {ServeStaticOptions} [staticOptions]\n * @property {boolean | WatchOptions & { aggregateTimeout?: number, ignored?: string | RegExp | string[], poll?: number | boolean }} [watch]\n */\n\n/**\n * @typedef {Object} NormalizedStatic\n * @property {string} directory\n * @property {string[]} publicPath\n * @property {false | ServeIndexOptions} serveIndex\n * @property {ServeStaticOptions} staticOptions\n * @property {false | WatchOptions} watch\n */\n\n/**\n * @typedef {Object} ServerConfiguration\n * @property {\"http\" | \"https\" | \"spdy\" | string} [type]\n * @property {ServerOptions} [options]\n */\n\n/**\n * @typedef {Object} WebSocketServerConfiguration\n * @property {\"sockjs\" | \"ws\" | string | Function} [type]\n * @property {Record<string, any>} [options]\n */\n\n/**\n * @typedef {(import(\"ws\").WebSocket | import(\"sockjs\").Connection & { send: import(\"ws\").WebSocket[\"send\"], terminate: import(\"ws\").WebSocket[\"terminate\"], ping: import(\"ws\").WebSocket[\"ping\"] }) & { isAlive?: boolean }} ClientConnection\n */\n\n/**\n * @typedef {import(\"ws\").WebSocketServer | import(\"sockjs\").Server & { close: import(\"ws\").WebSocketServer[\"close\"] }} WebSocketServer\n */\n\n/**\n * @typedef {{ implementation: WebSocketServer, clients: ClientConnection[] }} WebSocketServerImplementation\n */\n\n/**\n * @typedef {{ [url: string]: string | HttpProxyMiddlewareOptions }} ProxyConfigMap\n */\n\n/**\n * @typedef {HttpProxyMiddlewareOptions[]} ProxyArray\n */\n\n/**\n * @callback ByPass\n * @param {Request} req\n * @param {Response} res\n * @param {ProxyConfigArray} proxyConfig\n */\n\n/**\n * @typedef {{ path?: string | string[] | undefined, context?: string | string[] | HttpProxyMiddlewareOptionsFilter | undefined } & HttpProxyMiddlewareOptions & ByPass} ProxyConfigArray\n */\n\n/**\n * @typedef {Object} OpenApp\n * @property {string} [name]\n * @property {string[]} [arguments]\n */\n\n/**\n * @typedef {Object} Open\n * @property {string | string[] | OpenApp} [app]\n * @property {string | string[]} [target]\n */\n\n/**\n * @typedef {Object} NormalizedOpen\n * @property {string} target\n * @property {import(\"open\").Options} options\n */\n\n/**\n * @typedef {Object} WebSocketURL\n * @property {string} [hostname]\n * @property {string} [password]\n * @property {string} [pathname]\n * @property {number | string} [port]\n * @property {string} [protocol]\n * @property {string} [username]\n */\n\n/**\n * @typedef {Object} ClientConfiguration\n * @property {\"log\" | \"info\" | \"warn\" | \"error\" | \"none\" | \"verbose\"} [logging]\n * @property {boolean  | { warnings?: boolean, errors?: boolean }} [overlay]\n * @property {boolean} [progress]\n * @property {boolean | number} [reconnect]\n * @property {\"ws\" | \"sockjs\" | string} [webSocketTransport]\n * @property {string | WebSocketURL} [webSocketURL]\n */\n\n/**\n * @typedef {Array<{ key: string; value: string }> | Record<string, string | string[]>} Headers\n */\n\n/**\n * @typedef {{ name?: string, path?: string, middleware: ExpressRequestHandler | ExpressErrorRequestHandler } | ExpressRequestHandler | ExpressErrorRequestHandler} Middleware\n */\n\n/**\n * @typedef {Object} Configuration\n * @property {boolean | string} [ipc]\n * @property {Host} [host]\n * @property {Port} [port]\n * @property {boolean | \"only\"} [hot]\n * @property {boolean} [liveReload]\n * @property {DevMiddlewareOptions<Request, Response>} [devMiddleware]\n * @property {boolean} [compress]\n * @property {boolean} [magicHtml]\n * @property {\"auto\" | \"all\" | string | string[]} [allowedHosts]\n * @property {boolean | ConnectHistoryApiFallbackOptions} [historyApiFallback]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | BonjourOptions} [bonjour]\n * @property {string | string[] | WatchFiles | Array<string | WatchFiles>} [watchFiles]\n * @property {boolean | string | Static | Array<string | Static>} [static]\n * @property {boolean | ServerOptions} [https]\n * @property {boolean} [http2]\n * @property {\"http\" | \"https\" | \"spdy\" | string | ServerConfiguration} [server]\n * @property {boolean | \"sockjs\" | \"ws\" | string | WebSocketServerConfiguration} [webSocketServer]\n * @property {ProxyConfigMap | ProxyConfigArray | ProxyArray} [proxy]\n * @property {boolean | string | Open | Array<string | Open>} [open]\n * @property {boolean} [setupExitSignals]\n * @property {boolean | ClientConfiguration} [client]\n * @property {Headers | ((req: Request, res: Response, context: DevMiddlewareContext<Request, Response>) => Headers)} [headers]\n * @property {(devServer: Server) => void} [onAfterSetupMiddleware]\n * @property {(devServer: Server) => void} [onBeforeSetupMiddleware]\n * @property {(devServer: Server) => void} [onListening]\n * @property {(middlewares: Middleware[], devServer: Server) => Middleware[]} [setupMiddlewares]\n */\n\nif (!process.env.WEBPACK_SERVE) {\n  // TODO fix me in the next major release\n  // @ts-ignore\n  process.env.WEBPACK_SERVE = true;\n}\n\nclass Server {\n  /**\n   * @param {Configuration | Compiler | MultiCompiler} options\n   * @param {Compiler | MultiCompiler | Configuration} compiler\n   */\n  constructor(options = {}, compiler) {\n    // TODO: remove this after plugin support is published\n    if (/** @type {Compiler | MultiCompiler} */ (options).hooks) {\n      util.deprecate(\n        () => {},\n        \"Using 'compiler' as the first argument is deprecated. Please use 'options' as the first argument and 'compiler' as the second argument.\",\n        \"DEP_WEBPACK_DEV_SERVER_CONSTRUCTOR\"\n      )();\n\n      [options = {}, compiler] = [compiler, options];\n    }\n\n    validate(/** @type {Schema} */ (schema), options, {\n      name: \"Dev Server\",\n      baseDataPath: \"options\",\n    });\n\n    this.compiler = /** @type {Compiler | MultiCompiler} */ (compiler);\n    /**\n     * @type {ReturnType<Compiler[\"getInfrastructureLogger\"]>}\n     * */\n    this.logger = this.compiler.getInfrastructureLogger(\"webpack-dev-server\");\n    this.options = /** @type {Configuration} */ (options);\n    /**\n     * @type {FSWatcher[]}\n     */\n    this.staticWatchers = [];\n    /**\n     * @private\n     * @type {{ name: string | symbol, listener: (...args: any[]) => void}[] }}\n     */\n    this.listeners = [];\n    // Keep track of websocket proxies for external websocket upgrade.\n    /**\n     * @private\n     * @type {RequestHandler[]}\n     */\n    this.webSocketProxies = [];\n    /**\n     * @type {Socket[]}\n     */\n    this.sockets = [];\n    /**\n     * @private\n     * @type {string | undefined}\n     */\n    // eslint-disable-next-line no-undefined\n    this.currentHash = undefined;\n  }\n\n  // TODO compatibility with webpack v4, remove it after drop\n  static get cli() {\n    return {\n      get getArguments() {\n        return () => require(\"../bin/cli-flags\");\n      },\n      get processArguments() {\n        return require(\"../bin/process-arguments\");\n      },\n    };\n  }\n\n  static get schema() {\n    return schema;\n  }\n\n  /**\n   * @private\n   * @returns {StatsOptions}\n   * @constructor\n   */\n  static get DEFAULT_STATS() {\n    return {\n      all: false,\n      hash: true,\n      warnings: true,\n      errors: true,\n      errorDetails: false,\n    };\n  }\n\n  /**\n   * @param {string} URL\n   * @returns {boolean}\n   */\n  static isAbsoluteURL(URL) {\n    // Don't match Windows paths `c:\\`\n    if (/^[a-zA-Z]:\\\\/.test(URL)) {\n      return false;\n    }\n\n    // Scheme: https://tools.ietf.org/html/rfc3986#section-3.1\n    // Absolute URL: https://tools.ietf.org/html/rfc3986#section-4.3\n    return /^[a-zA-Z][a-zA-Z\\d+\\-.]*:/.test(URL);\n  }\n\n  /**\n   * @param {string} gateway\n   * @returns {string | undefined}\n   */\n  static findIp(gateway) {\n    const gatewayIp = ipaddr.parse(gateway);\n\n    // Look for the matching interface in all local interfaces.\n    for (const addresses of Object.values(os.networkInterfaces())) {\n      for (const { cidr } of /** @type {NetworkInterfaceInfo[]} */ (\n        addresses\n      )) {\n        const net = ipaddr.parseCIDR(/** @type {string} */ (cidr));\n\n        if (\n          net[0] &&\n          net[0].kind() === gatewayIp.kind() &&\n          gatewayIp.match(net)\n        ) {\n          return net[0].toString();\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {Promise<string | undefined>}\n   */\n  static async internalIP(family) {\n    try {\n      const { gateway } = await defaultGateway[family]();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {\"v4\" | \"v6\"} family\n   * @returns {string | undefined}\n   */\n  static internalIPSync(family) {\n    try {\n      const { gateway } = defaultGateway[family].sync();\n      return Server.findIp(gateway);\n    } catch {\n      // ignore\n    }\n  }\n\n  /**\n   * @param {Host} hostname\n   * @returns {Promise<string>}\n   */\n  static async getHostname(hostname) {\n    if (hostname === \"local-ip\") {\n      return (\n        (await Server.internalIP(\"v4\")) ||\n        (await Server.internalIP(\"v6\")) ||\n        \"0.0.0.0\"\n      );\n    } else if (hostname === \"local-ipv4\") {\n      return (await Server.internalIP(\"v4\")) || \"0.0.0.0\";\n    } else if (hostname === \"local-ipv6\") {\n      return (await Server.internalIP(\"v6\")) || \"::\";\n    }\n\n    return hostname;\n  }\n\n  /**\n   * @param {Port} port\n   * @returns {Promise<number | string>}\n   */\n  static async getFreePort(port) {\n    if (typeof port !== \"undefined\" && port !== null && port !== \"auto\") {\n      return port;\n    }\n\n    const pRetry = require(\"p-retry\");\n    const portfinder = require(\"portfinder\");\n\n    portfinder.basePort =\n      typeof process.env.WEBPACK_DEV_SERVER_BASE_PORT !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_BASE_PORT, 10)\n        : 8080;\n\n    // Try to find unused port and listen on it for 3 times,\n    // if port is not specified in options.\n    const defaultPortRetry =\n      typeof process.env.WEBPACK_DEV_SERVER_PORT_RETRY !== \"undefined\"\n        ? parseInt(process.env.WEBPACK_DEV_SERVER_PORT_RETRY, 10)\n        : 3;\n\n    return pRetry(() => portfinder.getPortPromise(), {\n      retries: defaultPortRetry,\n    });\n  }\n\n  /**\n   * @returns {string}\n   */\n  static findCacheDir() {\n    const cwd = process.cwd();\n\n    /**\n     * @type {string | undefined}\n     */\n    let dir = cwd;\n\n    for (;;) {\n      try {\n        if (fs.statSync(path.join(dir, \"package.json\")).isFile()) break;\n        // eslint-disable-next-line no-empty\n      } catch (e) {}\n\n      const parent = path.dirname(dir);\n\n      if (dir === parent) {\n        // eslint-disable-next-line no-undefined\n        dir = undefined;\n        break;\n      }\n\n      dir = parent;\n    }\n\n    if (!dir) {\n      return path.resolve(cwd, \".cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"1\") {\n      return path.resolve(dir, \".pnp/.cache/webpack-dev-server\");\n    } else if (process.versions.pnp === \"3\") {\n      return path.resolve(dir, \".yarn/.cache/webpack-dev-server\");\n    }\n\n    return path.resolve(dir, \"node_modules/.cache/webpack-dev-server\");\n  }\n\n  /**\n   * @private\n   * @param {Compiler} compiler\n   */\n  addAdditionalEntries(compiler) {\n    /**\n     * @type {string[]}\n     */\n    const additionalEntries = [];\n\n    const isWebTarget = compiler.options.externalsPresets\n      ? compiler.options.externalsPresets.web\n      : [\n          \"web\",\n          \"webworker\",\n          \"electron-preload\",\n          \"electron-renderer\",\n          \"node-webkit\",\n          // eslint-disable-next-line no-undefined\n          undefined,\n          null,\n        ].includes(/** @type {string} */ (compiler.options.target));\n\n    // TODO maybe empty empty client\n    if (this.options.client && isWebTarget) {\n      let webSocketURLStr = \"\";\n\n      if (this.options.webSocketServer) {\n        const webSocketURL =\n          /** @type {WebSocketURL} */\n          (\n            /** @type {ClientConfiguration} */\n            (this.options.client).webSocketURL\n          );\n        const webSocketServer =\n          /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n          (this.options.webSocketServer);\n        const searchParams = new URLSearchParams();\n\n        /** @type {string} */\n        let protocol;\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.protocol !== \"undefined\") {\n          protocol = webSocketURL.protocol;\n        } else {\n          protocol =\n            /** @type {ServerConfiguration} */\n            (this.options.server).type === \"http\" ? \"ws:\" : \"wss:\";\n        }\n\n        searchParams.set(\"protocol\", protocol);\n\n        if (typeof webSocketURL.username !== \"undefined\") {\n          searchParams.set(\"username\", webSocketURL.username);\n        }\n\n        if (typeof webSocketURL.password !== \"undefined\") {\n          searchParams.set(\"password\", webSocketURL.password);\n        }\n\n        /** @type {string} */\n        let hostname;\n\n        // SockJS is not supported server mode, so `hostname` and `port` can't specified, let's ignore them\n        // TODO show warning about this\n        const isSockJSType = webSocketServer.type === \"sockjs\";\n\n        // We are proxying dev server and need to specify custom `hostname`\n        if (typeof webSocketURL.hostname !== \"undefined\") {\n          hostname = webSocketURL.hostname;\n        }\n        // Web socket server works on custom `hostname`, only for `ws` because `sock-js` is not support custom `hostname`\n        else if (\n          typeof webSocketServer.options.host !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          hostname = webSocketServer.options.host;\n        }\n        // The `host` option is specified\n        else if (typeof this.options.host !== \"undefined\") {\n          hostname = this.options.host;\n        }\n        // The `port` option is not specified\n        else {\n          hostname = \"0.0.0.0\";\n        }\n\n        searchParams.set(\"hostname\", hostname);\n\n        /** @type {number | string} */\n        let port;\n\n        // We are proxying dev server and need to specify custom `port`\n        if (typeof webSocketURL.port !== \"undefined\") {\n          port = webSocketURL.port;\n        }\n        // Web socket server works on custom `port`, only for `ws` because `sock-js` is not support custom `port`\n        else if (\n          typeof webSocketServer.options.port !== \"undefined\" &&\n          !isSockJSType\n        ) {\n          port = webSocketServer.options.port;\n        }\n        // The `port` option is specified\n        else if (typeof this.options.port === \"number\") {\n          port = this.options.port;\n        }\n        // The `port` option is specified using `string`\n        else if (\n          typeof this.options.port === \"string\" &&\n          this.options.port !== \"auto\"\n        ) {\n          port = Number(this.options.port);\n        }\n        // The `port` option is not specified or set to `auto`\n        else {\n          port = \"0\";\n        }\n\n        searchParams.set(\"port\", String(port));\n\n        /** @type {string} */\n        let pathname = \"\";\n\n        // We are proxying dev server and need to specify custom `pathname`\n        if (typeof webSocketURL.pathname !== \"undefined\") {\n          pathname = webSocketURL.pathname;\n        }\n        // Web socket server works on custom `path`\n        else if (\n          typeof webSocketServer.options.prefix !== \"undefined\" ||\n          typeof webSocketServer.options.path !== \"undefined\"\n        ) {\n          pathname =\n            webSocketServer.options.prefix || webSocketServer.options.path;\n        }\n\n        searchParams.set(\"pathname\", pathname);\n\n        const client = /** @type {ClientConfiguration} */ (this.options.client);\n\n        if (typeof client.logging !== \"undefined\") {\n          searchParams.set(\"logging\", client.logging);\n        }\n\n        if (typeof client.reconnect !== \"undefined\") {\n          searchParams.set(\n            \"reconnect\",\n            typeof client.reconnect === \"number\"\n              ? String(client.reconnect)\n              : \"10\"\n          );\n        }\n\n        webSocketURLStr = searchParams.toString();\n      }\n\n      additionalEntries.push(\n        `${require.resolve(\"../client/index.js\")}?${webSocketURLStr}`\n      );\n    }\n\n    if (this.options.hot === \"only\") {\n      additionalEntries.push(require.resolve(\"webpack/hot/only-dev-server\"));\n    } else if (this.options.hot) {\n      additionalEntries.push(require.resolve(\"webpack/hot/dev-server\"));\n    }\n\n    const webpack = compiler.webpack || require(\"webpack\");\n\n    // use a hook to add entries if available\n    if (typeof webpack.EntryPlugin !== \"undefined\") {\n      for (const additionalEntry of additionalEntries) {\n        new webpack.EntryPlugin(compiler.context, additionalEntry, {\n          // eslint-disable-next-line no-undefined\n          name: undefined,\n        }).apply(compiler);\n      }\n    }\n    // TODO remove after drop webpack v4 support\n    else {\n      /**\n       * prependEntry Method for webpack 4\n       * @param {any} originalEntry\n       * @param {any} newAdditionalEntries\n       * @returns {any}\n       */\n      const prependEntry = (originalEntry, newAdditionalEntries) => {\n        if (typeof originalEntry === \"function\") {\n          return () =>\n            Promise.resolve(originalEntry()).then((entry) =>\n              prependEntry(entry, newAdditionalEntries)\n            );\n        }\n\n        if (\n          typeof originalEntry === \"object\" &&\n          !Array.isArray(originalEntry)\n        ) {\n          /** @type {Object<string,string>} */\n          const clone = {};\n\n          Object.keys(originalEntry).forEach((key) => {\n            // entry[key] should be a string here\n            const entryDescription = originalEntry[key];\n\n            clone[key] = prependEntry(entryDescription, newAdditionalEntries);\n          });\n\n          return clone;\n        }\n\n        // in this case, entry is a string or an array.\n        // make sure that we do not add duplicates.\n        /** @type {any} */\n        const entriesClone = additionalEntries.slice(0);\n\n        [].concat(originalEntry).forEach((newEntry) => {\n          if (!entriesClone.includes(newEntry)) {\n            entriesClone.push(newEntry);\n          }\n        });\n\n        return entriesClone;\n      };\n\n      compiler.options.entry = prependEntry(\n        compiler.options.entry || \"./src\",\n        additionalEntries\n      );\n      compiler.hooks.entryOption.call(\n        /** @type {string} */ (compiler.options.context),\n        compiler.options.entry\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @returns {Compiler[\"options\"]}\n   */\n  getCompilerOptions() {\n    if (\n      typeof (/** @type {MultiCompiler} */ (this.compiler).compilers) !==\n      \"undefined\"\n    ) {\n      if (/** @type {MultiCompiler} */ (this.compiler).compilers.length === 1) {\n        return (\n          /** @type {MultiCompiler} */\n          (this.compiler).compilers[0].options\n        );\n      }\n\n      // Configuration with the `devServer` options\n      const compilerWithDevServer =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find((config) => config.options.devServer);\n\n      if (compilerWithDevServer) {\n        return compilerWithDevServer.options;\n      }\n\n      // Configuration with `web` preset\n      const compilerWithWebPreset =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers.find(\n          (config) =>\n            (config.options.externalsPresets &&\n              config.options.externalsPresets.web) ||\n            [\n              \"web\",\n              \"webworker\",\n              \"electron-preload\",\n              \"electron-renderer\",\n              \"node-webkit\",\n              // eslint-disable-next-line no-undefined\n              undefined,\n              null,\n            ].includes(/** @type {string} */ (config.options.target))\n        );\n\n      if (compilerWithWebPreset) {\n        return compilerWithWebPreset.options;\n      }\n\n      // Fallback\n      return /** @type {MultiCompiler} */ (this.compiler).compilers[0].options;\n    }\n\n    return /** @type {Compiler} */ (this.compiler).options;\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async normalizeOptions() {\n    const { options } = this;\n    const compilerOptions = this.getCompilerOptions();\n    // TODO remove `{}` after drop webpack v4 support\n    const compilerWatchOptions = compilerOptions.watchOptions || {};\n    /**\n     * @param {WatchOptions & WebpackConfiguration[\"watchOptions\"]} watchOptions\n     * @returns {WatchOptions}\n     */\n    const getWatchOptions = (watchOptions = {}) => {\n      const getPolling = () => {\n        if (typeof watchOptions.usePolling !== \"undefined\") {\n          return watchOptions.usePolling;\n        }\n\n        if (typeof watchOptions.poll !== \"undefined\") {\n          return Boolean(watchOptions.poll);\n        }\n\n        if (typeof compilerWatchOptions.poll !== \"undefined\") {\n          return Boolean(compilerWatchOptions.poll);\n        }\n\n        return false;\n      };\n      const getInterval = () => {\n        if (typeof watchOptions.interval !== \"undefined\") {\n          return watchOptions.interval;\n        }\n\n        if (typeof watchOptions.poll === \"number\") {\n          return watchOptions.poll;\n        }\n\n        if (typeof compilerWatchOptions.poll === \"number\") {\n          return compilerWatchOptions.poll;\n        }\n      };\n\n      const usePolling = getPolling();\n      const interval = getInterval();\n      const { poll, ...rest } = watchOptions;\n\n      return {\n        ignoreInitial: true,\n        persistent: true,\n        followSymlinks: false,\n        atomic: false,\n        alwaysStat: true,\n        ignorePermissionErrors: true,\n        // Respect options from compiler watchOptions\n        usePolling,\n        interval,\n        ignored: watchOptions.ignored,\n        // TODO: we respect these options for all watch options and allow developers to pass them to chokidar, but chokidar doesn't have these options maybe we need revisit that in future\n        ...rest,\n      };\n    };\n    /**\n     * @param {string | Static | undefined} [optionsForStatic]\n     * @returns {NormalizedStatic}\n     */\n    const getStaticItem = (optionsForStatic) => {\n      const getDefaultStaticOptions = () => {\n        return {\n          directory: path.join(process.cwd(), \"public\"),\n          staticOptions: {},\n          publicPath: [\"/\"],\n          serveIndex: { icons: true },\n          watch: getWatchOptions(),\n        };\n      };\n\n      /** @type {NormalizedStatic} */\n      let item;\n\n      if (typeof optionsForStatic === \"undefined\") {\n        item = getDefaultStaticOptions();\n      } else if (typeof optionsForStatic === \"string\") {\n        item = {\n          ...getDefaultStaticOptions(),\n          directory: optionsForStatic,\n        };\n      } else {\n        const def = getDefaultStaticOptions();\n\n        item = {\n          directory:\n            typeof optionsForStatic.directory !== \"undefined\"\n              ? optionsForStatic.directory\n              : def.directory,\n          // TODO: do merge in the next major release\n          staticOptions:\n            typeof optionsForStatic.staticOptions !== \"undefined\"\n              ? optionsForStatic.staticOptions\n              : def.staticOptions,\n          publicPath:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.publicPath !== \"undefined\"\n              ? Array.isArray(optionsForStatic.publicPath)\n                ? optionsForStatic.publicPath\n                : [optionsForStatic.publicPath]\n              : def.publicPath,\n          // TODO: do merge in the next major release\n          serveIndex:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.serveIndex !== \"undefined\"\n              ? typeof optionsForStatic.serveIndex === \"boolean\" &&\n                optionsForStatic.serveIndex\n                ? def.serveIndex\n                : optionsForStatic.serveIndex\n              : def.serveIndex,\n          watch:\n            // eslint-disable-next-line no-nested-ternary\n            typeof optionsForStatic.watch !== \"undefined\"\n              ? // eslint-disable-next-line no-nested-ternary\n                typeof optionsForStatic.watch === \"boolean\"\n                ? optionsForStatic.watch\n                  ? def.watch\n                  : false\n                : getWatchOptions(optionsForStatic.watch)\n              : def.watch,\n        };\n      }\n\n      if (Server.isAbsoluteURL(item.directory)) {\n        throw new Error(\"Using a URL as static.directory is not supported\");\n      }\n\n      return item;\n    };\n\n    if (typeof options.allowedHosts === \"undefined\") {\n      // AllowedHosts allows some default hosts picked from `options.host` or `webSocketURL.hostname` and `localhost`\n      options.allowedHosts = \"auto\";\n    }\n    // We store allowedHosts as array when supplied as string\n    else if (\n      typeof options.allowedHosts === \"string\" &&\n      options.allowedHosts !== \"auto\" &&\n      options.allowedHosts !== \"all\"\n    ) {\n      options.allowedHosts = [options.allowedHosts];\n    }\n    // CLI pass options as array, we should normalize them\n    else if (\n      Array.isArray(options.allowedHosts) &&\n      options.allowedHosts.includes(\"all\")\n    ) {\n      options.allowedHosts = \"all\";\n    }\n\n    if (typeof options.bonjour === \"undefined\") {\n      options.bonjour = false;\n    } else if (typeof options.bonjour === \"boolean\") {\n      options.bonjour = options.bonjour ? {} : false;\n    }\n\n    if (\n      typeof options.client === \"undefined\" ||\n      (typeof options.client === \"object\" && options.client !== null)\n    ) {\n      if (!options.client) {\n        options.client = {};\n      }\n\n      if (typeof options.client.webSocketURL === \"undefined\") {\n        options.client.webSocketURL = {};\n      } else if (typeof options.client.webSocketURL === \"string\") {\n        const parsedURL = new URL(options.client.webSocketURL);\n\n        options.client.webSocketURL = {\n          protocol: parsedURL.protocol,\n          hostname: parsedURL.hostname,\n          port: parsedURL.port.length > 0 ? Number(parsedURL.port) : \"\",\n          pathname: parsedURL.pathname,\n          username: parsedURL.username,\n          password: parsedURL.password,\n        };\n      } else if (typeof options.client.webSocketURL.port === \"string\") {\n        options.client.webSocketURL.port = Number(\n          options.client.webSocketURL.port\n        );\n      }\n\n      // Enable client overlay by default\n      if (typeof options.client.overlay === \"undefined\") {\n        options.client.overlay = true;\n      } else if (typeof options.client.overlay !== \"boolean\") {\n        options.client.overlay = {\n          errors: true,\n          warnings: true,\n          ...options.client.overlay,\n        };\n      }\n\n      if (typeof options.client.reconnect === \"undefined\") {\n        options.client.reconnect = 10;\n      } else if (options.client.reconnect === true) {\n        options.client.reconnect = Infinity;\n      } else if (options.client.reconnect === false) {\n        options.client.reconnect = 0;\n      }\n\n      // Respect infrastructureLogging.level\n      if (typeof options.client.logging === \"undefined\") {\n        options.client.logging = compilerOptions.infrastructureLogging\n          ? compilerOptions.infrastructureLogging.level\n          : \"info\";\n      }\n    }\n\n    if (typeof options.compress === \"undefined\") {\n      options.compress = true;\n    }\n\n    if (typeof options.devMiddleware === \"undefined\") {\n      options.devMiddleware = {};\n    }\n\n    // No need to normalize `headers`\n\n    if (typeof options.historyApiFallback === \"undefined\") {\n      options.historyApiFallback = false;\n    } else if (\n      typeof options.historyApiFallback === \"boolean\" &&\n      options.historyApiFallback\n    ) {\n      options.historyApiFallback = {};\n    }\n\n    // No need to normalize `host`\n\n    options.hot =\n      typeof options.hot === \"boolean\" || options.hot === \"only\"\n        ? options.hot\n        : true;\n\n    const isHTTPs = Boolean(options.https);\n    const isSPDY = Boolean(options.http2);\n\n    if (isHTTPs) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'https' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTPS\"\n      )();\n    }\n\n    if (isSPDY) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'http2' option is deprecated. Please use the 'server' option.\",\n        \"DEP_WEBPACK_DEV_SERVER_HTTP2\"\n      )();\n    }\n\n    options.server = {\n      type:\n        // eslint-disable-next-line no-nested-ternary\n        typeof options.server === \"string\"\n          ? options.server\n          : // eslint-disable-next-line no-nested-ternary\n          typeof (options.server || {}).type === \"string\"\n          ? /** @type {ServerConfiguration} */ (options.server).type || \"http\"\n          : // eslint-disable-next-line no-nested-ternary\n          isSPDY\n          ? \"spdy\"\n          : isHTTPs\n          ? \"https\"\n          : \"http\",\n      options: {\n        .../** @type {ServerOptions} */ (options.https),\n        .../** @type {ServerConfiguration} */ (options.server || {}).options,\n      },\n    };\n\n    if (\n      options.server.type === \"spdy\" &&\n      typeof (/** @type {ServerOptions} */ (options.server.options).spdy) ===\n        \"undefined\"\n    ) {\n      /** @type {ServerOptions} */\n      (options.server.options).spdy = {\n        protocols: [\"h2\", \"http/1.1\"],\n      };\n    }\n\n    if (options.server.type === \"https\" || options.server.type === \"spdy\") {\n      if (\n        typeof (\n          /** @type {ServerOptions} */ (options.server.options).requestCert\n        ) === \"undefined\"\n      ) {\n        /** @type {ServerOptions} */\n        (options.server.options).requestCert = false;\n      }\n\n      const httpsProperties =\n        /** @type {Array<keyof ServerOptions>} */\n        ([\"cacert\", \"ca\", \"cert\", \"crl\", \"key\", \"pfx\"]);\n\n      for (const property of httpsProperties) {\n        if (\n          typeof (\n            /** @type {ServerOptions} */ (options.server.options)[property]\n          ) === \"undefined\"\n        ) {\n          // eslint-disable-next-line no-continue\n          continue;\n        }\n\n        // @ts-ignore\n        if (property === \"cacert\") {\n          // TODO remove the `cacert` option in favor `ca` in the next major release\n          util.deprecate(\n            () => {},\n            \"The 'cacert' option is deprecated. Please use the 'ca' option.\",\n            \"DEP_WEBPACK_DEV_SERVER_CACERT\"\n          )();\n        }\n\n        /** @type {any} */\n        const value =\n          /** @type {ServerOptions} */\n          (options.server.options)[property];\n        /**\n         * @param {string | Buffer | undefined} item\n         * @returns {string | Buffer | undefined}\n         */\n        const readFile = (item) => {\n          if (\n            Buffer.isBuffer(item) ||\n            (typeof item === \"object\" && item !== null && !Array.isArray(item))\n          ) {\n            return item;\n          }\n\n          if (item) {\n            let stats = null;\n\n            try {\n              stats = fs.lstatSync(fs.realpathSync(item)).isFile();\n            } catch (error) {\n              // Ignore error\n            }\n\n            // It is file\n            return stats ? fs.readFileSync(item) : item;\n          }\n        };\n\n        /** @type {any} */\n        (options.server.options)[property] = Array.isArray(value)\n          ? value.map((item) => readFile(item))\n          : readFile(value);\n      }\n\n      let fakeCert;\n\n      if (\n        !(/** @type {ServerOptions} */ (options.server.options).key) ||\n        /** @type {ServerOptions} */ (!options.server.options).cert\n      ) {\n        const certificateDir = Server.findCacheDir();\n        const certificatePath = path.join(certificateDir, \"server.pem\");\n        let certificateExists;\n\n        try {\n          const certificate = await fs.promises.stat(certificatePath);\n          certificateExists = certificate.isFile();\n        } catch {\n          certificateExists = false;\n        }\n\n        if (certificateExists) {\n          const certificateTtl = 1000 * 60 * 60 * 24;\n          const certificateStat = await fs.promises.stat(certificatePath);\n          const now = Number(new Date());\n\n          // cert is more than 30 days old, kill it with fire\n          if ((now - Number(certificateStat.ctime)) / certificateTtl > 30) {\n            const del = require(\"del\");\n\n            this.logger.info(\n              \"SSL certificate is more than 30 days old. Removing...\"\n            );\n\n            await del([certificatePath], { force: true });\n\n            certificateExists = false;\n          }\n        }\n\n        if (!certificateExists) {\n          this.logger.info(\"Generating SSL certificate...\");\n\n          // @ts-ignore\n          const selfsigned = require(\"selfsigned\");\n          const attributes = [{ name: \"commonName\", value: \"localhost\" }];\n          const pems = selfsigned.generate(attributes, {\n            algorithm: \"sha256\",\n            days: 30,\n            keySize: 2048,\n            extensions: [\n              {\n                name: \"basicConstraints\",\n                cA: true,\n              },\n              {\n                name: \"keyUsage\",\n                keyCertSign: true,\n                digitalSignature: true,\n                nonRepudiation: true,\n                keyEncipherment: true,\n                dataEncipherment: true,\n              },\n              {\n                name: \"extKeyUsage\",\n                serverAuth: true,\n                clientAuth: true,\n                codeSigning: true,\n                timeStamping: true,\n              },\n              {\n                name: \"subjectAltName\",\n                altNames: [\n                  {\n                    // type 2 is DNS\n                    type: 2,\n                    value: \"localhost\",\n                  },\n                  {\n                    type: 2,\n                    value: \"localhost.localdomain\",\n                  },\n                  {\n                    type: 2,\n                    value: \"lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"*.lvh.me\",\n                  },\n                  {\n                    type: 2,\n                    value: \"[::1]\",\n                  },\n                  {\n                    // type 7 is IP\n                    type: 7,\n                    ip: \"127.0.0.1\",\n                  },\n                  {\n                    type: 7,\n                    ip: \"fe80::1\",\n                  },\n                ],\n              },\n            ],\n          });\n\n          await fs.promises.mkdir(certificateDir, { recursive: true });\n\n          await fs.promises.writeFile(\n            certificatePath,\n            pems.private + pems.cert,\n            {\n              encoding: \"utf8\",\n            }\n          );\n        }\n\n        fakeCert = await fs.promises.readFile(certificatePath);\n\n        this.logger.info(`SSL certificate: ${certificatePath}`);\n      }\n\n      if (\n        /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n          options.server.options\n        ).cacert\n      ) {\n        if (/** @type {ServerOptions} */ (options.server.options).ca) {\n          this.logger.warn(\n            \"Do not specify 'ca' and 'cacert' options together, the 'ca' option will be used.\"\n          );\n        } else {\n          /** @type {ServerOptions} */\n          (options.server.options).ca =\n            /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */\n            (options.server.options).cacert;\n        }\n\n        delete (\n          /** @type {ServerOptions & { cacert?: ServerOptions[\"ca\"] }} */ (\n            options.server.options\n          ).cacert\n        );\n      }\n\n      /** @type {ServerOptions} */\n      (options.server.options).key =\n        /** @type {ServerOptions} */\n        (options.server.options).key || fakeCert;\n      /** @type {ServerOptions} */\n      (options.server.options).cert =\n        /** @type {ServerOptions} */\n        (options.server.options).cert || fakeCert;\n    }\n\n    if (typeof options.ipc === \"boolean\") {\n      const isWindows = process.platform === \"win32\";\n      const pipePrefix = isWindows ? \"\\\\\\\\.\\\\pipe\\\\\" : os.tmpdir();\n      const pipeName = \"webpack-dev-server.sock\";\n\n      options.ipc = path.join(pipePrefix, pipeName);\n    }\n\n    options.liveReload =\n      typeof options.liveReload !== \"undefined\" ? options.liveReload : true;\n\n    options.magicHtml =\n      typeof options.magicHtml !== \"undefined\" ? options.magicHtml : true;\n\n    // https://github.com/webpack/webpack-dev-server/issues/1990\n    const defaultOpenOptions = { wait: false };\n    /**\n     * @param {any} target\n     * @returns {NormalizedOpen[]}\n     */\n    // TODO: remove --open-app in favor of --open-app-name\n    const getOpenItemsFromObject = ({ target, ...rest }) => {\n      const normalizedOptions = { ...defaultOpenOptions, ...rest };\n\n      if (typeof normalizedOptions.app === \"string\") {\n        normalizedOptions.app = {\n          name: normalizedOptions.app,\n        };\n      }\n\n      const normalizedTarget = typeof target === \"undefined\" ? \"<url>\" : target;\n\n      if (Array.isArray(normalizedTarget)) {\n        return normalizedTarget.map((singleTarget) => {\n          return { target: singleTarget, options: normalizedOptions };\n        });\n      }\n\n      return [{ target: normalizedTarget, options: normalizedOptions }];\n    };\n\n    if (typeof options.open === \"undefined\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [];\n    } else if (typeof options.open === \"boolean\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = options.open\n        ? [\n            {\n              target: \"<url>\",\n              options: /** @type {OpenOptions} */ (defaultOpenOptions),\n            },\n          ]\n        : [];\n    } else if (typeof options.open === \"string\") {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [{ target: options.open, options: defaultOpenOptions }];\n    } else if (Array.isArray(options.open)) {\n      /**\n       * @type {NormalizedOpen[]}\n       */\n      const result = [];\n\n      options.open.forEach((item) => {\n        if (typeof item === \"string\") {\n          result.push({ target: item, options: defaultOpenOptions });\n\n          return;\n        }\n\n        result.push(...getOpenItemsFromObject(item));\n      });\n\n      /** @type {NormalizedOpen[]} */\n      (options.open) = result;\n    } else {\n      /** @type {NormalizedOpen[]} */\n      (options.open) = [...getOpenItemsFromObject(options.open)];\n    }\n\n    if (options.onAfterSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onAfterSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_AFTER_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (options.onBeforeSetupMiddleware) {\n      // TODO: remove in the next major release\n      util.deprecate(\n        () => {},\n        \"'onBeforeSetupMiddleware' option is deprecated. Please use the 'setupMiddlewares' option.\",\n        `DEP_WEBPACK_DEV_SERVER_ON_BEFORE_SETUP_MIDDLEWARE`\n      )();\n    }\n\n    if (typeof options.port === \"string\" && options.port !== \"auto\") {\n      options.port = Number(options.port);\n    }\n\n    /**\n     * Assume a proxy configuration specified as:\n     * proxy: {\n     *   'context': { options }\n     * }\n     * OR\n     * proxy: {\n     *   'context': 'target'\n     * }\n     */\n    if (typeof options.proxy !== \"undefined\") {\n      // TODO remove in the next major release, only accept `Array`\n      if (!Array.isArray(options.proxy)) {\n        if (\n          Object.prototype.hasOwnProperty.call(options.proxy, \"target\") ||\n          Object.prototype.hasOwnProperty.call(options.proxy, \"router\")\n        ) {\n          /** @type {ProxyArray} */\n          (options.proxy) = [/** @type {ProxyConfigMap} */ (options.proxy)];\n        } else {\n          /** @type {ProxyArray} */\n          (options.proxy) = Object.keys(options.proxy).map(\n            /**\n             * @param {string} context\n             * @returns {HttpProxyMiddlewareOptions}\n             */\n            (context) => {\n              let proxyOptions;\n              // For backwards compatibility reasons.\n              const correctedContext = context\n                .replace(/^\\*$/, \"**\")\n                .replace(/\\/\\*$/, \"\");\n\n              if (\n                typeof (\n                  /** @type {ProxyConfigMap} */ (options.proxy)[context]\n                ) === \"string\"\n              ) {\n                proxyOptions = {\n                  context: correctedContext,\n                  target:\n                    /** @type {ProxyConfigMap} */\n                    (options.proxy)[context],\n                };\n              } else {\n                proxyOptions = {\n                  // @ts-ignore\n                  .../** @type {ProxyConfigMap} */ (options.proxy)[context],\n                };\n                proxyOptions.context = correctedContext;\n              }\n\n              return proxyOptions;\n            }\n          );\n        }\n      }\n\n      /** @type {ProxyArray} */\n      (options.proxy) =\n        /** @type {ProxyArray} */\n        (options.proxy).map(\n          /**\n           * @param {HttpProxyMiddlewareOptions} item\n           * @returns {HttpProxyMiddlewareOptions}\n           */\n          (item) => {\n            /**\n             * @param {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined | \"none\" | \"log\" | \"verbose\"} level\n             * @returns {\"info\" | \"warn\" | \"error\" | \"debug\" | \"silent\" | undefined}\n             */\n            const getLogLevelForProxy = (level) => {\n              if (level === \"none\") {\n                return \"silent\";\n              }\n\n              if (level === \"log\") {\n                return \"info\";\n              }\n\n              if (level === \"verbose\") {\n                return \"debug\";\n              }\n\n              return level;\n            };\n\n            if (typeof item.logLevel === \"undefined\") {\n              item.logLevel = getLogLevelForProxy(\n                compilerOptions.infrastructureLogging\n                  ? compilerOptions.infrastructureLogging.level\n                  : \"info\"\n              );\n            }\n\n            if (typeof item.logProvider === \"undefined\") {\n              item.logProvider = () => this.logger;\n            }\n\n            return item;\n          }\n        );\n    }\n\n    if (typeof options.setupExitSignals === \"undefined\") {\n      options.setupExitSignals = true;\n    }\n\n    if (typeof options.static === \"undefined\") {\n      options.static = [getStaticItem()];\n    } else if (typeof options.static === \"boolean\") {\n      options.static = options.static ? [getStaticItem()] : false;\n    } else if (typeof options.static === \"string\") {\n      options.static = [getStaticItem(options.static)];\n    } else if (Array.isArray(options.static)) {\n      options.static = options.static.map((item) => getStaticItem(item));\n    } else {\n      options.static = [getStaticItem(options.static)];\n    }\n\n    if (typeof options.watchFiles === \"string\") {\n      options.watchFiles = [\n        { paths: options.watchFiles, options: getWatchOptions() },\n      ];\n    } else if (\n      typeof options.watchFiles === \"object\" &&\n      options.watchFiles !== null &&\n      !Array.isArray(options.watchFiles)\n    ) {\n      options.watchFiles = [\n        {\n          paths: options.watchFiles.paths,\n          options: getWatchOptions(options.watchFiles.options || {}),\n        },\n      ];\n    } else if (Array.isArray(options.watchFiles)) {\n      options.watchFiles = options.watchFiles.map((item) => {\n        if (typeof item === \"string\") {\n          return { paths: item, options: getWatchOptions() };\n        }\n\n        return {\n          paths: item.paths,\n          options: getWatchOptions(item.options || {}),\n        };\n      });\n    } else {\n      options.watchFiles = [];\n    }\n\n    const defaultWebSocketServerType = \"ws\";\n    const defaultWebSocketServerOptions = { path: \"/ws\" };\n\n    if (typeof options.webSocketServer === \"undefined\") {\n      options.webSocketServer = {\n        type: defaultWebSocketServerType,\n        options: defaultWebSocketServerOptions,\n      };\n    } else if (\n      typeof options.webSocketServer === \"boolean\" &&\n      !options.webSocketServer\n    ) {\n      options.webSocketServer = false;\n    } else if (\n      typeof options.webSocketServer === \"string\" ||\n      typeof options.webSocketServer === \"function\"\n    ) {\n      options.webSocketServer = {\n        type: options.webSocketServer,\n        options: defaultWebSocketServerOptions,\n      };\n    } else {\n      options.webSocketServer = {\n        type:\n          /** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).type || defaultWebSocketServerType,\n        options: {\n          ...defaultWebSocketServerOptions,\n          .../** @type {WebSocketServerConfiguration} */\n          (options.webSocketServer).options,\n        },\n      };\n\n      const webSocketServer =\n        /** @type {{ type: WebSocketServerConfiguration[\"type\"], options: NonNullable<WebSocketServerConfiguration[\"options\"]> }} */\n        (options.webSocketServer);\n\n      if (typeof webSocketServer.options.port === \"string\") {\n        webSocketServer.options.port = Number(webSocketServer.options.port);\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getClientTransport() {\n    let clientImplementation;\n    let clientImplementationFound = true;\n\n    const isKnownWebSocketServerImplementation =\n      this.options.webSocketServer &&\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      ) === \"string\" &&\n      // @ts-ignore\n      (this.options.webSocketServer.type === \"ws\" ||\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type === \"sockjs\");\n\n    let clientTransport;\n\n    if (this.options.client) {\n      if (\n        typeof (\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport\n        ) !== \"undefined\"\n      ) {\n        clientTransport =\n          /** @type {ClientConfiguration} */\n          (this.options.client).webSocketTransport;\n      } else if (isKnownWebSocketServerImplementation) {\n        clientTransport =\n          /** @type {WebSocketServerConfiguration} */\n          (this.options.webSocketServer).type;\n      } else {\n        clientTransport = \"ws\";\n      }\n    } else {\n      clientTransport = \"ws\";\n    }\n\n    switch (typeof clientTransport) {\n      case \"string\":\n        // could be 'sockjs', 'ws', or a path that should be required\n        if (clientTransport === \"sockjs\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/SockJSClient\"\n          );\n        } else if (clientTransport === \"ws\") {\n          clientImplementation = require.resolve(\n            \"../client/clients/WebSocketClient\"\n          );\n        } else {\n          try {\n            clientImplementation = require.resolve(clientTransport);\n          } catch (e) {\n            clientImplementationFound = false;\n          }\n        }\n        break;\n      default:\n        clientImplementationFound = false;\n    }\n\n    if (!clientImplementationFound) {\n      throw new Error(\n        `${\n          !isKnownWebSocketServerImplementation\n            ? \"When you use custom web socket implementation you must explicitly specify client.webSocketTransport. \"\n            : \"\"\n        }client.webSocketTransport must be a string denoting a default implementation (e.g. 'sockjs', 'ws') or a full path to a JS file via require.resolve(...) which exports a class `\n      );\n    }\n\n    return /** @type {string} */ (clientImplementation);\n  }\n\n  /**\n   * @private\n   * @returns {string}\n   */\n  getServerTransport() {\n    let implementation;\n    let implementationFound = true;\n\n    switch (\n      typeof (\n        /** @type {WebSocketServerConfiguration} */\n        (this.options.webSocketServer).type\n      )\n    ) {\n      case \"string\":\n        // Could be 'sockjs', in the future 'ws', or a path that should be required\n        if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"sockjs\"\n        ) {\n          implementation = require(\"./servers/SockJSServer\");\n        } else if (\n          /** @type {WebSocketServerConfiguration} */ (\n            this.options.webSocketServer\n          ).type === \"ws\"\n        ) {\n          implementation = require(\"./servers/WebsocketServer\");\n        } else {\n          try {\n            // eslint-disable-next-line import/no-dynamic-require\n            implementation = require(/** @type {WebSocketServerConfiguration} */ (\n              this.options.webSocketServer\n            ).type);\n          } catch (error) {\n            implementationFound = false;\n          }\n        }\n        break;\n      case \"function\":\n        implementation = /** @type {WebSocketServerConfiguration} */ (\n          this.options.webSocketServer\n        ).type;\n        break;\n      default:\n        implementationFound = false;\n    }\n\n    if (!implementationFound) {\n      throw new Error(\n        \"webSocketServer (webSocketServer.type) must be a string denoting a default implementation (e.g. 'ws', 'sockjs'), a full path to \" +\n          \"a JS file which exports a class extending BaseServer (webpack-dev-server/lib/servers/BaseServer.js) \" +\n          \"via require.resolve(...), or the class itself which extends BaseServer\"\n      );\n    }\n\n    return implementation;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupProgressPlugin() {\n    const { ProgressPlugin } =\n      /** @type {MultiCompiler}*/\n      (this.compiler).compilers\n        ? /** @type {MultiCompiler}*/ (this.compiler).compilers[0].webpack\n        : /** @type {Compiler}*/ (this.compiler).webpack ||\n          // TODO remove me after drop webpack v4\n          require(\"webpack\");\n\n    new ProgressPlugin(\n      /**\n       * @param {number} percent\n       * @param {string} msg\n       * @param {string} addInfo\n       * @param {string} pluginName\n       */\n      (percent, msg, addInfo, pluginName) => {\n        percent = Math.floor(percent * 100);\n\n        if (percent === 100) {\n          msg = \"Compilation completed\";\n        }\n\n        if (addInfo) {\n          msg = `${msg} (${addInfo})`;\n        }\n\n        if (this.webSocketServer) {\n          this.sendMessage(this.webSocketServer.clients, \"progress-update\", {\n            percent,\n            msg,\n            pluginName,\n          });\n        }\n\n        if (this.server) {\n          this.server.emit(\"progress-update\", { percent, msg, pluginName });\n        }\n      }\n    ).apply(this.compiler);\n  }\n\n  /**\n   * @private\n   * @returns {Promise<void>}\n   */\n  async initialize() {\n    if (this.options.webSocketServer) {\n      const compilers =\n        /** @type {MultiCompiler} */\n        (this.compiler).compilers || [this.compiler];\n\n      compilers.forEach((compiler) => {\n        this.addAdditionalEntries(compiler);\n\n        const webpack = compiler.webpack || require(\"webpack\");\n\n        new webpack.ProvidePlugin({\n          __webpack_dev_server_client__: this.getClientTransport(),\n        }).apply(compiler);\n\n        // TODO remove after drop webpack v4 support\n        compiler.options.plugins = compiler.options.plugins || [];\n\n        if (this.options.hot) {\n          const HMRPluginExists = compiler.options.plugins.find(\n            (p) => p.constructor === webpack.HotModuleReplacementPlugin\n          );\n\n          if (HMRPluginExists) {\n            this.logger.warn(\n              `\"hot: true\" automatically applies HMR plugin, you don't have to add it manually to your webpack configuration.`\n            );\n          } else {\n            // Apply the HMR plugin\n            const plugin = new webpack.HotModuleReplacementPlugin();\n\n            plugin.apply(compiler);\n          }\n        }\n      });\n\n      if (\n        this.options.client &&\n        /** @type {ClientConfiguration} */ (this.options.client).progress\n      ) {\n        this.setupProgressPlugin();\n      }\n    }\n\n    this.setupHooks();\n    this.setupApp();\n    this.setupHostHeaderCheck();\n    this.setupDevMiddleware();\n    // Should be after `webpack-dev-middleware`, otherwise other middlewares might rewrite response\n    this.setupBuiltInRoutes();\n    this.setupWatchFiles();\n    this.setupWatchStaticFiles();\n    this.setupMiddlewares();\n    this.createServer();\n\n    if (this.options.setupExitSignals) {\n      const signals = [\"SIGINT\", \"SIGTERM\"];\n\n      let needForceShutdown = false;\n\n      signals.forEach((signal) => {\n        const listener = () => {\n          if (needForceShutdown) {\n            process.exit();\n          }\n\n          this.logger.info(\n            \"Gracefully shutting down. To force exit, press ^C again. Please wait...\"\n          );\n\n          needForceShutdown = true;\n\n          this.stopCallback(() => {\n            if (typeof this.compiler.close === \"function\") {\n              this.compiler.close(() => {\n                process.exit();\n              });\n            } else {\n              process.exit();\n            }\n          });\n        };\n\n        this.listeners.push({ name: signal, listener });\n\n        process.on(signal, listener);\n      });\n    }\n\n    // Proxy WebSocket without the initial http request\n    // https://github.com/chimurai/http-proxy-middleware#external-websocket-upgrade\n    /** @type {RequestHandler[]} */\n    (this.webSocketProxies).forEach((webSocketProxy) => {\n      /** @type {import(\"http\").Server} */\n      (this.server).on(\n        \"upgrade\",\n        /** @type {RequestHandler & { upgrade: NonNullable<RequestHandler[\"upgrade\"]> }} */\n        (webSocketProxy).upgrade\n      );\n    }, this);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupApp() {\n    /** @type {import(\"express\").Application | undefined}*/\n    // eslint-disable-next-line new-cap\n    this.app = new /** @type {any} */ (express)();\n  }\n\n  /**\n   * @private\n   * @param {Stats | MultiStats} statsObj\n   * @returns {StatsCompilation}\n   */\n  getStats(statsObj) {\n    const stats = Server.DEFAULT_STATS;\n    const compilerOptions = this.getCompilerOptions();\n\n    // @ts-ignore\n    if (compilerOptions.stats && compilerOptions.stats.warningsFilter) {\n      // @ts-ignore\n      stats.warningsFilter = compilerOptions.stats.warningsFilter;\n    }\n\n    return statsObj.toJson(stats);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHooks() {\n    this.compiler.hooks.invalid.tap(\"webpack-dev-server\", () => {\n      if (this.webSocketServer) {\n        this.sendMessage(this.webSocketServer.clients, \"invalid\");\n      }\n    });\n    this.compiler.hooks.done.tap(\n      \"webpack-dev-server\",\n      /**\n       * @param {Stats | MultiStats} stats\n       */\n      (stats) => {\n        if (this.webSocketServer) {\n          this.sendStats(this.webSocketServer.clients, this.getStats(stats));\n        }\n\n        /**\n         * @private\n         * @type {Stats | MultiStats}\n         */\n        this.stats = stats;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupHostHeaderCheck() {\n    /** @type {import(\"express\").Application} */\n    (this.app).all(\n      \"*\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @param {NextFunction} next\n       * @returns {void}\n       */\n      (req, res, next) => {\n        if (\n          this.checkHeader(\n            /** @type {{ [key: string]: string | undefined }} */\n            (req.headers),\n            \"host\"\n          )\n        ) {\n          return next();\n        }\n\n        res.send(\"Invalid Host header\");\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupDevMiddleware() {\n    const webpackDevMiddleware = require(\"webpack-dev-middleware\");\n\n    // middleware for serving webpack bundle\n    this.middleware = webpackDevMiddleware(\n      this.compiler,\n      this.options.devMiddleware\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupBuiltInRoutes() {\n    const { app, middleware } = this;\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/__webpack_dev_server__/sockjs.bundle.js\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        res.setHeader(\"Content-Type\", \"application/javascript\");\n\n        const { createReadStream } = fs;\n        const clientPath = path.join(__dirname, \"..\", \"client\");\n\n        createReadStream(\n          path.join(clientPath, \"modules/sockjs-client/index.js\")\n        ).pipe(res);\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server/invalidate\",\n      /**\n       * @param {Request} _req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (_req, res) => {\n        this.invalidate();\n\n        res.end();\n      }\n    );\n\n    /** @type {import(\"express\").Application} */\n    (app).get(\n      \"/webpack-dev-server\",\n      /**\n       * @param {Request} req\n       * @param {Response} res\n       * @returns {void}\n       */\n      (req, res) => {\n        /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n        (middleware).waitUntilValid((stats) => {\n          res.setHeader(\"Content-Type\", \"text/html\");\n          res.write(\n            '<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body>'\n          );\n\n          const statsForPrint =\n            typeof (/** @type {MultiStats} */ (stats).stats) !== \"undefined\"\n              ? /** @type {MultiStats} */ (stats).toJson().children\n              : [/** @type {Stats} */ (stats).toJson()];\n\n          res.write(`<h1>Assets Report:</h1>`);\n\n          /**\n           * @type {StatsCompilation[]}\n           */\n          (statsForPrint).forEach((item, index) => {\n            res.write(\"<div>\");\n\n            const name =\n              // eslint-disable-next-line no-nested-ternary\n              typeof item.name !== \"undefined\"\n                ? item.name\n                : /** @type {MultiStats} */ (stats).stats\n                ? `unnamed[${index}]`\n                : \"unnamed\";\n\n            res.write(`<h2>Compilation: ${name}</h2>`);\n            res.write(\"<ul>\");\n\n            const publicPath =\n              item.publicPath === \"auto\" ? \"\" : item.publicPath;\n\n            for (const asset of /** @type {NonNullable<StatsCompilation[\"assets\"]>} */ (\n              item.assets\n            )) {\n              const assetName = asset.name;\n              const assetURL = `${publicPath}${assetName}`;\n\n              res.write(\n                `<li>\n              <strong><a href=\"${assetURL}\" target=\"_blank\">${assetName}</a></strong>\n            </li>`\n              );\n            }\n\n            res.write(\"</ul>\");\n            res.write(\"</div>\");\n          });\n\n          res.end(\"</body></html>\");\n        });\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchStaticFiles() {\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        if (staticOption.watch) {\n          this.watchFiles(staticOption.directory, staticOption.watch);\n        }\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupWatchFiles() {\n    const { watchFiles } = this.options;\n\n    if (/** @type {WatchFiles[]} */ (watchFiles).length > 0) {\n      /** @type {WatchFiles[]} */\n      (watchFiles).forEach((item) => {\n        this.watchFiles(item.paths, item.options);\n      });\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  setupMiddlewares() {\n    /**\n     * @type {Array<Middleware>}\n     */\n    let middlewares = [];\n\n    // compress is placed last and uses unshift so that it will be the first middleware used\n    if (this.options.compress) {\n      const compression = require(\"compression\");\n\n      middlewares.push({ name: \"compression\", middleware: compression() });\n    }\n\n    if (typeof this.options.onBeforeSetupMiddleware === \"function\") {\n      this.options.onBeforeSetupMiddleware(this);\n    }\n\n    if (typeof this.options.headers !== \"undefined\") {\n      middlewares.push({\n        name: \"set-headers\",\n        path: \"*\",\n        middleware: this.setHeaders.bind(this),\n      });\n    }\n\n    middlewares.push({\n      name: \"webpack-dev-middleware\",\n      middleware:\n        /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n        (this.middleware),\n    });\n\n    if (this.options.proxy) {\n      const { createProxyMiddleware } = require(\"http-proxy-middleware\");\n\n      /**\n       * @param {ProxyConfigArray} proxyConfig\n       * @returns {RequestHandler | undefined}\n       */\n      const getProxyMiddleware = (proxyConfig) => {\n        // It is possible to use the `bypass` method without a `target` or `router`.\n        // However, the proxy middleware has no use in this case, and will fail to instantiate.\n        if (proxyConfig.target) {\n          const context = proxyConfig.context || proxyConfig.path;\n\n          return createProxyMiddleware(\n            /** @type {string} */ (context),\n            proxyConfig\n          );\n        }\n\n        if (proxyConfig.router) {\n          return createProxyMiddleware(proxyConfig);\n        }\n      };\n\n      /**\n       * Assume a proxy configuration specified as:\n       * proxy: [\n       *   {\n       *     context: \"value\",\n       *     ...options,\n       *   },\n       *   // or:\n       *   function() {\n       *     return {\n       *       context: \"context\",\n       *       ...options,\n       *     };\n       *   }\n       * ]\n       */\n      /** @type {ProxyArray} */\n      (this.options.proxy).forEach(\n        /**\n         * @param {any} proxyConfigOrCallback\n         */\n        (proxyConfigOrCallback) => {\n          /**\n           * @type {RequestHandler}\n           */\n          let proxyMiddleware;\n\n          let proxyConfig =\n            typeof proxyConfigOrCallback === \"function\"\n              ? proxyConfigOrCallback()\n              : proxyConfigOrCallback;\n\n          proxyMiddleware =\n            /** @type {RequestHandler} */\n            (getProxyMiddleware(proxyConfig));\n\n          if (proxyConfig.ws) {\n            this.webSocketProxies.push(proxyMiddleware);\n          }\n\n          /**\n           * @param {Request} req\n           * @param {Response} res\n           * @param {NextFunction} next\n           * @returns {Promise<void>}\n           */\n          const handler = async (req, res, next) => {\n            if (typeof proxyConfigOrCallback === \"function\") {\n              const newProxyConfig = proxyConfigOrCallback(req, res, next);\n\n              if (newProxyConfig !== proxyConfig) {\n                proxyConfig = newProxyConfig;\n                proxyMiddleware =\n                  /** @type {RequestHandler} */\n                  (getProxyMiddleware(proxyConfig));\n              }\n            }\n\n            // - Check if we have a bypass function defined\n            // - In case the bypass function is defined we'll retrieve the\n            // bypassUrl from it otherwise bypassUrl would be null\n            // TODO remove in the next major in favor `context` and `router` options\n            const isByPassFuncDefined =\n              typeof proxyConfig.bypass === \"function\";\n            const bypassUrl = isByPassFuncDefined\n              ? await proxyConfig.bypass(req, res, proxyConfig)\n              : null;\n\n            if (typeof bypassUrl === \"boolean\") {\n              // skip the proxy\n              // @ts-ignore\n              req.url = null;\n              next();\n            } else if (typeof bypassUrl === \"string\") {\n              // byPass to that url\n              req.url = bypassUrl;\n              next();\n            } else if (proxyMiddleware) {\n              return proxyMiddleware(req, res, next);\n            } else {\n              next();\n            }\n          };\n\n          middlewares.push({\n            name: \"http-proxy-middleware\",\n            middleware: handler,\n          });\n          // Also forward error requests to the proxy so it can handle them.\n          middlewares.push({\n            name: \"http-proxy-middleware-error-handler\",\n            middleware:\n              /**\n               * @param {Error} error\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {any}\n               */\n              (error, req, res, next) => handler(req, res, next),\n          });\n        }\n      );\n\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          middlewares.push({\n            name: \"express-static\",\n            path: publicPath,\n            middleware: express.static(\n              staticOption.directory,\n              staticOption.staticOptions\n            ),\n          });\n        });\n      });\n    }\n\n    if (this.options.historyApiFallback) {\n      const connectHistoryApiFallback = require(\"connect-history-api-fallback\");\n      const { historyApiFallback } = this.options;\n\n      if (\n        typeof (\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).logger\n        ) === \"undefined\" &&\n        !(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback).verbose\n        )\n      ) {\n        // @ts-ignore\n        historyApiFallback.logger = this.logger.log.bind(\n          this.logger,\n          \"[connect-history-api-fallback]\"\n        );\n      }\n\n      // Fall back to /index.html if nothing else matches.\n      middlewares.push({\n        name: \"connect-history-api-fallback\",\n        middleware: connectHistoryApiFallback(\n          /** @type {ConnectHistoryApiFallbackOptions} */\n          (historyApiFallback)\n        ),\n      });\n\n      // include our middleware to ensure\n      // it is able to handle '/index.html' request after redirect\n      middlewares.push({\n        name: \"webpack-dev-middleware\",\n        middleware:\n          /** @type {import(\"webpack-dev-middleware\").Middleware<Request, Response>}*/\n          (this.middleware),\n      });\n\n      if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n        /** @type {NormalizedStatic[]} */\n        (this.options.static).forEach((staticOption) => {\n          staticOption.publicPath.forEach((publicPath) => {\n            middlewares.push({\n              name: \"express-static\",\n              path: publicPath,\n              middleware: express.static(\n                staticOption.directory,\n                staticOption.staticOptions\n              ),\n            });\n          });\n        });\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      const serveIndex = require(\"serve-index\");\n\n      /** @type {NormalizedStatic[]} */\n      (this.options.static).forEach((staticOption) => {\n        staticOption.publicPath.forEach((publicPath) => {\n          if (staticOption.serveIndex) {\n            middlewares.push({\n              name: \"serve-index\",\n              path: publicPath,\n              /**\n               * @param {Request} req\n               * @param {Response} res\n               * @param {NextFunction} next\n               * @returns {void}\n               */\n              middleware: (req, res, next) => {\n                // serve-index doesn't fallthrough non-get/head request to next middleware\n                if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n                  return next();\n                }\n\n                serveIndex(\n                  staticOption.directory,\n                  /** @type {ServeIndexOptions} */\n                  (staticOption.serveIndex)\n                )(req, res, next);\n              },\n            });\n          }\n        });\n      });\n    }\n\n    if (this.options.magicHtml) {\n      middlewares.push({\n        name: \"serve-magic-html\",\n        middleware: this.serveMagicHtml.bind(this),\n      });\n    }\n\n    if (typeof this.options.setupMiddlewares === \"function\") {\n      middlewares = this.options.setupMiddlewares(middlewares, this);\n    }\n\n    middlewares.forEach((middleware) => {\n      if (typeof middleware === \"function\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware);\n      } else if (typeof middleware.path !== \"undefined\") {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.path, middleware.middleware);\n      } else {\n        /** @type {import(\"express\").Application} */\n        (this.app).use(middleware.middleware);\n      }\n    });\n\n    if (typeof this.options.onAfterSetupMiddleware === \"function\") {\n      this.options.onAfterSetupMiddleware(this);\n    }\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  createServer() {\n    const { type, options } = /** @type {ServerConfiguration} */ (\n      this.options.server\n    );\n\n    /** @type {import(\"http\").Server | undefined | null} */\n    // eslint-disable-next-line import/no-dynamic-require\n    this.server = require(/** @type {string} */ (type)).createServer(\n      options,\n      this.app\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"connection\",\n      /**\n       * @param {Socket} socket\n       */\n      (socket) => {\n        // Add socket to list\n        this.sockets.push(socket);\n\n        socket.once(\"close\", () => {\n          // Remove socket from list\n          this.sockets.splice(this.sockets.indexOf(socket), 1);\n        });\n      }\n    );\n\n    /** @type {import(\"http\").Server} */\n    (this.server).on(\n      \"error\",\n      /**\n       * @param {Error} error\n       */\n      (error) => {\n        throw error;\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  // TODO: remove `--web-socket-server` in favor of `--web-socket-server-type`\n  createWebSocketServer() {\n    /** @type {WebSocketServerImplementation | undefined | null} */\n    this.webSocketServer = new /** @type {any} */ (this.getServerTransport())(\n      this\n    );\n    /** @type {WebSocketServerImplementation} */\n    (this.webSocketServer).implementation.on(\n      \"connection\",\n      /**\n       * @param {ClientConnection} client\n       * @param {IncomingMessage} request\n       */\n      (client, request) => {\n        /** @type {{ [key: string]: string | undefined } | undefined} */\n        const headers =\n          // eslint-disable-next-line no-nested-ternary\n          typeof request !== \"undefined\"\n            ? /** @type {{ [key: string]: string | undefined }} */\n              (request.headers)\n            : typeof (\n                /** @type {import(\"sockjs\").Connection} */ (client).headers\n              ) !== \"undefined\"\n            ? /** @type {import(\"sockjs\").Connection} */ (client).headers\n            : // eslint-disable-next-line no-undefined\n              undefined;\n\n        if (!headers) {\n          this.logger.warn(\n            'webSocketServer implementation must pass headers for the \"connection\" event'\n          );\n        }\n\n        if (\n          !headers ||\n          !this.checkHeader(headers, \"host\") ||\n          !this.checkHeader(headers, \"origin\")\n        ) {\n          this.sendMessage([client], \"error\", \"Invalid Host/Origin header\");\n\n          // With https enabled, the sendMessage above is encrypted asynchronously so not yet sent\n          // Terminate would prevent it sending, so use close to allow it to be sent\n          client.close();\n\n          return;\n        }\n\n        if (this.options.hot === true || this.options.hot === \"only\") {\n          this.sendMessage([client], \"hot\");\n        }\n\n        if (this.options.liveReload) {\n          this.sendMessage([client], \"liveReload\");\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).progress\n        ) {\n          this.sendMessage(\n            [client],\n            \"progress\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).progress\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */ (this.options.client).reconnect\n        ) {\n          this.sendMessage(\n            [client],\n            \"reconnect\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).reconnect\n          );\n        }\n\n        if (\n          this.options.client &&\n          /** @type {ClientConfiguration} */\n          (this.options.client).overlay\n        ) {\n          this.sendMessage(\n            [client],\n            \"overlay\",\n            /** @type {ClientConfiguration} */\n            (this.options.client).overlay\n          );\n        }\n\n        if (!this.stats) {\n          return;\n        }\n\n        this.sendStats([client], this.getStats(this.stats), true);\n      }\n    );\n  }\n\n  /**\n   * @private\n   * @param {string} defaultOpenTarget\n   * @returns {void}\n   */\n  openBrowser(defaultOpenTarget) {\n    const open = require(\"open\");\n\n    Promise.all(\n      /** @type {NormalizedOpen[]} */\n      (this.options.open).map((item) => {\n        /**\n         * @type {string}\n         */\n        let openTarget;\n\n        if (item.target === \"<url>\") {\n          openTarget = defaultOpenTarget;\n        } else {\n          openTarget = Server.isAbsoluteURL(item.target)\n            ? item.target\n            : new URL(item.target, defaultOpenTarget).toString();\n        }\n\n        return open(openTarget, item.options).catch(() => {\n          this.logger.warn(\n            `Unable to open \"${openTarget}\" page${\n              item.options.app\n                ? ` in \"${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).name\n                  }\" app${\n                    /** @type {import(\"open\").App} */\n                    (item.options.app).arguments\n                      ? ` with \"${\n                          /** @type {import(\"open\").App} */\n                          (item.options.app).arguments.join(\" \")\n                        }\" arguments`\n                      : \"\"\n                  }`\n                : \"\"\n            }. If you are running in a headless environment, please do not use the \"open\" option or related flags like \"--open\", \"--open-target\", and \"--open-app\".`\n          );\n        });\n      })\n    );\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  runBonjour() {\n    /**\n     * @private\n     * @type {import(\"bonjour\").Bonjour | undefined}\n     */\n    this.bonjour = require(\"bonjour\")();\n    this.bonjour.publish({\n      name: `Webpack Dev Server ${os.hostname()}:${this.options.port}`,\n      port: /** @type {number} */ (this.options.port),\n      type:\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\",\n      subtypes: [\"webpack\"],\n      .../** @type {BonjourOptions} */ (this.options.bonjour),\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  stopBonjour(callback = () => {}) {\n    /** @type {Bonjour} */\n    (this.bonjour).unpublishAll(() => {\n      /** @type {Bonjour} */\n      (this.bonjour).destroy();\n\n      if (callback) {\n        callback();\n      }\n    });\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  logStatus() {\n    const { isColorSupported, cyan, red } = require(\"colorette\");\n\n    /**\n     * @param {Compiler[\"options\"]} compilerOptions\n     * @returns {boolean}\n     */\n    const getColorsOption = (compilerOptions) => {\n      /**\n       * @type {boolean}\n       */\n      let colorsEnabled;\n\n      if (\n        compilerOptions.stats &&\n        typeof (/** @type {StatsOptions} */ (compilerOptions.stats).colors) !==\n          \"undefined\"\n      ) {\n        colorsEnabled =\n          /** @type {boolean} */\n          (/** @type {StatsOptions} */ (compilerOptions.stats).colors);\n      } else {\n        colorsEnabled = isColorSupported;\n      }\n\n      return colorsEnabled;\n    };\n\n    const colors = {\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      info(useColor, msg) {\n        if (useColor) {\n          return cyan(msg);\n        }\n\n        return msg;\n      },\n      /**\n       * @param {boolean} useColor\n       * @param {string} msg\n       * @returns {string}\n       */\n      error(useColor, msg) {\n        if (useColor) {\n          return red(msg);\n        }\n\n        return msg;\n      },\n    };\n    const useColor = getColorsOption(this.getCompilerOptions());\n\n    if (this.options.ipc) {\n      this.logger.info(\n        `Project is running at: \"${\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        }\"`\n      );\n    } else {\n      const protocol =\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\" ? \"http\" : \"https\";\n      const { address, port } =\n        /** @type {import(\"net\").AddressInfo} */\n        (\n          /** @type {import(\"http\").Server} */\n          (this.server).address()\n        );\n      /**\n       * @param {string} newHostname\n       * @returns {string}\n       */\n      const prettyPrintURL = (newHostname) =>\n        url.format({ protocol, hostname: newHostname, port, pathname: \"/\" });\n\n      let server;\n      let localhost;\n      let loopbackIPv4;\n      let loopbackIPv6;\n      let networkUrlIPv4;\n      let networkUrlIPv6;\n\n      if (this.options.host) {\n        if (this.options.host === \"localhost\") {\n          localhost = prettyPrintURL(\"localhost\");\n        } else {\n          let isIP;\n\n          try {\n            isIP = ipaddr.parse(this.options.host);\n          } catch (error) {\n            // Ignore\n          }\n\n          if (!isIP) {\n            server = prettyPrintURL(this.options.host);\n          }\n        }\n      }\n\n      const parsedIP = ipaddr.parse(address);\n\n      if (parsedIP.range() === \"unspecified\") {\n        localhost = prettyPrintURL(\"localhost\");\n\n        const networkIPv4 = Server.internalIPSync(\"v4\");\n\n        if (networkIPv4) {\n          networkUrlIPv4 = prettyPrintURL(networkIPv4);\n        }\n\n        const networkIPv6 = Server.internalIPSync(\"v6\");\n\n        if (networkIPv6) {\n          networkUrlIPv6 = prettyPrintURL(networkIPv6);\n        }\n      } else if (parsedIP.range() === \"loopback\") {\n        if (parsedIP.kind() === \"ipv4\") {\n          loopbackIPv4 = prettyPrintURL(parsedIP.toString());\n        } else if (parsedIP.kind() === \"ipv6\") {\n          loopbackIPv6 = prettyPrintURL(parsedIP.toString());\n        }\n      } else {\n        networkUrlIPv4 =\n          parsedIP.kind() === \"ipv6\" &&\n          /** @type {IPv6} */\n          (parsedIP).isIPv4MappedAddress()\n            ? prettyPrintURL(\n                /** @type {IPv6} */\n                (parsedIP).toIPv4Address().toString()\n              )\n            : prettyPrintURL(address);\n\n        if (parsedIP.kind() === \"ipv6\") {\n          networkUrlIPv6 = prettyPrintURL(address);\n        }\n      }\n\n      this.logger.info(\"Project is running at:\");\n\n      if (server) {\n        this.logger.info(`Server: ${colors.info(useColor, server)}`);\n      }\n\n      if (localhost || loopbackIPv4 || loopbackIPv6) {\n        const loopbacks = [];\n\n        if (localhost) {\n          loopbacks.push([colors.info(useColor, localhost)]);\n        }\n\n        if (loopbackIPv4) {\n          loopbacks.push([colors.info(useColor, loopbackIPv4)]);\n        }\n\n        if (loopbackIPv6) {\n          loopbacks.push([colors.info(useColor, loopbackIPv6)]);\n        }\n\n        this.logger.info(`Loopback: ${loopbacks.join(\", \")}`);\n      }\n\n      if (networkUrlIPv4) {\n        this.logger.info(\n          `On Your Network (IPv4): ${colors.info(useColor, networkUrlIPv4)}`\n        );\n      }\n\n      if (networkUrlIPv6) {\n        this.logger.info(\n          `On Your Network (IPv6): ${colors.info(useColor, networkUrlIPv6)}`\n        );\n      }\n\n      if (/** @type {NormalizedOpen[]} */ (this.options.open).length > 0) {\n        const openTarget = prettyPrintURL(this.options.host || \"localhost\");\n\n        this.openBrowser(openTarget);\n      }\n    }\n\n    if (/** @type {NormalizedStatic[]} */ (this.options.static).length > 0) {\n      this.logger.info(\n        `Content not from webpack is served from '${colors.info(\n          useColor,\n          /** @type {NormalizedStatic[]} */\n          (this.options.static)\n            .map((staticOption) => staticOption.directory)\n            .join(\", \")\n        )}' directory`\n      );\n    }\n\n    if (this.options.historyApiFallback) {\n      this.logger.info(\n        `404s will fallback to '${colors.info(\n          useColor,\n          /** @type {ConnectHistoryApiFallbackOptions} */ (\n            this.options.historyApiFallback\n          ).index || \"/index.html\"\n        )}'`\n      );\n    }\n\n    if (this.options.bonjour) {\n      const bonjourProtocol =\n        /** @type {BonjourOptions} */\n        (this.options.bonjour).type ||\n        /** @type {ServerConfiguration} */\n        (this.options.server).type === \"http\"\n          ? \"http\"\n          : \"https\";\n\n      this.logger.info(\n        `Broadcasting \"${bonjourProtocol}\" with subtype of \"webpack\" via ZeroConf DNS (Bonjour)`\n      );\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   */\n  setHeaders(req, res, next) {\n    let { headers } = this.options;\n\n    if (headers) {\n      if (typeof headers === \"function\") {\n        headers = headers(\n          req,\n          res,\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).context\n        );\n      }\n\n      /**\n       * @type {{key: string, value: string}[]}\n       */\n      const allHeaders = [];\n\n      if (!Array.isArray(headers)) {\n        // eslint-disable-next-line guard-for-in\n        for (const name in headers) {\n          // @ts-ignore\n          allHeaders.push({ key: name, value: headers[name] });\n        }\n\n        headers = allHeaders;\n      }\n\n      headers.forEach(\n        /**\n         * @param {{key: string, value: any}} header\n         */\n        (header) => {\n          res.setHeader(header.key, header.value);\n        }\n      );\n    }\n\n    next();\n  }\n\n  /**\n   * @private\n   * @param {{ [key: string]: string | undefined }} headers\n   * @param {string} headerToCheck\n   * @returns {boolean}\n   */\n  checkHeader(headers, headerToCheck) {\n    // allow user to opt out of this security check, at their own risk\n    // by explicitly enabling allowedHosts\n    if (this.options.allowedHosts === \"all\") {\n      return true;\n    }\n\n    // get the Host header and extract hostname\n    // we don't care about port not matching\n    const hostHeader = headers[headerToCheck];\n\n    if (!hostHeader) {\n      return false;\n    }\n\n    if (/^(file|.+-extension):/i.test(hostHeader)) {\n      return true;\n    }\n\n    // use the node url-parser to retrieve the hostname from the host-header.\n    const hostname = url.parse(\n      // if hostHeader doesn't have scheme, add // for parsing.\n      /^(.+:)?\\/\\//.test(hostHeader) ? hostHeader : `//${hostHeader}`,\n      false,\n      true\n    ).hostname;\n\n    // always allow requests with explicit IPv4 or IPv6-address.\n    // A note on IPv6 addresses:\n    // hostHeader will always contain the brackets denoting\n    // an IPv6-address in URLs,\n    // these are removed from the hostname in url.parse(),\n    // so we have the pure IPv6-address in hostname.\n    // always allow localhost host, for convenience (hostname === 'localhost')\n    // allow hostname of listening address  (hostname === this.options.host)\n    const isValidHostname =\n      (hostname !== null && ipaddr.IPv4.isValid(hostname)) ||\n      (hostname !== null && ipaddr.IPv6.isValid(hostname)) ||\n      hostname === \"localhost\" ||\n      hostname === this.options.host;\n\n    if (isValidHostname) {\n      return true;\n    }\n\n    const { allowedHosts } = this.options;\n\n    // always allow localhost host, for convenience\n    // allow if hostname is in allowedHosts\n    if (Array.isArray(allowedHosts) && allowedHosts.length > 0) {\n      for (let hostIdx = 0; hostIdx < allowedHosts.length; hostIdx++) {\n        const allowedHost = allowedHosts[hostIdx];\n\n        if (allowedHost === hostname) {\n          return true;\n        }\n\n        // support \".\" as a subdomain wildcard\n        // e.g. \".example.com\" will allow \"example.com\", \"www.example.com\", \"subdomain.example.com\", etc\n        if (allowedHost[0] === \".\") {\n          // \"example.com\"  (hostname === allowedHost.substring(1))\n          // \"*.example.com\"  (hostname.endsWith(allowedHost))\n          if (\n            hostname === allowedHost.substring(1) ||\n            /** @type {string} */ (hostname).endsWith(allowedHost)\n          ) {\n            return true;\n          }\n        }\n      }\n    }\n\n    // Also allow if `client.webSocketURL.hostname` provided\n    if (\n      this.options.client &&\n      typeof (\n        /** @type {ClientConfiguration} */ (this.options.client).webSocketURL\n      ) !== \"undefined\"\n    ) {\n      return (\n        /** @type {WebSocketURL} */\n        (/** @type {ClientConfiguration} */ (this.options.client).webSocketURL)\n          .hostname === hostname\n      );\n    }\n\n    // disallow\n    return false;\n  }\n\n  /**\n   * @param {ClientConnection[]} clients\n   * @param {string} type\n   * @param {any} [data]\n   * @param {any} [params]\n   */\n  // eslint-disable-next-line class-methods-use-this\n  sendMessage(clients, type, data, params) {\n    for (const client of clients) {\n      // `sockjs` uses `1` to indicate client is ready to accept data\n      // `ws` uses `WebSocket.OPEN`, but it is mean `1` too\n      if (client.readyState === 1) {\n        client.send(JSON.stringify({ type, data, params }));\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {Request} req\n   * @param {Response} res\n   * @param {NextFunction} next\n   * @returns {void}\n   */\n  serveMagicHtml(req, res, next) {\n    if (req.method !== \"GET\" && req.method !== \"HEAD\") {\n      return next();\n    }\n\n    /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n    (this.middleware).waitUntilValid(() => {\n      const _path = req.path;\n\n      try {\n        const filename =\n          /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n          (this.middleware).getFilenameFromUrl(`${_path}.js`);\n        const isFile =\n          /** @type {Compiler[\"outputFileSystem\"] & { statSync: import(\"fs\").StatSyncFn }}*/\n          (\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).context.outputFileSystem\n          )\n            .statSync(/** @type {import(\"fs\").PathLike} */ (filename))\n            .isFile();\n\n        if (!isFile) {\n          return next();\n        }\n\n        // Serve a page that executes the javascript\n        // @ts-ignore\n        const queries = req._parsedUrl.search || \"\";\n        const responsePage = `<!DOCTYPE html><html><head><meta charset=\"utf-8\"/></head><body><script type=\"text/javascript\" charset=\"utf-8\" src=\"${_path}.js${queries}\"></script></body></html>`;\n\n        res.send(responsePage);\n      } catch (error) {\n        return next();\n      }\n    });\n  }\n\n  // Send stats to a socket or multiple sockets\n  /**\n   * @private\n   * @param {ClientConnection[]} clients\n   * @param {StatsCompilation} stats\n   * @param {boolean} [force]\n   */\n  sendStats(clients, stats, force) {\n    const shouldEmit =\n      !force &&\n      stats &&\n      (!stats.errors || stats.errors.length === 0) &&\n      (!stats.warnings || stats.warnings.length === 0) &&\n      this.currentHash === stats.hash;\n\n    if (shouldEmit) {\n      this.sendMessage(clients, \"still-ok\");\n\n      return;\n    }\n\n    this.currentHash = stats.hash;\n    this.sendMessage(clients, \"hash\", stats.hash);\n\n    if (\n      /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n      (stats.errors).length > 0 ||\n      /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n      (stats.warnings).length > 0\n    ) {\n      const hasErrors =\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */\n        (stats.errors).length > 0;\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"warnings\"]>} */\n        (stats.warnings).length > 0\n      ) {\n        let params;\n\n        if (hasErrors) {\n          params = { preventReloading: true };\n        }\n\n        this.sendMessage(clients, \"warnings\", stats.warnings, params);\n      }\n\n      if (\n        /** @type {NonNullable<StatsCompilation[\"errors\"]>} */ (stats.errors)\n          .length > 0\n      ) {\n        this.sendMessage(clients, \"errors\", stats.errors);\n      }\n    } else {\n      this.sendMessage(clients, \"ok\");\n    }\n  }\n\n  /**\n   * @param {string | string[]} watchPath\n   * @param {WatchOptions} [watchOptions]\n   */\n  watchFiles(watchPath, watchOptions) {\n    const chokidar = require(\"chokidar\");\n    const watcher = chokidar.watch(watchPath, watchOptions);\n\n    // disabling refreshing on changing the content\n    if (this.options.liveReload) {\n      watcher.on(\"change\", (item) => {\n        if (this.webSocketServer) {\n          this.sendMessage(\n            this.webSocketServer.clients,\n            \"static-changed\",\n            item\n          );\n        }\n      });\n    }\n\n    this.staticWatchers.push(watcher);\n  }\n\n  /**\n   * @param {import(\"webpack-dev-middleware\").Callback} [callback]\n   */\n  invalidate(callback = () => {}) {\n    if (this.middleware) {\n      this.middleware.invalidate(callback);\n    }\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async start() {\n    await this.normalizeOptions();\n\n    if (this.options.ipc) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve, reject) => {\n          const net = require(\"net\");\n          const socket = new net.Socket();\n\n          socket.on(\n            \"error\",\n            /**\n             * @param {Error & { code?: string }} error\n             */\n            (error) => {\n              if (error.code === \"ECONNREFUSED\") {\n                // No other server listening on this socket so it can be safely removed\n                fs.unlinkSync(/** @type {string} */ (this.options.ipc));\n\n                resolve();\n\n                return;\n              } else if (error.code === \"ENOENT\") {\n                resolve();\n\n                return;\n              }\n\n              reject(error);\n            }\n          );\n\n          socket.connect(\n            { path: /** @type {string} */ (this.options.ipc) },\n            () => {\n              throw new Error(`IPC \"${this.options.ipc}\" is already used`);\n            }\n          );\n        })\n      );\n    } else {\n      this.options.host = await Server.getHostname(\n        /** @type {Host} */ (this.options.host)\n      );\n      this.options.port = await Server.getFreePort(\n        /** @type {Port} */ (this.options.port)\n      );\n    }\n\n    await this.initialize();\n\n    const listenOptions = this.options.ipc\n      ? { path: this.options.ipc }\n      : { host: this.options.host, port: this.options.port };\n\n    await /** @type {Promise<void>} */ (\n      new Promise((resolve) => {\n        /** @type {import(\"http\").Server} */\n        (this.server).listen(listenOptions, () => {\n          resolve();\n        });\n      })\n    );\n\n    if (this.options.ipc) {\n      // chmod 666 (rw rw rw)\n      const READ_WRITE = 438;\n\n      await fs.promises.chmod(\n        /** @type {string} */ (this.options.ipc),\n        READ_WRITE\n      );\n    }\n\n    if (this.options.webSocketServer) {\n      this.createWebSocketServer();\n    }\n\n    if (this.options.bonjour) {\n      this.runBonjour();\n    }\n\n    this.logStatus();\n\n    if (typeof this.options.onListening === \"function\") {\n      this.options.onListening(this);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  startCallback(callback = () => {}) {\n    this.start()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  /**\n   * @returns {Promise<void>}\n   */\n  async stop() {\n    if (this.bonjour) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          this.stopBonjour(() => {\n            resolve();\n          });\n        })\n      );\n    }\n\n    this.webSocketProxies = [];\n\n    await Promise.all(this.staticWatchers.map((watcher) => watcher.close()));\n\n    this.staticWatchers = [];\n\n    if (this.webSocketServer) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).implementation.close(() => {\n            this.webSocketServer = null;\n\n            resolve();\n          });\n\n          for (const client of /** @type {WebSocketServerImplementation} */ (\n            this.webSocketServer\n          ).clients) {\n            client.terminate();\n          }\n\n          /** @type {WebSocketServerImplementation} */\n          (this.webSocketServer).clients = [];\n        })\n      );\n    }\n\n    if (this.server) {\n      await /** @type {Promise<void>} */ (\n        new Promise((resolve) => {\n          /** @type {import(\"http\").Server} */\n          (this.server).close(() => {\n            this.server = null;\n\n            resolve();\n          });\n\n          for (const socket of this.sockets) {\n            socket.destroy();\n          }\n\n          this.sockets = [];\n        })\n      );\n\n      if (this.middleware) {\n        await /** @type {Promise<void>} */ (\n          new Promise((resolve, reject) => {\n            /** @type {import(\"webpack-dev-middleware\").API<Request, Response>}*/\n            (this.middleware).close((error) => {\n              if (error) {\n                reject(error);\n\n                return;\n              }\n\n              resolve();\n            });\n          })\n        );\n\n        this.middleware = null;\n      }\n    }\n\n    // We add listeners to signals when creating a new Server instance\n    // So ensure they are removed to prevent EventEmitter memory leak warnings\n    for (const item of this.listeners) {\n      process.removeListener(item.name, item.listener);\n    }\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   */\n  stopCallback(callback = () => {}) {\n    this.stop()\n      .then(() => callback(), callback)\n      .catch(callback);\n  }\n\n  // TODO remove in the next major release\n  /**\n   * @param {Port} port\n   * @param {Host} hostname\n   * @param {(err?: Error) => void} fn\n   * @returns {void}\n   */\n  listen(port, hostname, fn) {\n    util.deprecate(\n      () => {},\n      \"'listen' is deprecated. Please use the async 'start' or 'startCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_LISTEN\"\n    )();\n\n    if (typeof port === \"function\") {\n      fn = port;\n    }\n\n    if (\n      typeof port !== \"undefined\" &&\n      typeof this.options.port !== \"undefined\" &&\n      port !== this.options.port\n    ) {\n      this.options.port = port;\n\n      this.logger.warn(\n        'The \"port\" specified in options is different from the port passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.port) {\n      this.options.port = port;\n    }\n\n    if (\n      typeof hostname !== \"undefined\" &&\n      typeof this.options.host !== \"undefined\" &&\n      hostname !== this.options.host\n    ) {\n      this.options.host = hostname;\n\n      this.logger.warn(\n        'The \"host\" specified in options is different from the host passed as an argument. Will be used from arguments.'\n      );\n    }\n\n    if (!this.options.host) {\n      this.options.host = hostname;\n    }\n\n    this.start()\n      .then(() => {\n        if (fn) {\n          fn.call(this.server);\n        }\n      })\n      .catch((error) => {\n        // Nothing\n        if (fn) {\n          fn.call(this.server, error);\n        }\n      });\n  }\n\n  /**\n   * @param {(err?: Error) => void} [callback]\n   * @returns {void}\n   */\n  // TODO remove in the next major release\n  close(callback) {\n    util.deprecate(\n      () => {},\n      \"'close' is deprecated. Please use the async 'stop' or 'stopCallback' method.\",\n      \"DEP_WEBPACK_DEV_SERVER_CLOSE\"\n    )();\n\n    this.stop()\n      .then(() => {\n        if (callback) {\n          callback();\n        }\n      })\n      .catch((error) => {\n        if (callback) {\n          callback(error);\n        }\n      });\n  }\n}\n\nmodule.exports = Server;\n"]},"metadata":{},"sourceType":"script"}