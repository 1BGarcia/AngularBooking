{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncIterator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explorer = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _ExplorerBase = require(\"./ExplorerBase\");\n\nvar _readFile = require(\"./readFile\");\n\nvar _cacheWrapper = require(\"./cacheWrapper\");\n\nvar _getDirectory = require(\"./getDirectory\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nclass Explorer extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n\n  search(searchFrom = process.cwd()) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const startDirectory = yield (0, _getDirectory.getDirectory)(searchFrom);\n      const result = yield _this.searchFromDirectory(startDirectory);\n      return result;\n    })();\n  }\n\n  searchFromDirectory(dir) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const absoluteDir = _path.default.resolve(process.cwd(), dir);\n\n      const run = /*#__PURE__*/function () {\n        var _ref = _asyncToGenerator(function* () {\n          const result = yield _this2.searchDirectory(absoluteDir);\n\n          const nextDir = _this2.nextDirectoryToSearch(absoluteDir, result);\n\n          if (nextDir) {\n            return _this2.searchFromDirectory(nextDir);\n          }\n\n          const transformResult = yield _this2.config.transform(result);\n          return transformResult;\n        });\n\n        return function run() {\n          return _ref.apply(this, arguments);\n        };\n      }();\n\n      if (_this2.searchCache) {\n        return (0, _cacheWrapper.cacheWrapper)(_this2.searchCache, absoluteDir, run);\n      }\n\n      return run();\n    })();\n  }\n\n  searchDirectory(dir) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(_this3.config.searchPlaces), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const place = _step.value;\n          const placeResult = yield _this3.loadSearchPlace(dir, place);\n\n          if (_this3.shouldSearchStopWithResult(placeResult) === true) {\n            return placeResult;\n          }\n        } // config not found\n\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      return null;\n    })();\n  }\n\n  loadSearchPlace(dir, place) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      const filepath = _path.default.join(dir, place);\n\n      const fileContents = yield (0, _readFile.readFile)(filepath);\n      const result = yield _this4.createCosmiconfigResult(filepath, fileContents);\n      return result;\n    })();\n  }\n\n  loadFileContent(filepath, content) {\n    var _this5 = this;\n\n    return _asyncToGenerator(function* () {\n      if (content === null) {\n        return null;\n      }\n\n      if (content.trim() === '') {\n        return undefined;\n      }\n\n      const loader = _this5.getLoaderEntryForFile(filepath);\n\n      const loaderResult = yield loader(filepath, content);\n      return loaderResult;\n    })();\n  }\n\n  createCosmiconfigResult(filepath, content) {\n    var _this6 = this;\n\n    return _asyncToGenerator(function* () {\n      const fileContent = yield _this6.loadFileContent(filepath, content);\n\n      const result = _this6.loadedContentToCosmiconfigResult(filepath, fileContent);\n\n      return result;\n    })();\n  }\n\n  load(filepath) {\n    var _this7 = this;\n\n    return _asyncToGenerator(function* () {\n      _this7.validateFilePath(filepath);\n\n      const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n\n      const runLoad = /*#__PURE__*/function () {\n        var _ref2 = _asyncToGenerator(function* () {\n          const fileContents = yield (0, _readFile.readFile)(absoluteFilePath, {\n            throwNotFound: true\n          });\n          const result = yield _this7.createCosmiconfigResult(absoluteFilePath, fileContents);\n          const transformResult = yield _this7.config.transform(result);\n          return transformResult;\n        });\n\n        return function runLoad() {\n          return _ref2.apply(this, arguments);\n        };\n      }();\n\n      if (_this7.loadCache) {\n        return (0, _cacheWrapper.cacheWrapper)(_this7.loadCache, absoluteFilePath, runLoad);\n      }\n\n      return runLoad();\n    })();\n  }\n\n}\n\nexports.Explorer = Explorer;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/cosmiconfig/dist/Explorer.js"],"names":["Object","defineProperty","exports","value","Explorer","_path","_interopRequireDefault","require","_ExplorerBase","_readFile","_cacheWrapper","_getDirectory","obj","__esModule","default","ExplorerBase","constructor","options","search","searchFrom","process","cwd","startDirectory","getDirectory","result","searchFromDirectory","dir","absoluteDir","resolve","run","searchDirectory","nextDir","nextDirectoryToSearch","transformResult","config","transform","searchCache","cacheWrapper","searchPlaces","place","placeResult","loadSearchPlace","shouldSearchStopWithResult","filepath","join","fileContents","readFile","createCosmiconfigResult","loadFileContent","content","trim","undefined","loader","getLoaderEntryForFile","loaderResult","fileContent","loadedContentToCosmiconfigResult","load","validateFilePath","absoluteFilePath","runLoad","throwNotFound","loadCache"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Explorer = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _ExplorerBase = require(\"./ExplorerBase\");\n\nvar _readFile = require(\"./readFile\");\n\nvar _cacheWrapper = require(\"./cacheWrapper\");\n\nvar _getDirectory = require(\"./getDirectory\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nclass Explorer extends _ExplorerBase.ExplorerBase {\n  constructor(options) {\n    super(options);\n  }\n\n  async search(searchFrom = process.cwd()) {\n    const startDirectory = await (0, _getDirectory.getDirectory)(searchFrom);\n    const result = await this.searchFromDirectory(startDirectory);\n    return result;\n  }\n\n  async searchFromDirectory(dir) {\n    const absoluteDir = _path.default.resolve(process.cwd(), dir);\n\n    const run = async () => {\n      const result = await this.searchDirectory(absoluteDir);\n      const nextDir = this.nextDirectoryToSearch(absoluteDir, result);\n\n      if (nextDir) {\n        return this.searchFromDirectory(nextDir);\n      }\n\n      const transformResult = await this.config.transform(result);\n      return transformResult;\n    };\n\n    if (this.searchCache) {\n      return (0, _cacheWrapper.cacheWrapper)(this.searchCache, absoluteDir, run);\n    }\n\n    return run();\n  }\n\n  async searchDirectory(dir) {\n    for await (const place of this.config.searchPlaces) {\n      const placeResult = await this.loadSearchPlace(dir, place);\n\n      if (this.shouldSearchStopWithResult(placeResult) === true) {\n        return placeResult;\n      }\n    } // config not found\n\n\n    return null;\n  }\n\n  async loadSearchPlace(dir, place) {\n    const filepath = _path.default.join(dir, place);\n\n    const fileContents = await (0, _readFile.readFile)(filepath);\n    const result = await this.createCosmiconfigResult(filepath, fileContents);\n    return result;\n  }\n\n  async loadFileContent(filepath, content) {\n    if (content === null) {\n      return null;\n    }\n\n    if (content.trim() === '') {\n      return undefined;\n    }\n\n    const loader = this.getLoaderEntryForFile(filepath);\n    const loaderResult = await loader(filepath, content);\n    return loaderResult;\n  }\n\n  async createCosmiconfigResult(filepath, content) {\n    const fileContent = await this.loadFileContent(filepath, content);\n    const result = this.loadedContentToCosmiconfigResult(filepath, fileContent);\n    return result;\n  }\n\n  async load(filepath) {\n    this.validateFilePath(filepath);\n\n    const absoluteFilePath = _path.default.resolve(process.cwd(), filepath);\n\n    const runLoad = async () => {\n      const fileContents = await (0, _readFile.readFile)(absoluteFilePath, {\n        throwNotFound: true\n      });\n      const result = await this.createCosmiconfigResult(absoluteFilePath, fileContents);\n      const transformResult = await this.config.transform(result);\n      return transformResult;\n    };\n\n    if (this.loadCache) {\n      return (0, _cacheWrapper.cacheWrapper)(this.loadCache, absoluteFilePath, runLoad);\n    }\n\n    return runLoad();\n  }\n\n}\n\nexports.Explorer = Explorer;\n"]},"metadata":{},"sourceType":"script"}