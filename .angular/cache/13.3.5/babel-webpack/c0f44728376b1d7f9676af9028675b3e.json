{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.EsbuildExecutor = void 0;\n\nconst child_process_1 = require(\"child_process\");\n\nconst path = __importStar(require(\"path\"));\n/**\n * Provides the ability to execute esbuild regardless of the current platform's support\n * for using the native variant of esbuild. The native variant will be preferred (assuming\n * the `alwaysUseWasm` constructor option is `false) due to its inherent performance advantages.\n * At first use of esbuild, a supportability test will be automatically performed and the\n * WASM-variant will be used if needed by the platform.\n */\n\n\nclass EsbuildExecutor {\n  /**\n   * Constructs an instance of the `EsbuildExecutor` class.\n   *\n   * @param alwaysUseWasm If true, the WASM-variant will be preferred and no support test will be\n   * performed; if false (default), the native variant will be preferred.\n   */\n  constructor(alwaysUseWasm = false) {\n    this.alwaysUseWasm = alwaysUseWasm;\n    this.initialized = false;\n\n    this.esbuildTransform = this.esbuildFormatMessages = () => {\n      throw new Error('esbuild implementation missing');\n    };\n  }\n  /**\n   * Determines whether the native variant of esbuild can be used on the current platform.\n   *\n   * @returns True, if the native variant of esbuild is support; False, if the WASM variant is required.\n   */\n\n\n  static hasNativeSupport() {\n    // Try to use native variant to ensure it is functional for the platform.\n    // Spawning a separate esbuild check process is used to determine if the native\n    // variant is viable. If check fails, the WASM variant is initialized instead.\n    // Attempting to call one of the native esbuild functions is not a viable test\n    // currently since esbuild spawn errors are currently not propagated through the\n    // call stack for the esbuild function. If this limitation is removed in the future\n    // then the separate process spawn check can be removed in favor of a direct function\n    // call check.\n    try {\n      const {\n        status,\n        error\n      } = (0, child_process_1.spawnSync)(process.execPath, [path.join(__dirname, '../../../esbuild-check.js')]);\n      return status === 0 && error === undefined;\n    } catch {\n      return false;\n    }\n  }\n  /**\n   * Initializes the esbuild transform and format messages functions.\n   *\n   * @returns A promise that fulfills when esbuild has been loaded and available for use.\n   */\n\n\n  ensureEsbuild() {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (_this.initialized) {\n        return;\n      } // If the WASM variant was preferred at class construction or native is not supported, use WASM\n\n\n      if (_this.alwaysUseWasm || !EsbuildExecutor.hasNativeSupport()) {\n        yield _this.useWasm();\n        _this.initialized = true;\n        return;\n      }\n\n      try {\n        // Use the faster native variant if available.\n        const {\n          transform,\n          formatMessages\n        } = yield Promise.resolve().then(() => __importStar(require('esbuild')));\n        _this.esbuildTransform = transform;\n        _this.esbuildFormatMessages = formatMessages;\n      } catch {\n        // If the native variant is not installed then use the WASM-based variant\n        yield _this.useWasm();\n      }\n\n      _this.initialized = true;\n    })();\n  }\n  /**\n   * Transitions an executor instance to use the WASM-variant of esbuild.\n   */\n\n\n  useWasm() {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      const {\n        transform,\n        formatMessages\n      } = yield Promise.resolve().then(() => __importStar(require('esbuild-wasm')));\n      _this2.esbuildTransform = transform;\n      _this2.esbuildFormatMessages = formatMessages; // The ESBUILD_BINARY_PATH environment variable cannot exist when attempting to use the\n      // WASM variant. If it is then the binary located at the specified path will be used instead\n      // of the WASM variant.\n\n      delete process.env.ESBUILD_BINARY_PATH;\n      _this2.alwaysUseWasm = true;\n    })();\n  }\n\n  transform(input, options) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this3.ensureEsbuild();\n      return _this3.esbuildTransform(input, options);\n    })();\n  }\n\n  formatMessages(messages, options) {\n    var _this4 = this;\n\n    return _asyncToGenerator(function* () {\n      yield _this4.ensureEsbuild();\n      return _this4.esbuildFormatMessages(messages, options);\n    })();\n  }\n\n}\n\nexports.EsbuildExecutor = EsbuildExecutor;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/@angular-devkit/build-angular/src/webpack/plugins/esbuild-executor.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","EsbuildExecutor","child_process_1","require","path","constructor","alwaysUseWasm","initialized","esbuildTransform","esbuildFormatMessages","Error","hasNativeSupport","status","error","spawnSync","process","execPath","join","__dirname","ensureEsbuild","useWasm","transform","formatMessages","Promise","resolve","then","env","ESBUILD_BINARY_PATH","input","options","messages"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.EsbuildExecutor = void 0;\nconst child_process_1 = require(\"child_process\");\nconst path = __importStar(require(\"path\"));\n/**\n * Provides the ability to execute esbuild regardless of the current platform's support\n * for using the native variant of esbuild. The native variant will be preferred (assuming\n * the `alwaysUseWasm` constructor option is `false) due to its inherent performance advantages.\n * At first use of esbuild, a supportability test will be automatically performed and the\n * WASM-variant will be used if needed by the platform.\n */\nclass EsbuildExecutor {\n    /**\n     * Constructs an instance of the `EsbuildExecutor` class.\n     *\n     * @param alwaysUseWasm If true, the WASM-variant will be preferred and no support test will be\n     * performed; if false (default), the native variant will be preferred.\n     */\n    constructor(alwaysUseWasm = false) {\n        this.alwaysUseWasm = alwaysUseWasm;\n        this.initialized = false;\n        this.esbuildTransform = this.esbuildFormatMessages = () => {\n            throw new Error('esbuild implementation missing');\n        };\n    }\n    /**\n     * Determines whether the native variant of esbuild can be used on the current platform.\n     *\n     * @returns True, if the native variant of esbuild is support; False, if the WASM variant is required.\n     */\n    static hasNativeSupport() {\n        // Try to use native variant to ensure it is functional for the platform.\n        // Spawning a separate esbuild check process is used to determine if the native\n        // variant is viable. If check fails, the WASM variant is initialized instead.\n        // Attempting to call one of the native esbuild functions is not a viable test\n        // currently since esbuild spawn errors are currently not propagated through the\n        // call stack for the esbuild function. If this limitation is removed in the future\n        // then the separate process spawn check can be removed in favor of a direct function\n        // call check.\n        try {\n            const { status, error } = (0, child_process_1.spawnSync)(process.execPath, [\n                path.join(__dirname, '../../../esbuild-check.js'),\n            ]);\n            return status === 0 && error === undefined;\n        }\n        catch {\n            return false;\n        }\n    }\n    /**\n     * Initializes the esbuild transform and format messages functions.\n     *\n     * @returns A promise that fulfills when esbuild has been loaded and available for use.\n     */\n    async ensureEsbuild() {\n        if (this.initialized) {\n            return;\n        }\n        // If the WASM variant was preferred at class construction or native is not supported, use WASM\n        if (this.alwaysUseWasm || !EsbuildExecutor.hasNativeSupport()) {\n            await this.useWasm();\n            this.initialized = true;\n            return;\n        }\n        try {\n            // Use the faster native variant if available.\n            const { transform, formatMessages } = await Promise.resolve().then(() => __importStar(require('esbuild')));\n            this.esbuildTransform = transform;\n            this.esbuildFormatMessages = formatMessages;\n        }\n        catch {\n            // If the native variant is not installed then use the WASM-based variant\n            await this.useWasm();\n        }\n        this.initialized = true;\n    }\n    /**\n     * Transitions an executor instance to use the WASM-variant of esbuild.\n     */\n    async useWasm() {\n        const { transform, formatMessages } = await Promise.resolve().then(() => __importStar(require('esbuild-wasm')));\n        this.esbuildTransform = transform;\n        this.esbuildFormatMessages = formatMessages;\n        // The ESBUILD_BINARY_PATH environment variable cannot exist when attempting to use the\n        // WASM variant. If it is then the binary located at the specified path will be used instead\n        // of the WASM variant.\n        delete process.env.ESBUILD_BINARY_PATH;\n        this.alwaysUseWasm = true;\n    }\n    async transform(input, options) {\n        await this.ensureEsbuild();\n        return this.esbuildTransform(input, options);\n    }\n    async formatMessages(messages, options) {\n        await this.ensureEsbuild();\n        return this.esbuildFormatMessages(messages, options);\n    }\n}\nexports.EsbuildExecutor = EsbuildExecutor;\n"]},"metadata":{},"sourceType":"script"}