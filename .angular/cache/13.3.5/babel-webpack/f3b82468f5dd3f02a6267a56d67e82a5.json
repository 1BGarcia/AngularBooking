{"ast":null,"code":"/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\nconst os = require('os');\n\nconst path = require('path');\n\nconst fs = require('fs');\n\nconst util = require('util');\n\nconst loaderUtils = require('loader-utils');\n\nconst SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nconst adjustSourceMap = require('adjust-sourcemap-loader/lib/process');\n\nconst valueProcessor = require('./lib/value-processor');\n\nconst joinFn = require('./lib/join-function');\n\nconst logToTestHarness = require('./lib/log-to-test-harness');\n\nconst DEPRECATED_OPTIONS = {\n  engine: ['DEP_RESOLVE_URL_LOADER_OPTION_ENGINE', '\"engine\" option has been removed, postcss is the only parser used'],\n  keepQuery: ['DEP_RESOLVE_URL_LOADER_OPTION_KEEP_QUERY', '\"keepQuery\" option has been removed, the query and/or hash are now always retained'],\n  absolute: ['DEP_RESOLVE_URL_LOADER_OPTION_ABSOLUTE', '\"absolute\" option has been removed, consider the \"join\" option if absolute paths must be processed'],\n  attempts: ['DEP_RESOLVE_URL_LOADER_OPTION_ATTEMPTS', '\"attempts\" option has been removed, consider the \"join\" option if search is needed'],\n  includeRoot: ['DEP_RESOLVE_URL_LOADER_OPTION_INCLUDE_ROOT', '\"includeRoot\" option has been removed, consider the \"join\" option if search is needed'],\n  fail: ['DEP_RESOLVE_URL_LOADER_OPTION_FAIL', '\"fail\" option has been removed']\n};\n/**\n * A webpack loader that resolves absolute url() paths relative to their original source file.\n * Requires source-maps to do any meaningful work.\n * @param {string} content Css content\n * @param {object} sourceMap The source-map\n * @returns {string|String}\n */\n\nfunction resolveUrlLoader(content, sourceMap) {\n  /* jshint validthis:true */\n  // details of the file being processed\n  const loader = this; // a relative loader.context is a problem\n\n  if (/^\\./.test(loader.context)) {\n    return handleAsError('webpack misconfiguration', 'loader.context is relative, expected absolute');\n  } // infer webpack version from new loader features\n\n\n  const isWebpackGte5 = 'getOptions' in loader && typeof loader.getOptions === 'function'; // use loader.getOptions where available otherwise use loaderUtils\n\n  const rawOptions = isWebpackGte5 ? loader.getOptions() : loaderUtils.getOptions(loader);\n  const options = Object.assign({\n    sourceMap: loader.sourceMap,\n    silent: false,\n    removeCR: os.EOL.includes('\\r'),\n    root: false,\n    debug: false,\n    join: joinFn.defaultJoin\n  }, rawOptions); // maybe log options for the test harness\n\n  if (process.env.RESOLVE_URL_LOADER_TEST_HARNESS) {\n    logToTestHarness(process[process.env.RESOLVE_URL_LOADER_TEST_HARNESS], options);\n  } // deprecated options\n\n\n  const deprecatedItems = Object.entries(DEPRECATED_OPTIONS).filter(([key]) => key in rawOptions);\n\n  if (deprecatedItems.length) {\n    deprecatedItems.forEach(([, value]) => handleAsDeprecated(...value));\n  } // validate join option\n\n\n  if (typeof options.join !== 'function') {\n    return handleAsError('loader misconfiguration', '\"join\" option must be a Function');\n  } else if (options.join.length !== 2) {\n    return handleAsError('loader misconfiguration', '\"join\" Function must take exactly 2 arguments (options, loader)');\n  } // validate the result of calling the join option\n\n\n  const joinProper = options.join(options, loader);\n\n  if (typeof joinProper !== 'function') {\n    return handleAsError('loader misconfiguration', '\"join\" option must itself return a Function when it is called');\n  } else if (joinProper.length !== 1) {\n    return handleAsError('loader misconfiguration', '\"join\" Function must create a function that takes exactly 1 arguments (item)');\n  } // validate root option\n\n\n  if (typeof options.root === 'string') {\n    const isValid = options.root === '' || path.isAbsolute(options.root) && fs.existsSync(options.root) && fs.statSync(options.root).isDirectory();\n\n    if (!isValid) {\n      return handleAsError('loader misconfiguration', '\"root\" option must be an empty string or an absolute path to an existing directory');\n    }\n  } else if (options.root !== false) {\n    handleAsWarning('loader misconfiguration', '\"root\" option must be string where used or false where unused');\n  } // loader result is cacheable\n\n\n  loader.cacheable(); // incoming source-map\n\n  let absSourceMap = null;\n  let sourceMapConsumer = null;\n\n  if (sourceMap) {\n    // support non-standard string encoded source-map (per less-loader)\n    if (typeof sourceMap === 'string') {\n      try {\n        sourceMap = JSON.parse(sourceMap);\n      } catch (exception) {\n        return handleAsError('source-map error', 'cannot parse source-map string (from less-loader?)');\n      }\n    } // leverage adjust-sourcemap-loader's codecs to avoid having to make any assumptions about the sourcemap\n    //  historically this is a regular source of breakage\n\n\n    try {\n      absSourceMap = adjustSourceMap(loader, {\n        format: 'absolute'\n      }, sourceMap);\n    } catch (exception) {\n      return handleAsError('source-map error', exception.message);\n    } // prepare the adjusted sass source-map for later look-ups\n\n\n    sourceMapConsumer = new SourceMapConsumer(absSourceMap);\n  } else {\n    handleAsWarning('webpack misconfiguration', 'webpack or the upstream loader did not supply a source-map');\n  } // allow engine to throw at initialisation\n\n\n  let engine = null;\n\n  try {\n    engine = require('./lib/engine/postcss');\n  } catch (error) {\n    return handleAsError('error initialising', error);\n  } // process async\n\n\n  const callback = loader.async();\n  Promise.resolve(engine(loader.resourcePath, content, {\n    outputSourceMap: !!options.sourceMap,\n    absSourceMap: absSourceMap,\n    sourceMapConsumer: sourceMapConsumer,\n    removeCR: options.removeCR,\n    transformDeclaration: valueProcessor({\n      join: joinProper,\n      root: options.root,\n      directory: path.dirname(loader.resourcePath)\n    })\n  })).catch(onFailure).then(onSuccess);\n\n  function onFailure(error) {\n    callback(encodeError('error processing CSS', error));\n  }\n\n  function onSuccess(result) {\n    if (result) {\n      // complete with source-map\n      //  webpack4 and earlier: source-map sources are relative to the file being processed\n      //  webpack5: source-map sources are relative to the project root but without a leading slash\n      if (options.sourceMap) {\n        const finalMap = adjustSourceMap(loader, {\n          format: isWebpackGte5 ? 'projectRelative' : 'sourceRelative'\n        }, result.map);\n        callback(null, result.content, finalMap);\n      } // complete without source-map\n      else {\n        callback(null, result.content);\n      }\n    }\n  }\n  /**\n   * Trigger a node deprecation message for the given exception and return the original content.\n   * @param {string} code Deprecation code\n   * @param {string} message Deprecation message\n   * @returns {string} The original CSS content\n   */\n\n\n  function handleAsDeprecated(code, message) {\n    if (!options.silent) {\n      util.deprecate(() => undefined, message, code)();\n    }\n\n    return content;\n  }\n  /**\n   * Push a warning for the given exception and return the original content.\n   * @param {string} label Summary of the error\n   * @param {string|Error} [exception] Optional extended error details\n   * @returns {string} The original CSS content\n   */\n\n\n  function handleAsWarning(label, exception) {\n    if (!options.silent) {\n      loader.emitWarning(encodeError(label, exception));\n    }\n\n    return content;\n  }\n  /**\n   * Push a warning for the given exception and return the original content.\n   * @param {string} label Summary of the error\n   * @param {string|Error} [exception] Optional extended error details\n   * @returns {string} The original CSS content\n   */\n\n\n  function handleAsError(label, exception) {\n    loader.emitError(encodeError(label, exception));\n    return content;\n  }\n\n  function encodeError(label, exception) {\n    return new Error(['resolve-url-loader', ': ', [label].concat(typeof exception === 'string' && exception || Array.isArray(exception) && exception || exception instanceof Error && [exception.message, exception.stack.split('\\n')[1].trim()] || []).filter(Boolean).join('\\n  ')].join(''));\n  }\n}\n\nmodule.exports = Object.assign(resolveUrlLoader, joinFn);","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/resolve-url-loader/index.js"],"names":["os","require","path","fs","util","loaderUtils","SourceMapConsumer","adjustSourceMap","valueProcessor","joinFn","logToTestHarness","DEPRECATED_OPTIONS","engine","keepQuery","absolute","attempts","includeRoot","fail","resolveUrlLoader","content","sourceMap","loader","test","context","handleAsError","isWebpackGte5","getOptions","rawOptions","options","Object","assign","silent","removeCR","EOL","includes","root","debug","join","defaultJoin","process","env","RESOLVE_URL_LOADER_TEST_HARNESS","deprecatedItems","entries","filter","key","length","forEach","value","handleAsDeprecated","joinProper","isValid","isAbsolute","existsSync","statSync","isDirectory","handleAsWarning","cacheable","absSourceMap","sourceMapConsumer","JSON","parse","exception","format","message","error","callback","async","Promise","resolve","resourcePath","outputSourceMap","transformDeclaration","directory","dirname","catch","onFailure","then","onSuccess","encodeError","result","finalMap","map","code","deprecate","undefined","label","emitWarning","emitError","Error","concat","Array","isArray","stack","split","trim","Boolean","module","exports"],"mappings":"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","sourcesContent":["/*\n * MIT License http://opensource.org/licenses/MIT\n * Author: Ben Holloway @bholloway\n */\n'use strict';\n\nconst os                = require('os');\nconst path              = require('path');\nconst fs                = require('fs');\nconst util              = require('util');\nconst loaderUtils       = require('loader-utils');\nconst SourceMapConsumer = require('source-map').SourceMapConsumer;\n\nconst adjustSourceMap = require('adjust-sourcemap-loader/lib/process');\n\nconst valueProcessor  = require('./lib/value-processor');\nconst joinFn           = require('./lib/join-function');\nconst logToTestHarness = require('./lib/log-to-test-harness');\n\nconst DEPRECATED_OPTIONS = {\n  engine: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_ENGINE',\n    '\"engine\" option has been removed, postcss is the only parser used'\n  ],\n  keepQuery: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_KEEP_QUERY',\n    '\"keepQuery\" option has been removed, the query and/or hash are now always retained'\n  ],\n  absolute: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_ABSOLUTE',\n    '\"absolute\" option has been removed, consider the \"join\" option if absolute paths must be processed'\n  ],\n  attempts: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_ATTEMPTS',\n    '\"attempts\" option has been removed, consider the \"join\" option if search is needed'\n  ],\n  includeRoot: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_INCLUDE_ROOT',\n    '\"includeRoot\" option has been removed, consider the \"join\" option if search is needed'\n  ],\n  fail: [\n    'DEP_RESOLVE_URL_LOADER_OPTION_FAIL',\n    '\"fail\" option has been removed'\n  ]\n};\n\n/**\n * A webpack loader that resolves absolute url() paths relative to their original source file.\n * Requires source-maps to do any meaningful work.\n * @param {string} content Css content\n * @param {object} sourceMap The source-map\n * @returns {string|String}\n */\nfunction resolveUrlLoader(content, sourceMap) {\n  /* jshint validthis:true */\n\n  // details of the file being processed\n  const loader = this;\n\n  // a relative loader.context is a problem\n  if (/^\\./.test(loader.context)) {\n    return handleAsError(\n      'webpack misconfiguration',\n      'loader.context is relative, expected absolute'\n    );\n  }\n\n  // infer webpack version from new loader features\n  const isWebpackGte5 = 'getOptions' in loader && typeof loader.getOptions === 'function';\n\n  // use loader.getOptions where available otherwise use loaderUtils\n  const rawOptions = isWebpackGte5 ? loader.getOptions() : loaderUtils.getOptions(loader);\n  const options = Object.assign(\n        {\n          sourceMap: loader.sourceMap,\n          silent   : false,\n          removeCR : os.EOL.includes('\\r'),\n          root     : false,\n          debug    : false,\n          join     : joinFn.defaultJoin\n        },\n        rawOptions,\n      );\n\n  // maybe log options for the test harness\n  if (process.env.RESOLVE_URL_LOADER_TEST_HARNESS) {\n    logToTestHarness(\n      process[process.env.RESOLVE_URL_LOADER_TEST_HARNESS],\n      options\n    );\n  }\n\n  // deprecated options\n  const deprecatedItems = Object.entries(DEPRECATED_OPTIONS).filter(([key]) => key in rawOptions);\n  if (deprecatedItems.length) {\n    deprecatedItems.forEach(([, value]) => handleAsDeprecated(...value));\n  }\n\n  // validate join option\n  if (typeof options.join !== 'function') {\n    return handleAsError(\n      'loader misconfiguration',\n      '\"join\" option must be a Function'\n    );\n  } else if (options.join.length !== 2) {\n    return handleAsError(\n      'loader misconfiguration',\n      '\"join\" Function must take exactly 2 arguments (options, loader)'\n    );\n  }\n\n  // validate the result of calling the join option\n  const joinProper = options.join(options, loader);\n  if (typeof joinProper !== 'function') {\n    return handleAsError(\n      'loader misconfiguration',\n      '\"join\" option must itself return a Function when it is called'\n    );\n  } else if (joinProper.length !== 1) {\n    return handleAsError(\n      'loader misconfiguration',\n      '\"join\" Function must create a function that takes exactly 1 arguments (item)'\n    );\n  }\n\n  // validate root option\n  if (typeof options.root === 'string') {\n    const isValid = (options.root === '') ||\n      (path.isAbsolute(options.root) && fs.existsSync(options.root) && fs.statSync(options.root).isDirectory());\n\n    if (!isValid) {\n      return handleAsError(\n        'loader misconfiguration',\n        '\"root\" option must be an empty string or an absolute path to an existing directory'\n      );\n    }\n  } else if (options.root !== false) {\n    handleAsWarning(\n      'loader misconfiguration',\n      '\"root\" option must be string where used or false where unused'\n    );\n  }\n\n  // loader result is cacheable\n  loader.cacheable();\n\n  // incoming source-map\n  let absSourceMap = null;\n  let sourceMapConsumer = null;\n  if (sourceMap) {\n\n    // support non-standard string encoded source-map (per less-loader)\n    if (typeof sourceMap === 'string') {\n      try {\n        sourceMap = JSON.parse(sourceMap);\n      }\n      catch (exception) {\n        return handleAsError(\n          'source-map error',\n          'cannot parse source-map string (from less-loader?)'\n        );\n      }\n    }\n\n    // leverage adjust-sourcemap-loader's codecs to avoid having to make any assumptions about the sourcemap\n    //  historically this is a regular source of breakage\n    try {\n      absSourceMap = adjustSourceMap(loader, {format: 'absolute'}, sourceMap);\n    }\n    catch (exception) {\n      return handleAsError(\n        'source-map error',\n        exception.message\n      );\n    }\n\n    // prepare the adjusted sass source-map for later look-ups\n    sourceMapConsumer = new SourceMapConsumer(absSourceMap);\n  } else {\n    handleAsWarning(\n      'webpack misconfiguration',\n      'webpack or the upstream loader did not supply a source-map'\n    );\n  }\n\n  // allow engine to throw at initialisation\n  let engine = null;\n  try {\n    engine = require('./lib/engine/postcss');\n  } catch (error) {\n    return handleAsError(\n      'error initialising',\n      error\n    );\n  }\n\n  // process async\n  const callback = loader.async();\n  Promise\n    .resolve(engine(loader.resourcePath, content, {\n      outputSourceMap     : !!options.sourceMap,\n      absSourceMap        : absSourceMap,\n      sourceMapConsumer   : sourceMapConsumer,\n      removeCR            : options.removeCR,\n      transformDeclaration: valueProcessor({\n        join     : joinProper,\n        root     : options.root,\n        directory: path.dirname(loader.resourcePath)\n      })\n    }))\n    .catch(onFailure)\n    .then(onSuccess);\n\n  function onFailure(error) {\n    callback(encodeError('error processing CSS', error));\n  }\n\n  function onSuccess(result) {\n    if (result) {\n      // complete with source-map\n      //  webpack4 and earlier: source-map sources are relative to the file being processed\n      //  webpack5: source-map sources are relative to the project root but without a leading slash\n      if (options.sourceMap) {\n        const finalMap = adjustSourceMap(loader, {\n          format: isWebpackGte5 ? 'projectRelative' : 'sourceRelative'\n        }, result.map);\n        callback(null, result.content, finalMap);\n      }\n      // complete without source-map\n      else {\n        callback(null, result.content);\n      }\n    }\n  }\n\n  /**\n   * Trigger a node deprecation message for the given exception and return the original content.\n   * @param {string} code Deprecation code\n   * @param {string} message Deprecation message\n   * @returns {string} The original CSS content\n   */\n  function handleAsDeprecated(code, message) {\n    if (!options.silent) {\n      util.deprecate(() => undefined, message, code)();\n    }\n    return content;\n  }\n\n  /**\n   * Push a warning for the given exception and return the original content.\n   * @param {string} label Summary of the error\n   * @param {string|Error} [exception] Optional extended error details\n   * @returns {string} The original CSS content\n   */\n  function handleAsWarning(label, exception) {\n    if (!options.silent) {\n      loader.emitWarning(encodeError(label, exception));\n    }\n    return content;\n  }\n\n  /**\n   * Push a warning for the given exception and return the original content.\n   * @param {string} label Summary of the error\n   * @param {string|Error} [exception] Optional extended error details\n   * @returns {string} The original CSS content\n   */\n  function handleAsError(label, exception) {\n    loader.emitError(encodeError(label, exception));\n    return content;\n  }\n\n  function encodeError(label, exception) {\n    return new Error(\n      [\n        'resolve-url-loader',\n        ': ',\n        [label]\n          .concat(\n            (typeof exception === 'string') && exception ||\n            Array.isArray(exception) && exception ||\n            (exception instanceof Error) && [exception.message, exception.stack.split('\\n')[1].trim()] ||\n            []\n          )\n          .filter(Boolean)\n          .join('\\n  ')\n      ].join('')\n    );\n  }\n}\n\nmodule.exports = Object.assign(resolveUrlLoader, joinFn);\n"]},"metadata":{},"sourceType":"script"}