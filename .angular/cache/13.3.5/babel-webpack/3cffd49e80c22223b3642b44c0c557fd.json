{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = readFile;\nexports.readFileSync = readFileSync;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction fsReadFileAsync(_x, _x2) {\n  return _fsReadFileAsync.apply(this, arguments);\n}\n\nfunction _fsReadFileAsync() {\n  _fsReadFileAsync = _asyncToGenerator(function* (pathname, encoding) {\n    return new Promise((resolve, reject) => {\n      _fs.default.readFile(pathname, encoding, (error, contents) => {\n        if (error) {\n          reject(error);\n          return;\n        }\n\n        resolve(contents);\n      });\n    });\n  });\n  return _fsReadFileAsync.apply(this, arguments);\n}\n\nfunction readFile(_x3) {\n  return _readFile.apply(this, arguments);\n}\n\nfunction _readFile() {\n  _readFile = _asyncToGenerator(function* (filepath, options = {}) {\n    const throwNotFound = options.throwNotFound === true;\n\n    try {\n      const content = yield fsReadFileAsync(filepath, 'utf8');\n      return content;\n    } catch (error) {\n      if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n        return null;\n      }\n\n      throw error;\n    }\n  });\n  return _readFile.apply(this, arguments);\n}\n\nfunction readFileSync(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = _fs.default.readFileSync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n\n    throw error;\n  }\n}","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/cosmiconfig/dist/readFile.js"],"names":["Object","defineProperty","exports","value","readFile","readFileSync","_fs","_interopRequireDefault","require","obj","__esModule","default","fsReadFileAsync","pathname","encoding","Promise","resolve","reject","error","contents","filepath","options","throwNotFound","content","code"],"mappings":"AAAA;;;;AAEAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,QAAR,GAAmBA,QAAnB;AACAF,OAAO,CAACG,YAAR,GAAuBA,YAAvB;;AAEA,IAAIC,GAAG,GAAGC,sBAAsB,CAACC,OAAO,CAAC,IAAD,CAAR,CAAhC;;AAEA,SAASD,sBAAT,CAAgCE,GAAhC,EAAqC;AAAE,SAAOA,GAAG,IAAIA,GAAG,CAACC,UAAX,GAAwBD,GAAxB,GAA8B;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAArC;AAAwD;;SAEhFG,e;;;;;uCAAf,WAA+BC,QAA/B,EAAyCC,QAAzC,EAAmD;AACjD,WAAO,IAAIC,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACtCX,MAAAA,GAAG,CAACK,OAAJ,CAAYP,QAAZ,CAAqBS,QAArB,EAA+BC,QAA/B,EAAyC,CAACI,KAAD,EAAQC,QAAR,KAAqB;AAC5D,YAAID,KAAJ,EAAW;AACTD,UAAAA,MAAM,CAACC,KAAD,CAAN;AACA;AACD;;AAEDF,QAAAA,OAAO,CAACG,QAAD,CAAP;AACD,OAPD;AAQD,KATM,CAAP;AAUD,G;;;;SAEcf,Q;;;;;gCAAf,WAAwBgB,QAAxB,EAAkCC,OAAO,GAAG,EAA5C,EAAgD;AAC9C,UAAMC,aAAa,GAAGD,OAAO,CAACC,aAAR,KAA0B,IAAhD;;AAEA,QAAI;AACF,YAAMC,OAAO,SAASX,eAAe,CAACQ,QAAD,EAAW,MAAX,CAArC;AACA,aAAOG,OAAP;AACD,KAHD,CAGE,OAAOL,KAAP,EAAc;AACd,UAAII,aAAa,KAAK,KAAlB,KAA4BJ,KAAK,CAACM,IAAN,KAAe,QAAf,IAA2BN,KAAK,CAACM,IAAN,KAAe,QAAtE,CAAJ,EAAqF;AACnF,eAAO,IAAP;AACD;;AAED,YAAMN,KAAN;AACD;AACF,G;;;;AAED,SAASb,YAAT,CAAsBe,QAAtB,EAAgCC,OAAO,GAAG,EAA1C,EAA8C;AAC5C,QAAMC,aAAa,GAAGD,OAAO,CAACC,aAAR,KAA0B,IAAhD;;AAEA,MAAI;AACF,UAAMC,OAAO,GAAGjB,GAAG,CAACK,OAAJ,CAAYN,YAAZ,CAAyBe,QAAzB,EAAmC,MAAnC,CAAhB;;AAEA,WAAOG,OAAP;AACD,GAJD,CAIE,OAAOL,KAAP,EAAc;AACd,QAAII,aAAa,KAAK,KAAlB,KAA4BJ,KAAK,CAACM,IAAN,KAAe,QAAf,IAA2BN,KAAK,CAACM,IAAN,KAAe,QAAtE,CAAJ,EAAqF;AACnF,aAAO,IAAP;AACD;;AAED,UAAMN,KAAN;AACD;AACF","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.readFile = readFile;\nexports.readFileSync = readFileSync;\n\nvar _fs = _interopRequireDefault(require(\"fs\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function fsReadFileAsync(pathname, encoding) {\n  return new Promise((resolve, reject) => {\n    _fs.default.readFile(pathname, encoding, (error, contents) => {\n      if (error) {\n        reject(error);\n        return;\n      }\n\n      resolve(contents);\n    });\n  });\n}\n\nasync function readFile(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = await fsReadFileAsync(filepath, 'utf8');\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n\nfunction readFileSync(filepath, options = {}) {\n  const throwNotFound = options.throwNotFound === true;\n\n  try {\n    const content = _fs.default.readFileSync(filepath, 'utf8');\n\n    return content;\n  } catch (error) {\n    if (throwNotFound === false && (error.code === 'ENOENT' || error.code === 'EISDIR')) {\n      return null;\n    }\n\n    throw error;\n  }\n}\n"]},"metadata":{},"sourceType":"script"}