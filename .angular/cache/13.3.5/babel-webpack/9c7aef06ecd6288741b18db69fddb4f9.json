{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nvar _SassError = _interopRequireDefault(require(\"./SassError\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n/**\n * The sass-loader makes node-sass and dart-sass available to webpack modules.\n *\n * @this {object}\n * @param {string} content\n */\n\n\nfunction loader(_x) {\n  return _loader.apply(this, arguments);\n}\n\nfunction _loader() {\n  _loader = _asyncToGenerator(function* (content) {\n    const options = this.getOptions(_options.default);\n    const callback = this.async();\n    const implementation = (0, _utils.getSassImplementation)(this, options.implementation);\n\n    if (!implementation) {\n      callback();\n      return;\n    }\n\n    const useSourceMap = typeof options.sourceMap === \"boolean\" ? options.sourceMap : this.sourceMap;\n    const sassOptions = yield (0, _utils.getSassOptions)(this, options, content, implementation, useSourceMap);\n    const shouldUseWebpackImporter = typeof options.webpackImporter === \"boolean\" ? options.webpackImporter : true;\n\n    if (shouldUseWebpackImporter) {\n      const {\n        includePaths\n      } = sassOptions;\n      sassOptions.importer.push((0, _utils.getWebpackImporter)(this, implementation, includePaths));\n    }\n\n    const render = (0, _utils.getRenderFunctionFromSassImplementation)(implementation);\n    render(sassOptions, (error, result) => {\n      if (error) {\n        // There are situations when the `file` property do not exist\n        if (error.file) {\n          // `node-sass` returns POSIX paths\n          this.addDependency(_path.default.normalize(error.file));\n        }\n\n        callback(new _SassError.default(error));\n        return;\n      }\n\n      let map = result.map ? JSON.parse(result.map) : null; // Modify source paths only for webpack, otherwise we do nothing\n\n      if (map && useSourceMap) {\n        map = (0, _utils.normalizeSourceMap)(map, this.rootContext);\n      }\n\n      result.stats.includedFiles.forEach(includedFile => {\n        const normalizedIncludedFile = _path.default.normalize(includedFile); // Custom `importer` can return only `contents` so includedFile will be relative\n\n\n        if (_path.default.isAbsolute(normalizedIncludedFile)) {\n          this.addDependency(normalizedIncludedFile);\n        }\n      });\n      callback(null, result.css.toString(), map);\n    });\n  });\n  return _loader.apply(this, arguments);\n}\n\nvar _default = loader;\nexports.default = _default;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/sass-loader/dist/index.js"],"names":["Object","defineProperty","exports","value","default","_path","_interopRequireDefault","require","_options","_utils","_SassError","obj","__esModule","loader","content","options","getOptions","callback","async","implementation","getSassImplementation","useSourceMap","sourceMap","sassOptions","getSassOptions","shouldUseWebpackImporter","webpackImporter","includePaths","importer","push","getWebpackImporter","render","getRenderFunctionFromSassImplementation","error","result","file","addDependency","normalize","map","JSON","parse","normalizeSourceMap","rootContext","stats","includedFiles","forEach","includedFile","normalizedIncludedFile","isAbsolute","css","toString","_default"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nvar _SassError = _interopRequireDefault(require(\"./SassError\"));\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/**\n * The sass-loader makes node-sass and dart-sass available to webpack modules.\n *\n * @this {object}\n * @param {string} content\n */\nasync function loader(content) {\n  const options = this.getOptions(_options.default);\n  const callback = this.async();\n  const implementation = (0, _utils.getSassImplementation)(this, options.implementation);\n\n  if (!implementation) {\n    callback();\n    return;\n  }\n\n  const useSourceMap = typeof options.sourceMap === \"boolean\" ? options.sourceMap : this.sourceMap;\n  const sassOptions = await (0, _utils.getSassOptions)(this, options, content, implementation, useSourceMap);\n  const shouldUseWebpackImporter = typeof options.webpackImporter === \"boolean\" ? options.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    const {\n      includePaths\n    } = sassOptions;\n    sassOptions.importer.push((0, _utils.getWebpackImporter)(this, implementation, includePaths));\n  }\n\n  const render = (0, _utils.getRenderFunctionFromSassImplementation)(implementation);\n  render(sassOptions, (error, result) => {\n    if (error) {\n      // There are situations when the `file` property do not exist\n      if (error.file) {\n        // `node-sass` returns POSIX paths\n        this.addDependency(_path.default.normalize(error.file));\n      }\n\n      callback(new _SassError.default(error));\n      return;\n    }\n\n    let map = result.map ? JSON.parse(result.map) : null; // Modify source paths only for webpack, otherwise we do nothing\n\n    if (map && useSourceMap) {\n      map = (0, _utils.normalizeSourceMap)(map, this.rootContext);\n    }\n\n    result.stats.includedFiles.forEach(includedFile => {\n      const normalizedIncludedFile = _path.default.normalize(includedFile); // Custom `importer` can return only `contents` so includedFile will be relative\n\n\n      if (_path.default.isAbsolute(normalizedIncludedFile)) {\n        this.addDependency(normalizedIncludedFile);\n      }\n    });\n    callback(null, result.css.toString(), map);\n  });\n}\n\nvar _default = loader;\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}