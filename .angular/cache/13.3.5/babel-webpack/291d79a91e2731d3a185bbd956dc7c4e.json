{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar _asyncIterator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncIterator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.augmentAppWithServiceWorker = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst crypto = __importStar(require(\"crypto\"));\n\nconst fs_1 = require(\"fs\");\n\nconst path = __importStar(require(\"path\"));\n\nconst stream_1 = require(\"stream\");\n\nconst load_esm_1 = require(\"./load-esm\");\n\nclass CliFilesystem {\n  constructor(base) {\n    this.base = base;\n  }\n\n  list(dir) {\n    return this._recursiveList(this._resolve(dir), []);\n  }\n\n  read(file) {\n    return fs_1.promises.readFile(this._resolve(file), 'utf-8');\n  }\n\n  hash(file) {\n    return new Promise((resolve, reject) => {\n      const hash = crypto.createHash('sha1').setEncoding('hex');\n      (0, stream_1.pipeline)((0, fs_1.createReadStream)(this._resolve(file)), hash, error => error ? reject(error) : resolve(hash.read()));\n    });\n  }\n\n  write(file, content) {\n    return fs_1.promises.writeFile(this._resolve(file), content);\n  }\n\n  _resolve(file) {\n    return path.join(this.base, file);\n  }\n\n  _recursiveList(dir, items) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      const subdirectories = [];\n      var _iteratorAbruptCompletion = false;\n      var _didIteratorError = false;\n\n      var _iteratorError;\n\n      try {\n        for (var _iterator = _asyncIterator(yield fs_1.promises.opendir(dir)), _step; _iteratorAbruptCompletion = !(_step = yield _iterator.next()).done; _iteratorAbruptCompletion = false) {\n          const entry = _step.value;\n\n          if (entry.isFile()) {\n            // Uses posix paths since the service worker expects URLs\n            items.push('/' + path.relative(_this.base, path.join(dir, entry.name)).replace(/\\\\/g, '/'));\n          } else if (entry.isDirectory()) {\n            subdirectories.push(path.join(dir, entry.name));\n          }\n        }\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (_iteratorAbruptCompletion && _iterator.return != null) {\n            yield _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      for (const subdirectory of subdirectories) {\n        yield _this._recursiveList(subdirectory, items);\n      }\n\n      return items;\n    })();\n  }\n\n}\n\nfunction augmentAppWithServiceWorker(_x, _x2, _x3, _x4, _x5) {\n  return _augmentAppWithServiceWorker.apply(this, arguments);\n}\n\nfunction _augmentAppWithServiceWorker() {\n  _augmentAppWithServiceWorker = _asyncToGenerator(function* (appRoot, workspaceRoot, outputPath, baseHref, ngswConfigPath) {\n    const distPath = (0, core_1.getSystemPath)((0, core_1.normalize)(outputPath)); // Determine the configuration file path\n\n    const configPath = ngswConfigPath ? path.join(workspaceRoot, (0, core_1.getSystemPath)((0, core_1.normalize)(ngswConfigPath))) : path.join((0, core_1.getSystemPath)(appRoot), 'ngsw-config.json'); // Read the configuration file\n\n    let config;\n\n    try {\n      const configurationData = yield fs_1.promises.readFile(configPath, 'utf-8');\n      config = JSON.parse(configurationData);\n    } catch (error) {\n      if (error.code === 'ENOENT') {\n        throw new Error('Error: Expected to find an ngsw-config.json configuration file' + ` in the ${(0, core_1.getSystemPath)(appRoot)} folder. Either provide one or` + ' disable Service Worker in the angular.json configuration file.');\n      } else {\n        throw error;\n      }\n    } // Load ESM `@angular/service-worker/config` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n\n\n    const GeneratorConstructor = (yield (0, load_esm_1.loadEsmModule)('@angular/service-worker/config')).Generator; // Generate the manifest\n\n    const generator = new GeneratorConstructor(new CliFilesystem(distPath), baseHref);\n    const output = yield generator.process(config); // Write the manifest\n\n    const manifest = JSON.stringify(output, null, 2);\n    yield fs_1.promises.writeFile(path.join(distPath, 'ngsw.json'), manifest); // Find the service worker package\n\n    const workerPath = require.resolve('@angular/service-worker/ngsw-worker.js'); // Write the worker code\n\n\n    yield fs_1.promises.copyFile(workerPath, path.join(distPath, 'ngsw-worker.js'), fs_1.constants.COPYFILE_FICLONE); // If present, write the safety worker code\n\n    const safetyPath = path.join(path.dirname(workerPath), 'safety-worker.js');\n\n    try {\n      yield fs_1.promises.copyFile(safetyPath, path.join(distPath, 'worker-basic.min.js'), fs_1.constants.COPYFILE_FICLONE);\n      yield fs_1.promises.copyFile(safetyPath, path.join(distPath, 'safety-worker.js'), fs_1.constants.COPYFILE_FICLONE);\n    } catch (error) {\n      if (error.code !== 'ENOENT') {\n        throw error;\n      }\n    }\n  });\n  return _augmentAppWithServiceWorker.apply(this, arguments);\n}\n\nexports.augmentAppWithServiceWorker = augmentAppWithServiceWorker;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/@angular-devkit/build-angular/src/utils/service-worker.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","augmentAppWithServiceWorker","core_1","require","crypto","fs_1","path","stream_1","load_esm_1","CliFilesystem","constructor","base","list","dir","_recursiveList","_resolve","read","file","promises","readFile","hash","Promise","resolve","reject","createHash","setEncoding","pipeline","createReadStream","error","write","content","writeFile","join","items","subdirectories","opendir","entry","isFile","push","relative","name","replace","isDirectory","subdirectory","appRoot","workspaceRoot","outputPath","baseHref","ngswConfigPath","distPath","getSystemPath","normalize","configPath","config","configurationData","JSON","parse","code","Error","GeneratorConstructor","loadEsmModule","Generator","generator","output","process","manifest","stringify","workerPath","copyFile","constants","COPYFILE_FICLONE","safetyPath","dirname"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;AACA,IAAIA,eAAe,GAAI,QAAQ,KAAKA,eAAd,KAAmCC,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AAC5F,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtB,MAAIG,IAAI,GAAGP,MAAM,CAACQ,wBAAP,CAAgCL,CAAhC,EAAmCC,CAAnC,CAAX;;AACA,MAAI,CAACG,IAAD,KAAU,SAASA,IAAT,GAAgB,CAACJ,CAAC,CAACM,UAAnB,GAAgCF,IAAI,CAACG,QAAL,IAAiBH,IAAI,CAACI,YAAhE,CAAJ,EAAmF;AACjFJ,IAAAA,IAAI,GAAG;AAAEK,MAAAA,UAAU,EAAE,IAAd;AAAoBC,MAAAA,GAAG,EAAE,YAAW;AAAE,eAAOV,CAAC,CAACC,CAAD,CAAR;AAAc;AAApD,KAAP;AACD;;AACDJ,EAAAA,MAAM,CAACc,cAAP,CAAsBZ,CAAtB,EAAyBG,EAAzB,EAA6BE,IAA7B;AACH,CAPwD,GAOnD,UAASL,CAAT,EAAYC,CAAZ,EAAeC,CAAf,EAAkBC,EAAlB,EAAsB;AACxB,MAAIA,EAAE,KAAKC,SAAX,EAAsBD,EAAE,GAAGD,CAAL;AACtBF,EAAAA,CAAC,CAACG,EAAD,CAAD,GAAQF,CAAC,CAACC,CAAD,CAAT;AACH,CAVqB,CAAtB;;AAWA,IAAIW,kBAAkB,GAAI,QAAQ,KAAKA,kBAAd,KAAsCf,MAAM,CAACC,MAAP,GAAiB,UAASC,CAAT,EAAYc,CAAZ,EAAe;AAC3FhB,EAAAA,MAAM,CAACc,cAAP,CAAsBZ,CAAtB,EAAyB,SAAzB,EAAoC;AAAEU,IAAAA,UAAU,EAAE,IAAd;AAAoBK,IAAAA,KAAK,EAAED;AAA3B,GAApC;AACH,CAF8D,GAE1D,UAASd,CAAT,EAAYc,CAAZ,EAAe;AAChBd,EAAAA,CAAC,CAAC,SAAD,CAAD,GAAec,CAAf;AACH,CAJwB,CAAzB;;AAKA,IAAIE,YAAY,GAAI,QAAQ,KAAKA,YAAd,IAA+B,UAAUC,GAAV,EAAe;AAC7D,MAAIA,GAAG,IAAIA,GAAG,CAACV,UAAf,EAA2B,OAAOU,GAAP;AAC3B,MAAIC,MAAM,GAAG,EAAb;AACA,MAAID,GAAG,IAAI,IAAX,EAAiB,KAAK,IAAIf,CAAT,IAAce,GAAd,EAAmB,IAAIf,CAAC,KAAK,SAAN,IAAmBJ,MAAM,CAACqB,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,GAArC,EAA0Cf,CAA1C,CAAvB,EAAqEL,eAAe,CAACqB,MAAD,EAASD,GAAT,EAAcf,CAAd,CAAf;;AACzGW,EAAAA,kBAAkB,CAACK,MAAD,EAASD,GAAT,CAAlB;;AACA,SAAOC,MAAP;AACH,CAND;;AAOApB,MAAM,CAACc,cAAP,CAAsBU,OAAtB,EAA+B,YAA/B,EAA6C;AAAEP,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAO,OAAO,CAACC,2BAAR,GAAsC,KAAK,CAA3C;;AACA,MAAMC,MAAM,GAAGC,OAAO,CAAC,sBAAD,CAAtB;;AACA,MAAMC,MAAM,GAAGV,YAAY,CAACS,OAAO,CAAC,QAAD,CAAR,CAA3B;;AACA,MAAME,IAAI,GAAGF,OAAO,CAAC,IAAD,CAApB;;AACA,MAAMG,IAAI,GAAGZ,YAAY,CAACS,OAAO,CAAC,MAAD,CAAR,CAAzB;;AACA,MAAMI,QAAQ,GAAGJ,OAAO,CAAC,QAAD,CAAxB;;AACA,MAAMK,UAAU,GAAGL,OAAO,CAAC,YAAD,CAA1B;;AACA,MAAMM,aAAN,CAAoB;AAChBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACH;;AACDC,EAAAA,IAAI,CAACC,GAAD,EAAM;AACN,WAAO,KAAKC,cAAL,CAAoB,KAAKC,QAAL,CAAcF,GAAd,CAApB,EAAwC,EAAxC,CAAP;AACH;;AACDG,EAAAA,IAAI,CAACC,IAAD,EAAO;AACP,WAAOZ,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuB,KAAKJ,QAAL,CAAcE,IAAd,CAAvB,EAA4C,OAA5C,CAAP;AACH;;AACDG,EAAAA,IAAI,CAACH,IAAD,EAAO;AACP,WAAO,IAAII,OAAJ,CAAY,CAACC,OAAD,EAAUC,MAAV,KAAqB;AACpC,YAAMH,IAAI,GAAGhB,MAAM,CAACoB,UAAP,CAAkB,MAAlB,EAA0BC,WAA1B,CAAsC,KAAtC,CAAb;AACA,OAAC,GAAGlB,QAAQ,CAACmB,QAAb,EAAuB,CAAC,GAAGrB,IAAI,CAACsB,gBAAT,EAA2B,KAAKZ,QAAL,CAAcE,IAAd,CAA3B,CAAvB,EAAwEG,IAAxE,EAA+EQ,KAAD,IAAWA,KAAK,GAAGL,MAAM,CAACK,KAAD,CAAT,GAAmBN,OAAO,CAACF,IAAI,CAACJ,IAAL,EAAD,CAAxH;AACH,KAHM,CAAP;AAIH;;AACDa,EAAAA,KAAK,CAACZ,IAAD,EAAOa,OAAP,EAAgB;AACjB,WAAOzB,IAAI,CAACa,QAAL,CAAca,SAAd,CAAwB,KAAKhB,QAAL,CAAcE,IAAd,CAAxB,EAA6Ca,OAA7C,CAAP;AACH;;AACDf,EAAAA,QAAQ,CAACE,IAAD,EAAO;AACX,WAAOX,IAAI,CAAC0B,IAAL,CAAU,KAAKrB,IAAf,EAAqBM,IAArB,CAAP;AACH;;AACKH,EAAAA,cAAc,CAACD,GAAD,EAAMoB,KAAN,EAAa;AAAA;;AAAA;AAC7B,YAAMC,cAAc,GAAG,EAAvB;AAD6B;AAAA;;AAAA;;AAAA;AAE7B,kDAAgC7B,IAAI,CAACa,QAAL,CAAciB,OAAd,CAAsBtB,GAAtB,CAAhC,iHAA4D;AAAA,gBAA3CuB,KAA2C;;AACxD,cAAIA,KAAK,CAACC,MAAN,EAAJ,EAAoB;AAChB;AACAJ,YAAAA,KAAK,CAACK,IAAN,CAAW,MAAMhC,IAAI,CAACiC,QAAL,CAAc,KAAI,CAAC5B,IAAnB,EAAyBL,IAAI,CAAC0B,IAAL,CAAUnB,GAAV,EAAeuB,KAAK,CAACI,IAArB,CAAzB,EAAqDC,OAArD,CAA6D,KAA7D,EAAoE,GAApE,CAAjB;AACH,WAHD,MAIK,IAAIL,KAAK,CAACM,WAAN,EAAJ,EAAyB;AAC1BR,YAAAA,cAAc,CAACI,IAAf,CAAoBhC,IAAI,CAAC0B,IAAL,CAAUnB,GAAV,EAAeuB,KAAK,CAACI,IAArB,CAApB;AACH;AACJ;AAV4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAW7B,WAAK,MAAMG,YAAX,IAA2BT,cAA3B,EAA2C;AACvC,cAAM,KAAI,CAACpB,cAAL,CAAoB6B,YAApB,EAAkCV,KAAlC,CAAN;AACH;;AACD,aAAOA,KAAP;AAd6B;AAehC;;AArCe;;SAuCLhC,2B;;;;;mDAAf,WAA2C2C,OAA3C,EAAoDC,aAApD,EAAmEC,UAAnE,EAA+EC,QAA/E,EAAyFC,cAAzF,EAAyG;AACrG,UAAMC,QAAQ,GAAG,CAAC,GAAG/C,MAAM,CAACgD,aAAX,EAA0B,CAAC,GAAGhD,MAAM,CAACiD,SAAX,EAAsBL,UAAtB,CAA1B,CAAjB,CADqG,CAErG;;AACA,UAAMM,UAAU,GAAGJ,cAAc,GAC3B1C,IAAI,CAAC0B,IAAL,CAAUa,aAAV,EAAyB,CAAC,GAAG3C,MAAM,CAACgD,aAAX,EAA0B,CAAC,GAAGhD,MAAM,CAACiD,SAAX,EAAsBH,cAAtB,CAA1B,CAAzB,CAD2B,GAE3B1C,IAAI,CAAC0B,IAAL,CAAU,CAAC,GAAG9B,MAAM,CAACgD,aAAX,EAA0BN,OAA1B,CAAV,EAA8C,kBAA9C,CAFN,CAHqG,CAMrG;;AACA,QAAIS,MAAJ;;AACA,QAAI;AACA,YAAMC,iBAAiB,SAASjD,IAAI,CAACa,QAAL,CAAcC,QAAd,CAAuBiC,UAAvB,EAAmC,OAAnC,CAAhC;AACAC,MAAAA,MAAM,GAAGE,IAAI,CAACC,KAAL,CAAWF,iBAAX,CAAT;AACH,KAHD,CAIA,OAAO1B,KAAP,EAAc;AACV,UAAIA,KAAK,CAAC6B,IAAN,KAAe,QAAnB,EAA6B;AACzB,cAAM,IAAIC,KAAJ,CAAU,mEACX,WAAU,CAAC,GAAGxD,MAAM,CAACgD,aAAX,EAA0BN,OAA1B,CAAmC,gCADlC,GAEZ,iEAFE,CAAN;AAGH,OAJD,MAKK;AACD,cAAMhB,KAAN;AACH;AACJ,KArBoG,CAsBrG;AACA;AACA;;;AACA,UAAM+B,oBAAoB,GAAG,OAAO,CAAC,GAAGnD,UAAU,CAACoD,aAAf,EAA8B,gCAA9B,CAAP,EAAwEC,SAArG,CAzBqG,CA0BrG;;AACA,UAAMC,SAAS,GAAG,IAAIH,oBAAJ,CAAyB,IAAIlD,aAAJ,CAAkBwC,QAAlB,CAAzB,EAAsDF,QAAtD,CAAlB;AACA,UAAMgB,MAAM,SAASD,SAAS,CAACE,OAAV,CAAkBX,MAAlB,CAArB,CA5BqG,CA6BrG;;AACA,UAAMY,QAAQ,GAAGV,IAAI,CAACW,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAjB;AACA,UAAM1D,IAAI,CAACa,QAAL,CAAca,SAAd,CAAwBzB,IAAI,CAAC0B,IAAL,CAAUiB,QAAV,EAAoB,WAApB,CAAxB,EAA0DgB,QAA1D,CAAN,CA/BqG,CAgCrG;;AACA,UAAME,UAAU,GAAGhE,OAAO,CAACmB,OAAR,CAAgB,wCAAhB,CAAnB,CAjCqG,CAkCrG;;;AACA,UAAMjB,IAAI,CAACa,QAAL,CAAckD,QAAd,CAAuBD,UAAvB,EAAmC7D,IAAI,CAAC0B,IAAL,CAAUiB,QAAV,EAAoB,gBAApB,CAAnC,EAA0E5C,IAAI,CAACgE,SAAL,CAAeC,gBAAzF,CAAN,CAnCqG,CAoCrG;;AACA,UAAMC,UAAU,GAAGjE,IAAI,CAAC0B,IAAL,CAAU1B,IAAI,CAACkE,OAAL,CAAaL,UAAb,CAAV,EAAoC,kBAApC,CAAnB;;AACA,QAAI;AACA,YAAM9D,IAAI,CAACa,QAAL,CAAckD,QAAd,CAAuBG,UAAvB,EAAmCjE,IAAI,CAAC0B,IAAL,CAAUiB,QAAV,EAAoB,qBAApB,CAAnC,EAA+E5C,IAAI,CAACgE,SAAL,CAAeC,gBAA9F,CAAN;AACA,YAAMjE,IAAI,CAACa,QAAL,CAAckD,QAAd,CAAuBG,UAAvB,EAAmCjE,IAAI,CAAC0B,IAAL,CAAUiB,QAAV,EAAoB,kBAApB,CAAnC,EAA4E5C,IAAI,CAACgE,SAAL,CAAeC,gBAA3F,CAAN;AACH,KAHD,CAIA,OAAO1C,KAAP,EAAc;AACV,UAAIA,KAAK,CAAC6B,IAAN,KAAe,QAAnB,EAA6B;AACzB,cAAM7B,KAAN;AACH;AACJ;AACJ,G;;;;AACD5B,OAAO,CAACC,2BAAR,GAAsCA,2BAAtC","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.augmentAppWithServiceWorker = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst crypto = __importStar(require(\"crypto\"));\nconst fs_1 = require(\"fs\");\nconst path = __importStar(require(\"path\"));\nconst stream_1 = require(\"stream\");\nconst load_esm_1 = require(\"./load-esm\");\nclass CliFilesystem {\n    constructor(base) {\n        this.base = base;\n    }\n    list(dir) {\n        return this._recursiveList(this._resolve(dir), []);\n    }\n    read(file) {\n        return fs_1.promises.readFile(this._resolve(file), 'utf-8');\n    }\n    hash(file) {\n        return new Promise((resolve, reject) => {\n            const hash = crypto.createHash('sha1').setEncoding('hex');\n            (0, stream_1.pipeline)((0, fs_1.createReadStream)(this._resolve(file)), hash, (error) => error ? reject(error) : resolve(hash.read()));\n        });\n    }\n    write(file, content) {\n        return fs_1.promises.writeFile(this._resolve(file), content);\n    }\n    _resolve(file) {\n        return path.join(this.base, file);\n    }\n    async _recursiveList(dir, items) {\n        const subdirectories = [];\n        for await (const entry of await fs_1.promises.opendir(dir)) {\n            if (entry.isFile()) {\n                // Uses posix paths since the service worker expects URLs\n                items.push('/' + path.relative(this.base, path.join(dir, entry.name)).replace(/\\\\/g, '/'));\n            }\n            else if (entry.isDirectory()) {\n                subdirectories.push(path.join(dir, entry.name));\n            }\n        }\n        for (const subdirectory of subdirectories) {\n            await this._recursiveList(subdirectory, items);\n        }\n        return items;\n    }\n}\nasync function augmentAppWithServiceWorker(appRoot, workspaceRoot, outputPath, baseHref, ngswConfigPath) {\n    const distPath = (0, core_1.getSystemPath)((0, core_1.normalize)(outputPath));\n    // Determine the configuration file path\n    const configPath = ngswConfigPath\n        ? path.join(workspaceRoot, (0, core_1.getSystemPath)((0, core_1.normalize)(ngswConfigPath)))\n        : path.join((0, core_1.getSystemPath)(appRoot), 'ngsw-config.json');\n    // Read the configuration file\n    let config;\n    try {\n        const configurationData = await fs_1.promises.readFile(configPath, 'utf-8');\n        config = JSON.parse(configurationData);\n    }\n    catch (error) {\n        if (error.code === 'ENOENT') {\n            throw new Error('Error: Expected to find an ngsw-config.json configuration file' +\n                ` in the ${(0, core_1.getSystemPath)(appRoot)} folder. Either provide one or` +\n                ' disable Service Worker in the angular.json configuration file.');\n        }\n        else {\n            throw error;\n        }\n    }\n    // Load ESM `@angular/service-worker/config` using the TypeScript dynamic import workaround.\n    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n    // changed to a direct dynamic import.\n    const GeneratorConstructor = (await (0, load_esm_1.loadEsmModule)('@angular/service-worker/config')).Generator;\n    // Generate the manifest\n    const generator = new GeneratorConstructor(new CliFilesystem(distPath), baseHref);\n    const output = await generator.process(config);\n    // Write the manifest\n    const manifest = JSON.stringify(output, null, 2);\n    await fs_1.promises.writeFile(path.join(distPath, 'ngsw.json'), manifest);\n    // Find the service worker package\n    const workerPath = require.resolve('@angular/service-worker/ngsw-worker.js');\n    // Write the worker code\n    await fs_1.promises.copyFile(workerPath, path.join(distPath, 'ngsw-worker.js'), fs_1.constants.COPYFILE_FICLONE);\n    // If present, write the safety worker code\n    const safetyPath = path.join(path.dirname(workerPath), 'safety-worker.js');\n    try {\n        await fs_1.promises.copyFile(safetyPath, path.join(distPath, 'worker-basic.min.js'), fs_1.constants.COPYFILE_FICLONE);\n        await fs_1.promises.copyFile(safetyPath, path.join(distPath, 'safety-worker.js'), fs_1.constants.COPYFILE_FICLONE);\n    }\n    catch (error) {\n        if (error.code !== 'ENOENT') {\n            throw error;\n        }\n    }\n}\nexports.augmentAppWithServiceWorker = augmentAppWithServiceWorker;\n"]},"metadata":{},"sourceType":"script"}