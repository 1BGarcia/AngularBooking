{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.buildServePath = exports.getDevServerConfig = void 0;\n\nconst core_1 = require(\"@angular-devkit/core\");\n\nconst fs_1 = require(\"fs\");\n\nconst path_1 = require(\"path\");\n\nconst url_1 = require(\"url\");\n\nconst load_esm_1 = require(\"../../utils/load-esm\");\n\nconst webpack_browser_config_1 = require(\"../../utils/webpack-browser-config\");\n\nconst hmr_loader_1 = require(\"../plugins/hmr/hmr-loader\");\n\nfunction getDevServerConfig(_x) {\n  return _getDevServerConfig.apply(this, arguments);\n}\n\nfunction _getDevServerConfig() {\n  _getDevServerConfig = _asyncToGenerator(function* (wco) {\n    const {\n      buildOptions: {\n        host,\n        port,\n        index,\n        headers,\n        watch,\n        hmr,\n        main,\n        liveReload,\n        proxyConfig\n      },\n      logger,\n      root\n    } = wco;\n    const servePath = buildServePath(wco.buildOptions, logger);\n    const extraRules = [];\n\n    if (hmr) {\n      extraRules.push({\n        loader: hmr_loader_1.HmrLoader,\n        include: [main].map(p => (0, path_1.resolve)(wco.root, p))\n      });\n    }\n\n    const extraPlugins = [];\n\n    if (!watch) {\n      // There's no option to turn off file watching in webpack-dev-server, but\n      // we can override the file watcher instead.\n      extraPlugins.push({\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\n        apply: compiler => {\n          compiler.hooks.afterEnvironment.tap('angular-cli', () => {\n            // eslint-disable-next-line @typescript-eslint/no-empty-function\n            compiler.watchFileSystem = {\n              watch: () => {}\n            };\n          });\n        }\n      });\n    }\n\n    return {\n      plugins: extraPlugins,\n      module: {\n        rules: extraRules\n      },\n      devServer: {\n        host,\n        port,\n        headers: {\n          'Access-Control-Allow-Origin': '*',\n          ...headers\n        },\n        historyApiFallback: !!index && {\n          index: path_1.posix.join(servePath, (0, webpack_browser_config_1.getIndexOutputFile)(index)),\n          disableDotRule: true,\n          htmlAcceptHeaders: ['text/html', 'application/xhtml+xml'],\n          rewrites: [{\n            from: new RegExp(`^(?!${servePath})/.*`),\n            to: context => context.parsedUrl.href\n          }]\n        },\n        compress: false,\n        static: false,\n        server: getServerConfig(root, wco.buildOptions),\n        allowedHosts: getAllowedHostsConfig(wco.buildOptions),\n        devMiddleware: {\n          publicPath: servePath,\n          stats: false\n        },\n        liveReload,\n        hot: hmr && !liveReload ? 'only' : hmr,\n        proxy: yield addProxyConfig(root, proxyConfig),\n        ...getWebSocketSettings(wco.buildOptions, servePath)\n      }\n    };\n  });\n  return _getDevServerConfig.apply(this, arguments);\n}\n\nexports.getDevServerConfig = getDevServerConfig;\n/**\n * Resolve and build a URL _path_ that will be the root of the server. This resolved base href and\n * deploy URL from the browser options and returns a path from the root.\n */\n\nfunction buildServePath(options, logger) {\n  let servePath = options.servePath;\n\n  if (servePath === undefined) {\n    const defaultPath = findDefaultServePath(options.baseHref, options.deployUrl);\n\n    if (defaultPath == null) {\n      logger.warn(core_1.tags.oneLine`\n        Warning: --deploy-url and/or --base-href contain unsupported values for ng serve. Default\n        serve path of '/' used. Use --serve-path to override.\n      `);\n    }\n\n    servePath = defaultPath || '';\n  }\n\n  if (servePath.endsWith('/')) {\n    servePath = servePath.substr(0, servePath.length - 1);\n  }\n\n  if (!servePath.startsWith('/')) {\n    servePath = `/${servePath}`;\n  }\n\n  return servePath;\n}\n\nexports.buildServePath = buildServePath;\n/**\n * Private method to enhance a webpack config with SSL configuration.\n * @private\n */\n\nfunction getServerConfig(root, options) {\n  const {\n    ssl,\n    sslCert,\n    sslKey\n  } = options;\n\n  if (!ssl) {\n    return 'http';\n  }\n\n  return {\n    type: 'https',\n    options: sslCert && sslKey ? {\n      key: (0, path_1.resolve)(root, sslKey),\n      cert: (0, path_1.resolve)(root, sslCert)\n    } : undefined\n  };\n}\n/**\n * Private method to enhance a webpack config with Proxy configuration.\n * @private\n */\n\n\nfunction addProxyConfig(_x2, _x3) {\n  return _addProxyConfig.apply(this, arguments);\n}\n/**\n * Calculates the line and column for an error offset in the content of a JSON file.\n * @param location The offset error location from the beginning of the content.\n * @param content The full content of the file containing the error.\n * @returns An object containing the line and column\n */\n\n\nfunction _addProxyConfig() {\n  _addProxyConfig = _asyncToGenerator(function* (root, proxyConfig) {\n    if (!proxyConfig) {\n      return undefined;\n    }\n\n    const proxyPath = (0, path_1.resolve)(root, proxyConfig);\n\n    if (!(0, fs_1.existsSync)(proxyPath)) {\n      throw new Error(`Proxy configuration file ${proxyPath} does not exist.`);\n    }\n\n    switch ((0, path_1.extname)(proxyPath)) {\n      case '.json':\n        {\n          const content = yield fs_1.promises.readFile(proxyPath, 'utf-8');\n          const {\n            parse,\n            printParseErrorCode\n          } = yield Promise.resolve().then(() => __importStar(require('jsonc-parser')));\n          const parseErrors = [];\n          const proxyConfiguration = parse(content, parseErrors, {\n            allowTrailingComma: true\n          });\n\n          if (parseErrors.length > 0) {\n            let errorMessage = `Proxy configuration file ${proxyPath} contains parse errors:`;\n\n            for (const parseError of parseErrors) {\n              const {\n                line,\n                column\n              } = getJsonErrorLineColumn(parseError.offset, content);\n              errorMessage += `\\n[${line}, ${column}] ${printParseErrorCode(parseError.error)}`;\n            }\n\n            throw new Error(errorMessage);\n          }\n\n          return proxyConfiguration;\n        }\n\n      case '.mjs':\n        // Load the ESM configuration file using the TypeScript dynamic import workaround.\n        // Once TypeScript provides support for keeping the dynamic import this workaround can be\n        // changed to a direct dynamic import.\n        return (yield (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n\n      case '.cjs':\n        return require(proxyPath);\n\n      default:\n        // The file could be either CommonJS or ESM.\n        // CommonJS is tried first then ESM if loading fails.\n        try {\n          return require(proxyPath);\n        } catch (e) {\n          if (e.code === 'ERR_REQUIRE_ESM') {\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (yield (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n          }\n\n          throw e;\n        }\n\n    }\n  });\n  return _addProxyConfig.apply(this, arguments);\n}\n\nfunction getJsonErrorLineColumn(offset, content) {\n  if (offset === 0) {\n    return {\n      line: 1,\n      column: 1\n    };\n  }\n\n  let line = 0;\n  let position = 0; // eslint-disable-next-line no-constant-condition\n\n  while (true) {\n    ++line;\n    const nextNewline = content.indexOf('\\n', position);\n\n    if (nextNewline === -1 || nextNewline > offset) {\n      break;\n    }\n\n    position = nextNewline + 1;\n  }\n\n  return {\n    line,\n    column: offset - position + 1\n  };\n}\n/**\n * Find the default server path. We don't want to expose baseHref and deployUrl as arguments, only\n * the browser options where needed. This method should stay private (people who want to resolve\n * baseHref and deployUrl should use the buildServePath exported function.\n * @private\n */\n\n\nfunction findDefaultServePath(baseHref, deployUrl) {\n  if (!baseHref && !deployUrl) {\n    return '';\n  }\n\n  if (/^(\\w+:)?\\/\\//.test(baseHref || '') || /^(\\w+:)?\\/\\//.test(deployUrl || '')) {\n    // If baseHref or deployUrl is absolute, unsupported by ng serve\n    return null;\n  } // normalize baseHref\n  // for ng serve the starting base is always `/` so a relative\n  // and root relative value are identical\n\n\n  const baseHrefParts = (baseHref || '').split('/').filter(part => part !== '');\n\n  if (baseHref && !baseHref.endsWith('/')) {\n    baseHrefParts.pop();\n  }\n\n  const normalizedBaseHref = baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n\n  if (deployUrl && deployUrl[0] === '/') {\n    if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n      // If baseHref and deployUrl are root relative and not equivalent, unsupported by ng serve\n      return null;\n    }\n\n    return deployUrl;\n  } // Join together baseHref and deployUrl\n\n\n  return `${normalizedBaseHref}${deployUrl || ''}`;\n}\n\nfunction getAllowedHostsConfig(options) {\n  var _a;\n\n  if (options.disableHostCheck) {\n    return 'all';\n  } else if ((_a = options.allowedHosts) === null || _a === void 0 ? void 0 : _a.length) {\n    return options.allowedHosts;\n  }\n\n  return undefined;\n}\n\nfunction getWebSocketSettings(options, servePath) {\n  const {\n    hmr,\n    liveReload\n  } = options;\n\n  if (!hmr && !liveReload) {\n    return {\n      webSocketServer: false,\n      client: undefined\n    };\n  }\n\n  const webSocketPath = path_1.posix.join(servePath, 'ws');\n  return {\n    webSocketServer: {\n      options: {\n        path: webSocketPath\n      }\n    },\n    client: {\n      logging: 'info',\n      webSocketURL: getPublicHostOptions(options, webSocketPath),\n      overlay: {\n        errors: true,\n        warnings: false\n      }\n    }\n  };\n}\n\nfunction getPublicHostOptions(options, webSocketPath) {\n  let publicHost = options.publicHost;\n\n  if (publicHost) {\n    const hostWithProtocol = !/^\\w+:\\/\\//.test(publicHost) ? `https://${publicHost}` : publicHost;\n    publicHost = new url_1.URL(hostWithProtocol).host;\n  }\n\n  return `auto://${publicHost || '0.0.0.0:0'}${webSocketPath}`;\n}","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/@angular-devkit/build-angular/src/webpack/configs/dev-server.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","buildServePath","getDevServerConfig","core_1","require","fs_1","path_1","url_1","load_esm_1","webpack_browser_config_1","hmr_loader_1","wco","buildOptions","host","port","index","headers","watch","hmr","main","liveReload","proxyConfig","logger","root","servePath","extraRules","push","loader","HmrLoader","include","map","p","resolve","extraPlugins","apply","compiler","hooks","afterEnvironment","tap","watchFileSystem","plugins","module","rules","devServer","historyApiFallback","posix","join","getIndexOutputFile","disableDotRule","htmlAcceptHeaders","rewrites","from","RegExp","to","context","parsedUrl","href","compress","static","server","getServerConfig","allowedHosts","getAllowedHostsConfig","devMiddleware","publicPath","stats","hot","proxy","addProxyConfig","getWebSocketSettings","options","defaultPath","findDefaultServePath","baseHref","deployUrl","warn","tags","oneLine","endsWith","substr","length","startsWith","ssl","sslCert","sslKey","type","key","cert","proxyPath","existsSync","Error","extname","content","promises","readFile","parse","printParseErrorCode","Promise","then","parseErrors","proxyConfiguration","allowTrailingComma","errorMessage","parseError","line","column","getJsonErrorLineColumn","offset","error","loadEsmModule","pathToFileURL","default","e","code","position","nextNewline","indexOf","test","baseHrefParts","split","filter","part","pop","normalizedBaseHref","_a","disableHostCheck","webSocketServer","client","webSocketPath","path","logging","webSocketURL","getPublicHostOptions","overlay","errors","warnings","publicHost","hostWithProtocol","URL"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.buildServePath = exports.getDevServerConfig = void 0;\nconst core_1 = require(\"@angular-devkit/core\");\nconst fs_1 = require(\"fs\");\nconst path_1 = require(\"path\");\nconst url_1 = require(\"url\");\nconst load_esm_1 = require(\"../../utils/load-esm\");\nconst webpack_browser_config_1 = require(\"../../utils/webpack-browser-config\");\nconst hmr_loader_1 = require(\"../plugins/hmr/hmr-loader\");\nasync function getDevServerConfig(wco) {\n    const { buildOptions: { host, port, index, headers, watch, hmr, main, liveReload, proxyConfig }, logger, root, } = wco;\n    const servePath = buildServePath(wco.buildOptions, logger);\n    const extraRules = [];\n    if (hmr) {\n        extraRules.push({\n            loader: hmr_loader_1.HmrLoader,\n            include: [main].map((p) => (0, path_1.resolve)(wco.root, p)),\n        });\n    }\n    const extraPlugins = [];\n    if (!watch) {\n        // There's no option to turn off file watching in webpack-dev-server, but\n        // we can override the file watcher instead.\n        extraPlugins.push({\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\n            apply: (compiler) => {\n                compiler.hooks.afterEnvironment.tap('angular-cli', () => {\n                    // eslint-disable-next-line @typescript-eslint/no-empty-function\n                    compiler.watchFileSystem = { watch: () => { } };\n                });\n            },\n        });\n    }\n    return {\n        plugins: extraPlugins,\n        module: {\n            rules: extraRules,\n        },\n        devServer: {\n            host,\n            port,\n            headers: {\n                'Access-Control-Allow-Origin': '*',\n                ...headers,\n            },\n            historyApiFallback: !!index && {\n                index: path_1.posix.join(servePath, (0, webpack_browser_config_1.getIndexOutputFile)(index)),\n                disableDotRule: true,\n                htmlAcceptHeaders: ['text/html', 'application/xhtml+xml'],\n                rewrites: [\n                    {\n                        from: new RegExp(`^(?!${servePath})/.*`),\n                        to: (context) => context.parsedUrl.href,\n                    },\n                ],\n            },\n            compress: false,\n            static: false,\n            server: getServerConfig(root, wco.buildOptions),\n            allowedHosts: getAllowedHostsConfig(wco.buildOptions),\n            devMiddleware: {\n                publicPath: servePath,\n                stats: false,\n            },\n            liveReload,\n            hot: hmr && !liveReload ? 'only' : hmr,\n            proxy: await addProxyConfig(root, proxyConfig),\n            ...getWebSocketSettings(wco.buildOptions, servePath),\n        },\n    };\n}\nexports.getDevServerConfig = getDevServerConfig;\n/**\n * Resolve and build a URL _path_ that will be the root of the server. This resolved base href and\n * deploy URL from the browser options and returns a path from the root.\n */\nfunction buildServePath(options, logger) {\n    let servePath = options.servePath;\n    if (servePath === undefined) {\n        const defaultPath = findDefaultServePath(options.baseHref, options.deployUrl);\n        if (defaultPath == null) {\n            logger.warn(core_1.tags.oneLine `\n        Warning: --deploy-url and/or --base-href contain unsupported values for ng serve. Default\n        serve path of '/' used. Use --serve-path to override.\n      `);\n        }\n        servePath = defaultPath || '';\n    }\n    if (servePath.endsWith('/')) {\n        servePath = servePath.substr(0, servePath.length - 1);\n    }\n    if (!servePath.startsWith('/')) {\n        servePath = `/${servePath}`;\n    }\n    return servePath;\n}\nexports.buildServePath = buildServePath;\n/**\n * Private method to enhance a webpack config with SSL configuration.\n * @private\n */\nfunction getServerConfig(root, options) {\n    const { ssl, sslCert, sslKey } = options;\n    if (!ssl) {\n        return 'http';\n    }\n    return {\n        type: 'https',\n        options: sslCert && sslKey\n            ? {\n                key: (0, path_1.resolve)(root, sslKey),\n                cert: (0, path_1.resolve)(root, sslCert),\n            }\n            : undefined,\n    };\n}\n/**\n * Private method to enhance a webpack config with Proxy configuration.\n * @private\n */\nasync function addProxyConfig(root, proxyConfig) {\n    if (!proxyConfig) {\n        return undefined;\n    }\n    const proxyPath = (0, path_1.resolve)(root, proxyConfig);\n    if (!(0, fs_1.existsSync)(proxyPath)) {\n        throw new Error(`Proxy configuration file ${proxyPath} does not exist.`);\n    }\n    switch ((0, path_1.extname)(proxyPath)) {\n        case '.json': {\n            const content = await fs_1.promises.readFile(proxyPath, 'utf-8');\n            const { parse, printParseErrorCode } = await Promise.resolve().then(() => __importStar(require('jsonc-parser')));\n            const parseErrors = [];\n            const proxyConfiguration = parse(content, parseErrors, { allowTrailingComma: true });\n            if (parseErrors.length > 0) {\n                let errorMessage = `Proxy configuration file ${proxyPath} contains parse errors:`;\n                for (const parseError of parseErrors) {\n                    const { line, column } = getJsonErrorLineColumn(parseError.offset, content);\n                    errorMessage += `\\n[${line}, ${column}] ${printParseErrorCode(parseError.error)}`;\n                }\n                throw new Error(errorMessage);\n            }\n            return proxyConfiguration;\n        }\n        case '.mjs':\n            // Load the ESM configuration file using the TypeScript dynamic import workaround.\n            // Once TypeScript provides support for keeping the dynamic import this workaround can be\n            // changed to a direct dynamic import.\n            return (await (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n        case '.cjs':\n            return require(proxyPath);\n        default:\n            // The file could be either CommonJS or ESM.\n            // CommonJS is tried first then ESM if loading fails.\n            try {\n                return require(proxyPath);\n            }\n            catch (e) {\n                if (e.code === 'ERR_REQUIRE_ESM') {\n                    // Load the ESM configuration file using the TypeScript dynamic import workaround.\n                    // Once TypeScript provides support for keeping the dynamic import this workaround can be\n                    // changed to a direct dynamic import.\n                    return (await (0, load_esm_1.loadEsmModule)((0, url_1.pathToFileURL)(proxyPath))).default;\n                }\n                throw e;\n            }\n    }\n}\n/**\n * Calculates the line and column for an error offset in the content of a JSON file.\n * @param location The offset error location from the beginning of the content.\n * @param content The full content of the file containing the error.\n * @returns An object containing the line and column\n */\nfunction getJsonErrorLineColumn(offset, content) {\n    if (offset === 0) {\n        return { line: 1, column: 1 };\n    }\n    let line = 0;\n    let position = 0;\n    // eslint-disable-next-line no-constant-condition\n    while (true) {\n        ++line;\n        const nextNewline = content.indexOf('\\n', position);\n        if (nextNewline === -1 || nextNewline > offset) {\n            break;\n        }\n        position = nextNewline + 1;\n    }\n    return { line, column: offset - position + 1 };\n}\n/**\n * Find the default server path. We don't want to expose baseHref and deployUrl as arguments, only\n * the browser options where needed. This method should stay private (people who want to resolve\n * baseHref and deployUrl should use the buildServePath exported function.\n * @private\n */\nfunction findDefaultServePath(baseHref, deployUrl) {\n    if (!baseHref && !deployUrl) {\n        return '';\n    }\n    if (/^(\\w+:)?\\/\\//.test(baseHref || '') || /^(\\w+:)?\\/\\//.test(deployUrl || '')) {\n        // If baseHref or deployUrl is absolute, unsupported by ng serve\n        return null;\n    }\n    // normalize baseHref\n    // for ng serve the starting base is always `/` so a relative\n    // and root relative value are identical\n    const baseHrefParts = (baseHref || '').split('/').filter((part) => part !== '');\n    if (baseHref && !baseHref.endsWith('/')) {\n        baseHrefParts.pop();\n    }\n    const normalizedBaseHref = baseHrefParts.length === 0 ? '/' : `/${baseHrefParts.join('/')}/`;\n    if (deployUrl && deployUrl[0] === '/') {\n        if (baseHref && baseHref[0] === '/' && normalizedBaseHref !== deployUrl) {\n            // If baseHref and deployUrl are root relative and not equivalent, unsupported by ng serve\n            return null;\n        }\n        return deployUrl;\n    }\n    // Join together baseHref and deployUrl\n    return `${normalizedBaseHref}${deployUrl || ''}`;\n}\nfunction getAllowedHostsConfig(options) {\n    var _a;\n    if (options.disableHostCheck) {\n        return 'all';\n    }\n    else if ((_a = options.allowedHosts) === null || _a === void 0 ? void 0 : _a.length) {\n        return options.allowedHosts;\n    }\n    return undefined;\n}\nfunction getWebSocketSettings(options, servePath) {\n    const { hmr, liveReload } = options;\n    if (!hmr && !liveReload) {\n        return {\n            webSocketServer: false,\n            client: undefined,\n        };\n    }\n    const webSocketPath = path_1.posix.join(servePath, 'ws');\n    return {\n        webSocketServer: {\n            options: {\n                path: webSocketPath,\n            },\n        },\n        client: {\n            logging: 'info',\n            webSocketURL: getPublicHostOptions(options, webSocketPath),\n            overlay: {\n                errors: true,\n                warnings: false,\n            },\n        },\n    };\n}\nfunction getPublicHostOptions(options, webSocketPath) {\n    let publicHost = options.publicHost;\n    if (publicHost) {\n        const hostWithProtocol = !/^\\w+:\\/\\//.test(publicHost) ? `https://${publicHost}` : publicHost;\n        publicHost = new url_1.URL(hostWithProtocol).host;\n    }\n    return `auto://${publicHost || '0.0.0.0:0'}${webSocketPath}`;\n}\n"]},"metadata":{},"sourceType":"script"}