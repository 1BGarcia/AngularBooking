{"ast":null,"code":"'use strict';\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nconst {\n  promisify\n} = require('util');\n\nconst path = require('path');\n\nconst globby = require('globby');\n\nconst isGlob = require('is-glob');\n\nconst slash = require('slash');\n\nconst gracefulFs = require('graceful-fs');\n\nconst isPathCwd = require('is-path-cwd');\n\nconst isPathInside = require('is-path-inside');\n\nconst rimraf = require('rimraf');\n\nconst pMap = require('p-map');\n\nconst rimrafP = promisify(rimraf);\nconst rimrafOptions = {\n  glob: false,\n  unlink: gracefulFs.unlink,\n  unlinkSync: gracefulFs.unlinkSync,\n  chmod: gracefulFs.chmod,\n  chmodSync: gracefulFs.chmodSync,\n  stat: gracefulFs.stat,\n  statSync: gracefulFs.statSync,\n  lstat: gracefulFs.lstat,\n  lstatSync: gracefulFs.lstatSync,\n  rmdir: gracefulFs.rmdir,\n  rmdirSync: gracefulFs.rmdirSync,\n  readdir: gracefulFs.readdir,\n  readdirSync: gracefulFs.readdirSync\n};\n\nfunction safeCheck(file, cwd) {\n  if (isPathCwd(file)) {\n    throw new Error('Cannot delete the current working directory. Can be overridden with the `force` option.');\n  }\n\n  if (!isPathInside(file, cwd)) {\n    throw new Error('Cannot delete files/directories outside the current working directory. Can be overridden with the `force` option.');\n  }\n}\n\nfunction normalizePatterns(patterns) {\n  patterns = Array.isArray(patterns) ? patterns : [patterns];\n  patterns = patterns.map(pattern => {\n    if (process.platform === 'win32' && isGlob(pattern) === false) {\n      return slash(pattern);\n    }\n\n    return pattern;\n  });\n  return patterns;\n}\n\nmodule.exports = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (patterns, {\n    force,\n    dryRun,\n    cwd = process.cwd(),\n    ...options\n  } = {}) {\n    options = {\n      expandDirectories: false,\n      onlyFiles: false,\n      followSymbolicLinks: false,\n      cwd,\n      ...options\n    };\n    patterns = normalizePatterns(patterns);\n    const files = (yield globby(patterns, options)).sort((a, b) => b.localeCompare(a));\n\n    const mapper = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (file) {\n        file = path.resolve(cwd, file);\n\n        if (!force) {\n          safeCheck(file, cwd);\n        }\n\n        if (!dryRun) {\n          yield rimrafP(file, rimrafOptions);\n        }\n\n        return file;\n      });\n\n      return function mapper(_x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    const removedFiles = yield pMap(files, mapper, options);\n    removedFiles.sort((a, b) => a.localeCompare(b));\n    return removedFiles;\n  });\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nmodule.exports.sync = (patterns, {\n  force,\n  dryRun,\n  cwd = process.cwd(),\n  ...options\n} = {}) => {\n  options = {\n    expandDirectories: false,\n    onlyFiles: false,\n    followSymbolicLinks: false,\n    cwd,\n    ...options\n  };\n  patterns = normalizePatterns(patterns);\n  const files = globby.sync(patterns, options).sort((a, b) => b.localeCompare(a));\n  const removedFiles = files.map(file => {\n    file = path.resolve(cwd, file);\n\n    if (!force) {\n      safeCheck(file, cwd);\n    }\n\n    if (!dryRun) {\n      rimraf.sync(file, rimrafOptions);\n    }\n\n    return file;\n  });\n  removedFiles.sort((a, b) => a.localeCompare(b));\n  return removedFiles;\n};","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/del/index.js"],"names":["promisify","require","path","globby","isGlob","slash","gracefulFs","isPathCwd","isPathInside","rimraf","pMap","rimrafP","rimrafOptions","glob","unlink","unlinkSync","chmod","chmodSync","stat","statSync","lstat","lstatSync","rmdir","rmdirSync","readdir","readdirSync","safeCheck","file","cwd","Error","normalizePatterns","patterns","Array","isArray","map","pattern","process","platform","module","exports","force","dryRun","options","expandDirectories","onlyFiles","followSymbolicLinks","files","sort","a","b","localeCompare","mapper","resolve","removedFiles","sync"],"mappings":"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","sourcesContent":["'use strict';\nconst {promisify} = require('util');\nconst path = require('path');\nconst globby = require('globby');\nconst isGlob = require('is-glob');\nconst slash = require('slash');\nconst gracefulFs = require('graceful-fs');\nconst isPathCwd = require('is-path-cwd');\nconst isPathInside = require('is-path-inside');\nconst rimraf = require('rimraf');\nconst pMap = require('p-map');\n\nconst rimrafP = promisify(rimraf);\n\nconst rimrafOptions = {\n\tglob: false,\n\tunlink: gracefulFs.unlink,\n\tunlinkSync: gracefulFs.unlinkSync,\n\tchmod: gracefulFs.chmod,\n\tchmodSync: gracefulFs.chmodSync,\n\tstat: gracefulFs.stat,\n\tstatSync: gracefulFs.statSync,\n\tlstat: gracefulFs.lstat,\n\tlstatSync: gracefulFs.lstatSync,\n\trmdir: gracefulFs.rmdir,\n\trmdirSync: gracefulFs.rmdirSync,\n\treaddir: gracefulFs.readdir,\n\treaddirSync: gracefulFs.readdirSync\n};\n\nfunction safeCheck(file, cwd) {\n\tif (isPathCwd(file)) {\n\t\tthrow new Error('Cannot delete the current working directory. Can be overridden with the `force` option.');\n\t}\n\n\tif (!isPathInside(file, cwd)) {\n\t\tthrow new Error('Cannot delete files/directories outside the current working directory. Can be overridden with the `force` option.');\n\t}\n}\n\nfunction normalizePatterns(patterns) {\n\tpatterns = Array.isArray(patterns) ? patterns : [patterns];\n\n\tpatterns = patterns.map(pattern => {\n\t\tif (process.platform === 'win32' && isGlob(pattern) === false) {\n\t\t\treturn slash(pattern);\n\t\t}\n\n\t\treturn pattern;\n\t});\n\n\treturn patterns;\n}\n\nmodule.exports = async (patterns, {force, dryRun, cwd = process.cwd(), ...options} = {}) => {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst files = (await globby(patterns, options))\n\t\t.sort((a, b) => b.localeCompare(a));\n\n\tconst mapper = async file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\tawait rimrafP(file, rimrafOptions);\n\t\t}\n\n\t\treturn file;\n\t};\n\n\tconst removedFiles = await pMap(files, mapper, options);\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n};\n\nmodule.exports.sync = (patterns, {force, dryRun, cwd = process.cwd(), ...options} = {}) => {\n\toptions = {\n\t\texpandDirectories: false,\n\t\tonlyFiles: false,\n\t\tfollowSymbolicLinks: false,\n\t\tcwd,\n\t\t...options\n\t};\n\n\tpatterns = normalizePatterns(patterns);\n\n\tconst files = globby.sync(patterns, options)\n\t\t.sort((a, b) => b.localeCompare(a));\n\n\tconst removedFiles = files.map(file => {\n\t\tfile = path.resolve(cwd, file);\n\n\t\tif (!force) {\n\t\t\tsafeCheck(file, cwd);\n\t\t}\n\n\t\tif (!dryRun) {\n\t\t\trimraf.sync(file, rimrafOptions);\n\t\t}\n\n\t\treturn file;\n\t});\n\n\tremovedFiles.sort((a, b) => a.localeCompare(b));\n\n\treturn removedFiles;\n};\n"]},"metadata":{},"sourceType":"script"}