{"ast":null,"code":"\"use strict\";\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stylusLoader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction stylusLoader(_x) {\n  return _stylusLoader.apply(this, arguments);\n}\n\nfunction _stylusLoader() {\n  _stylusLoader = _asyncToGenerator(function* (source) {\n    var _this = this;\n\n    const options = this.getOptions(_options.default);\n    const callback = this.async();\n    const implementation = (0, _utils.getStylusImplementation)(this, options.implementation);\n\n    if (!implementation) {\n      callback();\n      return;\n    }\n\n    let data = source;\n\n    if (typeof options.additionalData !== \"undefined\") {\n      data = typeof options.additionalData === \"function\" ? yield options.additionalData(data, this) : `${options.additionalData}\\n${data}`;\n    }\n\n    const stylusOptions = (0, _utils.getStylusOptions)(this, options);\n    const styl = implementation(data, stylusOptions); // include regular CSS on @import\n\n    if (stylusOptions.includeCSS) {\n      styl.set(\"include css\", true);\n    }\n\n    if (stylusOptions.hoistAtrules) {\n      styl.set(\"hoist atrules\", true);\n    }\n\n    if (stylusOptions.lineNumbers) {\n      styl.set(\"linenos\", true);\n    }\n\n    if (stylusOptions.disableCache) {\n      styl.set(\"cache\", false);\n    }\n\n    const useSourceMap = typeof options.sourceMap === \"boolean\" ? options.sourceMap : this.sourceMap;\n\n    if (stylusOptions.sourcemap || useSourceMap) {\n      styl.set(\"sourcemap\", useSourceMap ? {\n        comment: false,\n        sourceRoot: stylusOptions.dest,\n        basePath: this.rootContext\n      } : stylusOptions.sourcemap);\n    }\n\n    if (typeof stylusOptions.use !== \"undefined\" && stylusOptions.use.length > 0) {\n      let {\n        length\n      } = stylusOptions.use; // eslint-disable-next-line no-plusplus\n\n      while (length--) {\n        let [item] = stylusOptions.use.splice(length, 1);\n\n        if (typeof item === \"string\") {\n          try {\n            const resolved = require.resolve(item); // eslint-disable-next-line import/no-dynamic-require, global-require\n\n\n            item = require(resolved)(stylusOptions);\n          } catch (error) {\n            callback(`Failed to load \"${item}\" Stylus plugin. Are you sure it's installed?\\n${error}`);\n            return;\n          }\n        }\n\n        styl.use(item);\n      }\n    }\n\n    if (typeof stylusOptions.import !== \"undefined\") {\n      for (const imported of stylusOptions.import) {\n        styl.import(imported);\n      }\n    }\n\n    if (typeof stylusOptions.include !== \"undefined\") {\n      for (const included of stylusOptions.include) {\n        styl.include(included);\n      }\n    }\n\n    if (stylusOptions.resolveURL !== false) {\n      styl.define(\"url\", (0, _utils.urlResolver)(stylusOptions.resolveURL));\n    }\n\n    const shouldUseWebpackImporter = typeof options.webpackImporter === \"boolean\" ? options.webpackImporter : true;\n\n    if (shouldUseWebpackImporter) {\n      styl.set(\"Evaluator\", yield (0, _utils.createEvaluator)(this, source, stylusOptions));\n    }\n\n    if (typeof stylusOptions.define !== \"undefined\") {\n      const definitions = Array.isArray(stylusOptions.define) ? stylusOptions.define : Object.entries(stylusOptions.define);\n\n      for (const defined of definitions) {\n        styl.define(...defined);\n      }\n    }\n\n    styl.render( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (error, css) {\n        if (error) {\n          if (error.filename) {\n            _this.addDependency(_path.default.normalize(error.filename));\n          }\n\n          callback(error);\n          return;\n        } // eslint-disable-next-line no-underscore-dangle\n\n\n        if (stylusOptions._imports.length > 0) {\n          // eslint-disable-next-line no-underscore-dangle\n          for (const importData of stylusOptions._imports) {\n            if (_path.default.isAbsolute(importData.path)) {\n              _this.addDependency(_path.default.normalize(importData.path));\n            } else {\n              _this.addDependency(_path.default.resolve(process.cwd(), importData.path));\n            }\n          }\n        }\n\n        let map = styl.sourcemap;\n\n        if (map && useSourceMap) {\n          map = (0, _utils.normalizeSourceMap)(map, stylusOptions.dest);\n\n          try {\n            map.sourcesContent = yield Promise.all(map.sources.map( /*#__PURE__*/function () {\n              var _ref2 = _asyncToGenerator(function* (file) {\n                return (yield (0, _utils.readFile)(_this.fs, file)).toString();\n              });\n\n              return function (_x4) {\n                return _ref2.apply(this, arguments);\n              };\n            }()));\n          } catch (fsError) {\n            callback(fsError);\n            return;\n          }\n        }\n\n        callback(null, css, map);\n      });\n\n      return function (_x2, _x3) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  });\n  return _stylusLoader.apply(this, arguments);\n}","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/stylus-loader/dist/index.js"],"names":["Object","defineProperty","exports","value","default","stylusLoader","_path","_interopRequireDefault","require","_options","_utils","obj","__esModule","source","options","getOptions","callback","async","implementation","getStylusImplementation","data","additionalData","stylusOptions","getStylusOptions","styl","includeCSS","set","hoistAtrules","lineNumbers","disableCache","useSourceMap","sourceMap","sourcemap","comment","sourceRoot","dest","basePath","rootContext","use","length","item","splice","resolved","resolve","error","import","imported","include","included","resolveURL","define","urlResolver","shouldUseWebpackImporter","webpackImporter","createEvaluator","definitions","Array","isArray","entries","defined","render","css","filename","addDependency","normalize","_imports","importData","isAbsolute","path","process","cwd","map","normalizeSourceMap","sourcesContent","Promise","all","sources","file","readFile","fs","toString","fsError"],"mappings":"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","sourcesContent":["\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = stylusLoader;\n\nvar _path = _interopRequireDefault(require(\"path\"));\n\nvar _options = _interopRequireDefault(require(\"./options.json\"));\n\nvar _utils = require(\"./utils\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nasync function stylusLoader(source) {\n  const options = this.getOptions(_options.default);\n  const callback = this.async();\n  const implementation = (0, _utils.getStylusImplementation)(this, options.implementation);\n\n  if (!implementation) {\n    callback();\n    return;\n  }\n\n  let data = source;\n\n  if (typeof options.additionalData !== \"undefined\") {\n    data = typeof options.additionalData === \"function\" ? await options.additionalData(data, this) : `${options.additionalData}\\n${data}`;\n  }\n\n  const stylusOptions = (0, _utils.getStylusOptions)(this, options);\n  const styl = implementation(data, stylusOptions); // include regular CSS on @import\n\n  if (stylusOptions.includeCSS) {\n    styl.set(\"include css\", true);\n  }\n\n  if (stylusOptions.hoistAtrules) {\n    styl.set(\"hoist atrules\", true);\n  }\n\n  if (stylusOptions.lineNumbers) {\n    styl.set(\"linenos\", true);\n  }\n\n  if (stylusOptions.disableCache) {\n    styl.set(\"cache\", false);\n  }\n\n  const useSourceMap = typeof options.sourceMap === \"boolean\" ? options.sourceMap : this.sourceMap;\n\n  if (stylusOptions.sourcemap || useSourceMap) {\n    styl.set(\"sourcemap\", useSourceMap ? {\n      comment: false,\n      sourceRoot: stylusOptions.dest,\n      basePath: this.rootContext\n    } : stylusOptions.sourcemap);\n  }\n\n  if (typeof stylusOptions.use !== \"undefined\" && stylusOptions.use.length > 0) {\n    let {\n      length\n    } = stylusOptions.use; // eslint-disable-next-line no-plusplus\n\n    while (length--) {\n      let [item] = stylusOptions.use.splice(length, 1);\n\n      if (typeof item === \"string\") {\n        try {\n          const resolved = require.resolve(item); // eslint-disable-next-line import/no-dynamic-require, global-require\n\n\n          item = require(resolved)(stylusOptions);\n        } catch (error) {\n          callback(`Failed to load \"${item}\" Stylus plugin. Are you sure it's installed?\\n${error}`);\n          return;\n        }\n      }\n\n      styl.use(item);\n    }\n  }\n\n  if (typeof stylusOptions.import !== \"undefined\") {\n    for (const imported of stylusOptions.import) {\n      styl.import(imported);\n    }\n  }\n\n  if (typeof stylusOptions.include !== \"undefined\") {\n    for (const included of stylusOptions.include) {\n      styl.include(included);\n    }\n  }\n\n  if (stylusOptions.resolveURL !== false) {\n    styl.define(\"url\", (0, _utils.urlResolver)(stylusOptions.resolveURL));\n  }\n\n  const shouldUseWebpackImporter = typeof options.webpackImporter === \"boolean\" ? options.webpackImporter : true;\n\n  if (shouldUseWebpackImporter) {\n    styl.set(\"Evaluator\", await (0, _utils.createEvaluator)(this, source, stylusOptions));\n  }\n\n  if (typeof stylusOptions.define !== \"undefined\") {\n    const definitions = Array.isArray(stylusOptions.define) ? stylusOptions.define : Object.entries(stylusOptions.define);\n\n    for (const defined of definitions) {\n      styl.define(...defined);\n    }\n  }\n\n  styl.render(async (error, css) => {\n    if (error) {\n      if (error.filename) {\n        this.addDependency(_path.default.normalize(error.filename));\n      }\n\n      callback(error);\n      return;\n    } // eslint-disable-next-line no-underscore-dangle\n\n\n    if (stylusOptions._imports.length > 0) {\n      // eslint-disable-next-line no-underscore-dangle\n      for (const importData of stylusOptions._imports) {\n        if (_path.default.isAbsolute(importData.path)) {\n          this.addDependency(_path.default.normalize(importData.path));\n        } else {\n          this.addDependency(_path.default.resolve(process.cwd(), importData.path));\n        }\n      }\n    }\n\n    let map = styl.sourcemap;\n\n    if (map && useSourceMap) {\n      map = (0, _utils.normalizeSourceMap)(map, stylusOptions.dest);\n\n      try {\n        map.sourcesContent = await Promise.all(map.sources.map(async file => (await (0, _utils.readFile)(this.fs, file)).toString()));\n      } catch (fsError) {\n        callback(fsError);\n        return;\n      }\n    }\n\n    callback(null, css, map);\n  });\n}"]},"metadata":{},"sourceType":"script"}