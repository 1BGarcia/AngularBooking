{"ast":null,"code":"\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nvar _asyncToGenerator = require(\"E:\\\\M7ProyectoAngular\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\asyncToGenerator.js\").default;\n\nvar __createBinding = this && this.__createBinding || (Object.create ? function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n    desc = {\n      enumerable: true,\n      get: function () {\n        return m[k];\n      }\n    };\n  }\n\n  Object.defineProperty(o, k2, desc);\n} : function (o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nvar __setModuleDefault = this && this.__setModuleDefault || (Object.create ? function (o, v) {\n  Object.defineProperty(o, \"default\", {\n    enumerable: true,\n    value: v\n  });\n} : function (o, v) {\n  o[\"default\"] = v;\n});\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n\n  __setModuleDefault(result, mod);\n\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.WebpackResourceLoader = void 0;\n\nconst crypto_1 = require(\"crypto\");\n\nconst path = __importStar(require(\"path\"));\n\nconst vm = __importStar(require(\"vm\"));\n\nconst paths_1 = require(\"./ivy/paths\");\n\nconst inline_resource_1 = require(\"./loaders/inline-resource\");\n\nconst replace_resources_1 = require(\"./transformers/replace_resources\");\n\nclass WebpackResourceLoader {\n  constructor(shouldCache) {\n    this._fileDependencies = new Map();\n    this._reverseDependencies = new Map();\n    this.modifiedResources = new Set();\n    this.outputPathCounter = 1;\n    this.inlineDataLoaderPath = inline_resource_1.InlineAngularResourceLoaderPath;\n\n    if (shouldCache) {\n      this.fileCache = new Map();\n      this.assetCache = new Map();\n    }\n  }\n\n  update(parentCompilation, changedFiles) {\n    var _a, _b, _c, _d, _e;\n\n    this._parentCompilation = parentCompilation; // Update resource cache and modified resources\n\n    this.modifiedResources.clear();\n\n    if (changedFiles) {\n      for (const changedFile of changedFiles) {\n        const changedFileNormalized = (0, paths_1.normalizePath)(changedFile);\n        (_a = this.assetCache) === null || _a === void 0 ? void 0 : _a.delete(changedFileNormalized);\n\n        for (const affectedResource of this.getAffectedResources(changedFile)) {\n          const affectedResourceNormalized = (0, paths_1.normalizePath)(affectedResource);\n          (_b = this.fileCache) === null || _b === void 0 ? void 0 : _b.delete(affectedResourceNormalized);\n          this.modifiedResources.add(affectedResource);\n\n          for (const effectedDependencies of this.getResourceDependencies(affectedResourceNormalized)) {\n            (_c = this.assetCache) === null || _c === void 0 ? void 0 : _c.delete((0, paths_1.normalizePath)(effectedDependencies));\n          }\n        }\n      }\n    } else {\n      (_d = this.fileCache) === null || _d === void 0 ? void 0 : _d.clear();\n      (_e = this.assetCache) === null || _e === void 0 ? void 0 : _e.clear();\n    } // Re-emit all assets for un-effected files\n\n\n    if (this.assetCache) {\n      for (const [, {\n        name,\n        source,\n        info\n      }] of this.assetCache) {\n        this._parentCompilation.emitAsset(name, source, info);\n      }\n    }\n  }\n\n  clearParentCompilation() {\n    this._parentCompilation = undefined;\n  }\n\n  getModifiedResourceFiles() {\n    return this.modifiedResources;\n  }\n\n  getResourceDependencies(filePath) {\n    return this._fileDependencies.get(filePath) || [];\n  }\n\n  getAffectedResources(file) {\n    return this._reverseDependencies.get(file) || [];\n  }\n\n  setAffectedResources(file, resources) {\n    this._reverseDependencies.set(file, new Set(resources));\n  }\n\n  _compile(filePath, data, fileExtension, resourceType, containingFile) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      if (!_this._parentCompilation) {\n        throw new Error('WebpackResourceLoader cannot be used without parentCompilation');\n      }\n\n      const getEntry = () => {\n        if (filePath) {\n          return `${filePath}?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}`;\n        } else if (resourceType) {\n          return (// app.component.ts-2.css?ngResource!=!@ngtools/webpack/src/loaders/inline-resource.js!app.component.ts\n            `${containingFile}-${_this.outputPathCounter}.${fileExtension}` + `?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}!=!${_this.inlineDataLoaderPath}!${containingFile}`\n          );\n        } else if (data) {\n          // Create a special URL for reading the resource from memory\n          return `angular-resource:${resourceType},${(0, crypto_1.createHash)('md5').update(data).digest('hex')}`;\n        }\n\n        throw new Error(`\"filePath\", \"resourceType\" or \"data\" must be specified.`);\n      };\n\n      const entry = getEntry(); // Simple sanity check.\n\n      if (filePath === null || filePath === void 0 ? void 0 : filePath.match(/\\.[jt]s$/)) {\n        throw new Error(`Cannot use a JavaScript or TypeScript file (${filePath}) in a component's styleUrls or templateUrl.`);\n      }\n\n      const outputFilePath = filePath || `${containingFile}-angular-inline--${_this.outputPathCounter++}.${resourceType === 'template' ? 'html' : 'css'}`;\n      const outputOptions = {\n        filename: outputFilePath,\n        library: {\n          type: 'var',\n          name: 'resource'\n        }\n      };\n      const {\n        context,\n        webpack\n      } = _this._parentCompilation.compiler;\n      const {\n        EntryPlugin,\n        NormalModule,\n        library,\n        node,\n        sources\n      } = webpack;\n\n      const childCompiler = _this._parentCompilation.createChildCompiler('angular-compiler:resource', outputOptions, [new node.NodeTemplatePlugin(outputOptions), new node.NodeTargetPlugin(), new EntryPlugin(context, entry, {\n        name: 'resource'\n      }), new library.EnableLibraryPlugin('var')]);\n\n      childCompiler.hooks.thisCompilation.tap('angular-compiler', (compilation, {\n        normalModuleFactory\n      }) => {\n        // If no data is provided, the resource will be read from the filesystem\n        if (data !== undefined) {\n          normalModuleFactory.hooks.resolveForScheme.for('angular-resource').tap('angular-compiler', resourceData => {\n            if (filePath) {\n              resourceData.path = filePath;\n              resourceData.resource = filePath;\n            }\n\n            return true;\n          });\n          NormalModule.getCompilationHooks(compilation).readResourceForScheme.for('angular-resource').tap('angular-compiler', () => data);\n          compilation[inline_resource_1.InlineAngularResourceSymbol] = data;\n        }\n\n        compilation.hooks.additionalAssets.tap('angular-compiler', () => {\n          const asset = compilation.assets[outputFilePath];\n\n          if (!asset) {\n            return;\n          }\n\n          try {\n            const output = _this._evaluate(outputFilePath, asset.source().toString());\n\n            if (typeof output === 'string') {\n              compilation.assets[outputFilePath] = new sources.RawSource(output);\n            }\n          } catch (error) {\n            // Use compilation errors, as otherwise webpack will choke\n            compilation.errors.push(error);\n          }\n        });\n      });\n      let finalContent;\n      childCompiler.hooks.compilation.tap('angular-compiler', childCompilation => {\n        childCompilation.hooks.processAssets.tap({\n          name: 'angular-compiler',\n          stage: webpack.Compilation.PROCESS_ASSETS_STAGE_REPORT\n        }, () => {\n          var _a;\n\n          finalContent = (_a = childCompilation.assets[outputFilePath]) === null || _a === void 0 ? void 0 : _a.source().toString();\n\n          for (const {\n            files\n          } of childCompilation.chunks) {\n            for (const file of files) {\n              childCompilation.deleteAsset(file);\n            }\n          }\n        });\n      });\n      return new Promise((resolve, reject) => {\n        childCompiler.runAsChild((error, _, childCompilation) => {\n          var _a, _b;\n\n          if (error) {\n            reject(error);\n            return;\n          } else if (!childCompilation) {\n            reject(new Error('Unknown child compilation error'));\n            return;\n          } // Workaround to attempt to reduce memory usage of child compilations.\n          // This removes the child compilation from the main compilation and manually propagates\n          // all dependencies, warnings, and errors.\n\n\n          const parent = childCompiler.parentCompilation;\n\n          if (parent) {\n            parent.children = parent.children.filter(child => child !== childCompilation);\n            let fileDependencies;\n\n            for (const dependency of childCompilation.fileDependencies) {\n              // Skip paths that do not appear to be files (have no extension).\n              // `fileDependencies` can contain directories and not just files which can\n              // cause incorrect cache invalidation on rebuilds.\n              if (!path.extname(dependency)) {\n                continue;\n              }\n\n              if (data && containingFile && dependency.endsWith(entry)) {\n                // use containing file if the resource was inline\n                parent.fileDependencies.add(containingFile);\n              } else {\n                parent.fileDependencies.add(dependency);\n              } // Save the dependencies for this resource.\n\n\n              if (filePath) {\n                const resolvedFile = (0, paths_1.normalizePath)(dependency);\n\n                const entry = _this._reverseDependencies.get(resolvedFile);\n\n                if (entry) {\n                  entry.add(filePath);\n                } else {\n                  _this._reverseDependencies.set(resolvedFile, new Set([filePath]));\n                }\n\n                if (fileDependencies) {\n                  fileDependencies.add(dependency);\n                } else {\n                  fileDependencies = new Set([dependency]);\n\n                  _this._fileDependencies.set(filePath, fileDependencies);\n                }\n              }\n            }\n\n            parent.contextDependencies.addAll(childCompilation.contextDependencies);\n            parent.missingDependencies.addAll(childCompilation.missingDependencies);\n            parent.buildDependencies.addAll(childCompilation.buildDependencies);\n            parent.warnings.push(...childCompilation.warnings);\n            parent.errors.push(...childCompilation.errors);\n\n            if (_this.assetCache) {\n              for (const {\n                info,\n                name,\n                source\n              } of childCompilation.getAssets()) {\n                // Use the originating file as the cache key if present\n                // Otherwise, generate a cache key based on the generated name\n                const cacheKey = (_a = info.sourceFilename) !== null && _a !== void 0 ? _a : `!![GENERATED]:${name}`;\n\n                _this.assetCache.set(cacheKey, {\n                  info,\n                  name,\n                  source\n                });\n              }\n            }\n          }\n\n          resolve({\n            content: finalContent !== null && finalContent !== void 0 ? finalContent : '',\n            success: ((_b = childCompilation.errors) === null || _b === void 0 ? void 0 : _b.length) === 0\n          });\n        });\n      });\n    })();\n  }\n\n  _evaluate(filename, source) {\n    var _a; // Evaluate code\n\n\n    const context = {};\n\n    try {\n      vm.runInNewContext(source, context, {\n        filename\n      });\n    } catch {\n      // Error are propagated through the child compilation.\n      return null;\n    }\n\n    if (typeof context.resource === 'string') {\n      return context.resource;\n    } else if (typeof ((_a = context.resource) === null || _a === void 0 ? void 0 : _a.default) === 'string') {\n      return context.resource.default;\n    }\n\n    throw new Error(`The loader \"${filename}\" didn't return a string.`);\n  }\n\n  get(filePath) {\n    var _this2 = this;\n\n    return _asyncToGenerator(function* () {\n      var _a;\n\n      const normalizedFile = (0, paths_1.normalizePath)(filePath);\n      let compilationResult = (_a = _this2.fileCache) === null || _a === void 0 ? void 0 : _a.get(normalizedFile);\n\n      if (compilationResult === undefined) {\n        // cache miss so compile resource\n        compilationResult = yield _this2._compile(filePath); // Only cache if compilation was successful\n\n        if (_this2.fileCache && compilationResult.success) {\n          _this2.fileCache.set(normalizedFile, compilationResult);\n        }\n      }\n\n      return compilationResult.content;\n    })();\n  }\n\n  process(data, fileExtension, resourceType, containingFile) {\n    var _this3 = this;\n\n    return _asyncToGenerator(function* () {\n      if (data.trim().length === 0) {\n        return '';\n      }\n\n      const compilationResult = yield _this3._compile(undefined, data, fileExtension, resourceType, containingFile);\n      return compilationResult.content;\n    })();\n  }\n\n}\n\nexports.WebpackResourceLoader = WebpackResourceLoader;","map":{"version":3,"sources":["E:/M7ProyectoAngular/node_modules/@ngtools/webpack/src/resource_loader.js"],"names":["__createBinding","Object","create","o","m","k","k2","undefined","desc","getOwnPropertyDescriptor","__esModule","writable","configurable","enumerable","get","defineProperty","__setModuleDefault","v","value","__importStar","mod","result","prototype","hasOwnProperty","call","exports","WebpackResourceLoader","crypto_1","require","path","vm","paths_1","inline_resource_1","replace_resources_1","constructor","shouldCache","_fileDependencies","Map","_reverseDependencies","modifiedResources","Set","outputPathCounter","inlineDataLoaderPath","InlineAngularResourceLoaderPath","fileCache","assetCache","update","parentCompilation","changedFiles","_a","_b","_c","_d","_e","_parentCompilation","clear","changedFile","changedFileNormalized","normalizePath","delete","affectedResource","getAffectedResources","affectedResourceNormalized","add","effectedDependencies","getResourceDependencies","name","source","info","emitAsset","clearParentCompilation","getModifiedResourceFiles","filePath","file","setAffectedResources","resources","set","_compile","data","fileExtension","resourceType","containingFile","Error","getEntry","NG_COMPONENT_RESOURCE_QUERY","createHash","digest","entry","match","outputFilePath","outputOptions","filename","library","type","context","webpack","compiler","EntryPlugin","NormalModule","node","sources","childCompiler","createChildCompiler","NodeTemplatePlugin","NodeTargetPlugin","EnableLibraryPlugin","hooks","thisCompilation","tap","compilation","normalModuleFactory","resolveForScheme","for","resourceData","resource","getCompilationHooks","readResourceForScheme","InlineAngularResourceSymbol","additionalAssets","asset","assets","output","_evaluate","toString","RawSource","error","errors","push","finalContent","childCompilation","processAssets","stage","Compilation","PROCESS_ASSETS_STAGE_REPORT","files","chunks","deleteAsset","Promise","resolve","reject","runAsChild","_","parent","children","filter","child","fileDependencies","dependency","extname","endsWith","resolvedFile","contextDependencies","addAll","missingDependencies","buildDependencies","warnings","getAssets","cacheKey","sourceFilename","content","success","length","runInNewContext","default","normalizedFile","compilationResult","process","trim"],"mappings":"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","sourcesContent":["\"use strict\";\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nvar __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    var desc = Object.getOwnPropertyDescriptor(m, k);\n    if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n    }\n    Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n    if (k2 === undefined) k2 = k;\n    o[k2] = m[k];\n}));\nvar __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {\n    Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n    o[\"default\"] = v;\n});\nvar __importStar = (this && this.__importStar) || function (mod) {\n    if (mod && mod.__esModule) return mod;\n    var result = {};\n    if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n    __setModuleDefault(result, mod);\n    return result;\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.WebpackResourceLoader = void 0;\nconst crypto_1 = require(\"crypto\");\nconst path = __importStar(require(\"path\"));\nconst vm = __importStar(require(\"vm\"));\nconst paths_1 = require(\"./ivy/paths\");\nconst inline_resource_1 = require(\"./loaders/inline-resource\");\nconst replace_resources_1 = require(\"./transformers/replace_resources\");\nclass WebpackResourceLoader {\n    constructor(shouldCache) {\n        this._fileDependencies = new Map();\n        this._reverseDependencies = new Map();\n        this.modifiedResources = new Set();\n        this.outputPathCounter = 1;\n        this.inlineDataLoaderPath = inline_resource_1.InlineAngularResourceLoaderPath;\n        if (shouldCache) {\n            this.fileCache = new Map();\n            this.assetCache = new Map();\n        }\n    }\n    update(parentCompilation, changedFiles) {\n        var _a, _b, _c, _d, _e;\n        this._parentCompilation = parentCompilation;\n        // Update resource cache and modified resources\n        this.modifiedResources.clear();\n        if (changedFiles) {\n            for (const changedFile of changedFiles) {\n                const changedFileNormalized = (0, paths_1.normalizePath)(changedFile);\n                (_a = this.assetCache) === null || _a === void 0 ? void 0 : _a.delete(changedFileNormalized);\n                for (const affectedResource of this.getAffectedResources(changedFile)) {\n                    const affectedResourceNormalized = (0, paths_1.normalizePath)(affectedResource);\n                    (_b = this.fileCache) === null || _b === void 0 ? void 0 : _b.delete(affectedResourceNormalized);\n                    this.modifiedResources.add(affectedResource);\n                    for (const effectedDependencies of this.getResourceDependencies(affectedResourceNormalized)) {\n                        (_c = this.assetCache) === null || _c === void 0 ? void 0 : _c.delete((0, paths_1.normalizePath)(effectedDependencies));\n                    }\n                }\n            }\n        }\n        else {\n            (_d = this.fileCache) === null || _d === void 0 ? void 0 : _d.clear();\n            (_e = this.assetCache) === null || _e === void 0 ? void 0 : _e.clear();\n        }\n        // Re-emit all assets for un-effected files\n        if (this.assetCache) {\n            for (const [, { name, source, info }] of this.assetCache) {\n                this._parentCompilation.emitAsset(name, source, info);\n            }\n        }\n    }\n    clearParentCompilation() {\n        this._parentCompilation = undefined;\n    }\n    getModifiedResourceFiles() {\n        return this.modifiedResources;\n    }\n    getResourceDependencies(filePath) {\n        return this._fileDependencies.get(filePath) || [];\n    }\n    getAffectedResources(file) {\n        return this._reverseDependencies.get(file) || [];\n    }\n    setAffectedResources(file, resources) {\n        this._reverseDependencies.set(file, new Set(resources));\n    }\n    async _compile(filePath, data, fileExtension, resourceType, containingFile) {\n        if (!this._parentCompilation) {\n            throw new Error('WebpackResourceLoader cannot be used without parentCompilation');\n        }\n        const getEntry = () => {\n            if (filePath) {\n                return `${filePath}?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}`;\n            }\n            else if (resourceType) {\n                return (\n                // app.component.ts-2.css?ngResource!=!@ngtools/webpack/src/loaders/inline-resource.js!app.component.ts\n                `${containingFile}-${this.outputPathCounter}.${fileExtension}` +\n                    `?${replace_resources_1.NG_COMPONENT_RESOURCE_QUERY}!=!${this.inlineDataLoaderPath}!${containingFile}`);\n            }\n            else if (data) {\n                // Create a special URL for reading the resource from memory\n                return `angular-resource:${resourceType},${(0, crypto_1.createHash)('md5').update(data).digest('hex')}`;\n            }\n            throw new Error(`\"filePath\", \"resourceType\" or \"data\" must be specified.`);\n        };\n        const entry = getEntry();\n        // Simple sanity check.\n        if (filePath === null || filePath === void 0 ? void 0 : filePath.match(/\\.[jt]s$/)) {\n            throw new Error(`Cannot use a JavaScript or TypeScript file (${filePath}) in a component's styleUrls or templateUrl.`);\n        }\n        const outputFilePath = filePath ||\n            `${containingFile}-angular-inline--${this.outputPathCounter++}.${resourceType === 'template' ? 'html' : 'css'}`;\n        const outputOptions = {\n            filename: outputFilePath,\n            library: {\n                type: 'var',\n                name: 'resource',\n            },\n        };\n        const { context, webpack } = this._parentCompilation.compiler;\n        const { EntryPlugin, NormalModule, library, node, sources } = webpack;\n        const childCompiler = this._parentCompilation.createChildCompiler('angular-compiler:resource', outputOptions, [\n            new node.NodeTemplatePlugin(outputOptions),\n            new node.NodeTargetPlugin(),\n            new EntryPlugin(context, entry, { name: 'resource' }),\n            new library.EnableLibraryPlugin('var'),\n        ]);\n        childCompiler.hooks.thisCompilation.tap('angular-compiler', (compilation, { normalModuleFactory }) => {\n            // If no data is provided, the resource will be read from the filesystem\n            if (data !== undefined) {\n                normalModuleFactory.hooks.resolveForScheme\n                    .for('angular-resource')\n                    .tap('angular-compiler', (resourceData) => {\n                    if (filePath) {\n                        resourceData.path = filePath;\n                        resourceData.resource = filePath;\n                    }\n                    return true;\n                });\n                NormalModule.getCompilationHooks(compilation)\n                    .readResourceForScheme.for('angular-resource')\n                    .tap('angular-compiler', () => data);\n                compilation[inline_resource_1.InlineAngularResourceSymbol] = data;\n            }\n            compilation.hooks.additionalAssets.tap('angular-compiler', () => {\n                const asset = compilation.assets[outputFilePath];\n                if (!asset) {\n                    return;\n                }\n                try {\n                    const output = this._evaluate(outputFilePath, asset.source().toString());\n                    if (typeof output === 'string') {\n                        compilation.assets[outputFilePath] = new sources.RawSource(output);\n                    }\n                }\n                catch (error) {\n                    // Use compilation errors, as otherwise webpack will choke\n                    compilation.errors.push(error);\n                }\n            });\n        });\n        let finalContent;\n        childCompiler.hooks.compilation.tap('angular-compiler', (childCompilation) => {\n            childCompilation.hooks.processAssets.tap({ name: 'angular-compiler', stage: webpack.Compilation.PROCESS_ASSETS_STAGE_REPORT }, () => {\n                var _a;\n                finalContent = (_a = childCompilation.assets[outputFilePath]) === null || _a === void 0 ? void 0 : _a.source().toString();\n                for (const { files } of childCompilation.chunks) {\n                    for (const file of files) {\n                        childCompilation.deleteAsset(file);\n                    }\n                }\n            });\n        });\n        return new Promise((resolve, reject) => {\n            childCompiler.runAsChild((error, _, childCompilation) => {\n                var _a, _b;\n                if (error) {\n                    reject(error);\n                    return;\n                }\n                else if (!childCompilation) {\n                    reject(new Error('Unknown child compilation error'));\n                    return;\n                }\n                // Workaround to attempt to reduce memory usage of child compilations.\n                // This removes the child compilation from the main compilation and manually propagates\n                // all dependencies, warnings, and errors.\n                const parent = childCompiler.parentCompilation;\n                if (parent) {\n                    parent.children = parent.children.filter((child) => child !== childCompilation);\n                    let fileDependencies;\n                    for (const dependency of childCompilation.fileDependencies) {\n                        // Skip paths that do not appear to be files (have no extension).\n                        // `fileDependencies` can contain directories and not just files which can\n                        // cause incorrect cache invalidation on rebuilds.\n                        if (!path.extname(dependency)) {\n                            continue;\n                        }\n                        if (data && containingFile && dependency.endsWith(entry)) {\n                            // use containing file if the resource was inline\n                            parent.fileDependencies.add(containingFile);\n                        }\n                        else {\n                            parent.fileDependencies.add(dependency);\n                        }\n                        // Save the dependencies for this resource.\n                        if (filePath) {\n                            const resolvedFile = (0, paths_1.normalizePath)(dependency);\n                            const entry = this._reverseDependencies.get(resolvedFile);\n                            if (entry) {\n                                entry.add(filePath);\n                            }\n                            else {\n                                this._reverseDependencies.set(resolvedFile, new Set([filePath]));\n                            }\n                            if (fileDependencies) {\n                                fileDependencies.add(dependency);\n                            }\n                            else {\n                                fileDependencies = new Set([dependency]);\n                                this._fileDependencies.set(filePath, fileDependencies);\n                            }\n                        }\n                    }\n                    parent.contextDependencies.addAll(childCompilation.contextDependencies);\n                    parent.missingDependencies.addAll(childCompilation.missingDependencies);\n                    parent.buildDependencies.addAll(childCompilation.buildDependencies);\n                    parent.warnings.push(...childCompilation.warnings);\n                    parent.errors.push(...childCompilation.errors);\n                    if (this.assetCache) {\n                        for (const { info, name, source } of childCompilation.getAssets()) {\n                            // Use the originating file as the cache key if present\n                            // Otherwise, generate a cache key based on the generated name\n                            const cacheKey = (_a = info.sourceFilename) !== null && _a !== void 0 ? _a : `!![GENERATED]:${name}`;\n                            this.assetCache.set(cacheKey, { info, name, source });\n                        }\n                    }\n                }\n                resolve({\n                    content: finalContent !== null && finalContent !== void 0 ? finalContent : '',\n                    success: ((_b = childCompilation.errors) === null || _b === void 0 ? void 0 : _b.length) === 0,\n                });\n            });\n        });\n    }\n    _evaluate(filename, source) {\n        var _a;\n        // Evaluate code\n        const context = {};\n        try {\n            vm.runInNewContext(source, context, { filename });\n        }\n        catch {\n            // Error are propagated through the child compilation.\n            return null;\n        }\n        if (typeof context.resource === 'string') {\n            return context.resource;\n        }\n        else if (typeof ((_a = context.resource) === null || _a === void 0 ? void 0 : _a.default) === 'string') {\n            return context.resource.default;\n        }\n        throw new Error(`The loader \"${filename}\" didn't return a string.`);\n    }\n    async get(filePath) {\n        var _a;\n        const normalizedFile = (0, paths_1.normalizePath)(filePath);\n        let compilationResult = (_a = this.fileCache) === null || _a === void 0 ? void 0 : _a.get(normalizedFile);\n        if (compilationResult === undefined) {\n            // cache miss so compile resource\n            compilationResult = await this._compile(filePath);\n            // Only cache if compilation was successful\n            if (this.fileCache && compilationResult.success) {\n                this.fileCache.set(normalizedFile, compilationResult);\n            }\n        }\n        return compilationResult.content;\n    }\n    async process(data, fileExtension, resourceType, containingFile) {\n        if (data.trim().length === 0) {\n            return '';\n        }\n        const compilationResult = await this._compile(undefined, data, fileExtension, resourceType, containingFile);\n        return compilationResult.content;\n    }\n}\nexports.WebpackResourceLoader = WebpackResourceLoader;\n"]},"metadata":{},"sourceType":"script"}